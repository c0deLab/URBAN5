{"version":3,"sources":["js/enums/ObjectsEnum.js","js/enums/CamerasEnum.js","js/ArrayHelpers.js","js/TopoModel.js","js/DesignModel.js","js/enums/ActionsEnum.js","js/Display2DView.js","js/Display2DController.js","js/DebuggingDisplaysViews.js","components/parts/DebuggingDisplays.js","components/parts/Display2D.js","js/CameraPathController.js","js/CameraPathView.js","components/parts/CameraPath.js","components/parts/Center.js","components/parts/Menu.js","components/parts/Top.js","js/enums/ButtonsEnum.js","components/routes/MainPage.js","App.js","index.js"],"names":["ObjectsEnum","CUBE","ROOFLEFT","ROOFRGHT","TREE","FOLIAGE","PERSON","CamerasEnum","NORTH","EAST","SOUTH","WEST","TOP","BOTTOM","getSafe","arr","x","y","length","getCellContext3x3","topLeft","top","topRight","left","center","right","bottomLeft","bottom","bottomRight","getEmpty2DArray","rows","columns","defaultValue","arguments","undefined","Array","i","j","TopoModel","xMax","yMax","_this","this","Object","classCallCheck","setTopoHeight","position","height","heights","getTopoSlice","camera","sliceIndex","heightsView","startHeight","endHeight","Array2D","hflip","transpose","Error","concat","heightPairs","context","Math","max","push","DesignModel","addObject","obj","z","foliagePosition","_getCell","_setCell","removeObject","zMax","slice","topo","getSlice","ySlice","xSlice","zSlice","_getYSlice","_getXSlice","_getZSlice","vflip","getBackgroundSlices","backgroundSliceIndex","backgroundSliceIndices","map","objects","object","_initObjects","_populate","ActionsEnum","STEPOUT","STEPIN","ADDCUBE","REMOVE","ROTATELT","ROTATERT","ADDTREE","ADDRFLFT","ADDRFRGT","Display2DView","canvas","model","draw","stage","removeAllChildren","topoSlice","_drawTopoSlice","drawBackground","forEach","s","_drawSlice","currentSlice","_drawGridPoints","update","clear","cornerY","line","createjs","Shape","cornerX","graphics","beginStroke","color","setStrokeStyle","r","moveTo","lineTo","endStroke","addChild","isDashed","row","cell","_drawCube","_drawTrunk","_drawFoliage","_drawRoofLeft","_drawRoofRight","point","contextX","contextY","drawRect","drawLeft","drawRight","drawTop","includes","drawBottom","_drawSquare","trunk","setStrokeDash","foliage","drawCircle","withLine","_drawLineSlantLeft","_drawLineSlantRight","shape","sx","dx","sy","dy","roof","Stage","gridSize","Display2DController","addListener","view","views","removeListener","toRemove","filter","clickX","clickY","modelPosition","getRelativePosition","updateViews","nextSlice","_setSliceYAxis","sliceYAxis","_setSliceXAxis","sliceXAxis","_setSliceZAxis","sliceZAxis","previousSlice","north","_setCamera","south","east","west","rotateLeft","rotateRight","v","floor","TestViewCameraSlice","controller","_this2","currentSliceIndex","TestViewCamera","axisLabel","_this3","DebuggingDisplays","wire","isWired","_this$props","props","document","getElementById","_this$props2","NSArray","EWArray","TBArray","id","react_default","a","createElement","key","className","width","style","transform","React","Component","Display2D","state","showDebug","setState","handleKeyDown","event","_this$state","keyCode","handleClick","offsetX","offsetY","normalizedX","normalizedY","action","addEventListener","removeEventListener","_this$state2","DebuggingDisplays_DebuggingDisplays","CameraPathController","path","animateCameraPath","p","setCameraPosition","setTimeout","CameraPathView","container","animate","requestAnimationFrame","hasPosition","renderer","render","scene","addModelToScene","_addCube","_addTree","_addFoliage","_addRoofLeft","_addRoofRight","geometry","THREE","wireframe","material","linewidth","lines","add","radius","vertices","faces","background","antialias","setPixelRatio","setSize","appendChild","domElement","CameraPath","cameraPath","Center","displayType","getDisplay","Display2D_Display2D","CameraPath_CameraPath","Menu","buttonElements","buttons","onClick","button","type","label","e","preventDefault","display","PureComponent","Top","user","welcome","isNewUser","name","ButtonsEnum","MainPage","onMenuClick","actionCode","float","padding","Top_Top","Center_Center","Menu_Menu","App","MainPage_MainPage","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.8bf489d1.chunk.js","sourcesContent":["// Various objects that can occupy a single cube in space\nconst ObjectsEnum = {\n  CUBE: 0,\n  ROOFLEFT: 1,\n  ROOFRGHT: 2,\n  TREE: 3,\n  FOLIAGE: 4,\n  PERSON: 5,\n};\n\nexport default ObjectsEnum;\n","// These are the 2D slice views of the 3D model\nconst CamerasEnum = {\n  NORTH: 0,\n  EAST: 1,\n  SOUTH: 2,\n  WEST: 3,\n  TOP: 4,\n  BOTTOM: 5,\n};\n\nexport default CamerasEnum;\n","/**\n* Helper functions for dealing with arrays.\n*/\n\nfunction getSafe(arr, x, y) {\n  if (x >= 0 && arr.length > 0 && arr[0].length && x < arr[0].length && y >= 0 && y < arr.length) {\n    return arr[y][x];\n  }\n  return null;\n}\n\n/**\n* Given a 2D array 'arr' and a position, get the position and all cells around it as an object\n* This can be unpacked as follows:\n* const { topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight } = context;\n*/\nexport function getCellContext3x3(arr, x, y) {\n  return {\n    topLeft: getSafe(arr, x - 1, y + 1),\n    top: getSafe(arr, x, y + 1),\n    topRight: getSafe(arr, x + 1, y + 1),\n    left: getSafe(arr, x - 1, y),\n    center: getSafe(arr, x, y),\n    right: getSafe(arr, x + 1, y),\n    bottomLeft: getSafe(arr, x - 1, y - 1),\n    bottom: getSafe(arr, x, y - 1),\n    bottomRight: getSafe(arr, x + 1, y - 1)\n  };\n}\n\n/**\n * Returns an empty 2D array\n * @param {int} rows - Number of rows in the array\n * @param {int} columns - Number of columns in the array\n * @param defaultValue - Default value for new array cells\n */\nexport function getEmpty2DArray(rows, columns, defaultValue = null) {\n  const arr = new Array(rows);\n  for (let i = 0; i < rows; i += 1) {\n    arr[i] = new Array(columns);\n    for (let j = 0; j < columns; j += 1) {\n      arr[i][j] = defaultValue;\n    }\n  }\n  return arr;\n}\n","import Array2D from 'array2d';\nimport CamerasEnum from './enums/CamerasEnum';\nimport { getEmpty2DArray, getCellContext3x3 } from './ArrayHelpers';\n\n/** Class represents the topograhy of a design world */\nexport default class TopoModel {\n  constructor(xMax, yMax) {\n    this.xMax = xMax;\n    this.yMax = yMax;\n\n    this.heights = getEmpty2DArray(this.yMax, this.xMax, 0);\n  }\n\n  /**\n   * Set the topography height at a given position\n   * @param {object} position - 2D position in the form {x:x,y:y}\n   * @param {int} height - The y value of the topo at the position\n   */\n  setTopoHeight = (position, height) => {\n    this.heights[position.y][position.x] = height;\n  };\n\n  /**\n   * Get a the 1D array of heights for the given slice at the camera angle\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getTopoSlice = (camera, sliceIndex) => {\n    // console.log(`camera ${camera} and sliceIndex ${sliceIndex}`);\n    let heightsView;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        heightsView = this.heights;\n        break;\n      case CamerasEnum.SOUTH:\n        heightsView = Array2D.hflip(this.heights);\n        break;\n      case CamerasEnum.EAST:\n        heightsView = Array2D.hflip(Array2D.transpose(this.heights));\n        break;\n      case CamerasEnum.WEST:\n        heightsView = Array2D.transpose(this.heights);\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        return null;\n      default:\n        throw new Error(`camera ${camera} is not recogniyed!`);\n    }\n\n    let startHeight;\n    let endHeight;\n    const heightPairs = [];\n\n    /*\n    For a given slice, get the highest corners of the current cube and\n    the cubes in front and back and left and right. Imagine a sheet hung\n    over stacks of cubes. That is what we represent. This is necessary\n    because we set the heights of the cells, but we render the heights\n    at half way points in the slices.\n    */\n    for (let i = 0; i < heightsView[sliceIndex].length; i += 1) {\n      // Get the context\n      const context = getCellContext3x3(heightsView, i, sliceIndex);\n      const {\n        topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight\n      } = context;\n      // Find the heightest points\n      startHeight = Math.max(topLeft, top, left, center, bottomLeft, bottom);\n      endHeight = Math.max(top, topRight, center, right, bottom, bottomRight);\n      heightPairs.push({ startHeight, endHeight });\n    }\n\n    return heightPairs;\n  };\n}\n","import Array2D from 'array2d';\nimport ObjectsEnum from './enums/ObjectsEnum';\nimport CamerasEnum from './enums/CamerasEnum';\nimport TopoModel from './TopoModel';\nimport { getEmpty2DArray } from './ArrayHelpers';\n\n/**\n * Represents the data of a design world\n *\n * The world is similar to Google Sketchup. The standard view \"North\" (looking North)\n * has x increasing from left to right, y, starting at 0 and increasing as it moves\n * away from you, and z increasing as it goes up.\n *\n */\nexport default class DesignModel {\n  constructor() {\n    this.xMax = 17;\n    this.yMax = 17;\n    this.zMax = 7;\n\n    // init empty world\n    this.objects = this._initObjects();\n    this.topo = new TopoModel(this.xMax, this.yMax);\n\n    // add some things to it to start\n    this._populate();\n  }\n\n  /**\n   * Add an object at a certain position.\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   * @param {int} obj - int representing the ObjectsEnum object\n   */\n  addObject = (position, obj) => {\n    switch (obj) {\n      case ObjectsEnum.TREE:\n        if (position.y < (this.yMax - 1)) {\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          const foliagePosition = { x, y, z };\n          // Check placement spot and placement spot above\n          if (this._getCell(position) === null && this._getCell(foliagePosition) === null) {\n            this._setCell(position, ObjectsEnum.TREE);\n            this._setCell(foliagePosition, ObjectsEnum.FOLIAGE);\n            return true;\n          }\n        }\n        return false;\n      default:\n        if (this._getCell(position) === null) {\n          this._setCell(position, obj);\n          return true;\n        }\n        break;\n    }\n\n    return false;\n  }\n\n  /**\n   * Remove the object at a certain position\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   */\n  removeObject = position => {\n    const obj = this._getCell(position);\n\n    switch (obj) {\n      case ObjectsEnum.TREE:\n        if (position.z < (this.zMax - 1)) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      case ObjectsEnum.FOLIAGE:\n        if (position.z > 0) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z -= 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      default:\n        this._setCell(position, null);\n        break;\n    }\n  }\n\n  /**\n   * For a given slice, get the highest corners of the current\n   * cube and the cubes in front and back and left and right. Imagine a sheet hung\n   * over stacks of cubes. That is what we represent.\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} slice - The current slice being viewed from that camera view\n   */\n  getTopoSlice = (camera, slice) => this.topo.getTopoSlice(camera, slice)\n\n  /**\n   * Returns 2D array of objects in the given slice\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getSlice = (camera, sliceIndex) => {\n    let ySlice;\n    let xSlice;\n    let zSlice;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        return this._getYSlice(sliceIndex);\n      case CamerasEnum.SOUTH:\n        ySlice = this._getYSlice(sliceIndex);\n        return Array2D.hflip(ySlice);\n      case CamerasEnum.EAST:\n        xSlice = this._getXSlice(sliceIndex);\n        return Array2D.hflip(xSlice);\n      case CamerasEnum.WEST:\n        return this._getXSlice(sliceIndex);\n      case CamerasEnum.BOTTOM:\n        zSlice = this._getZSlice(sliceIndex);\n        return Array2D.vflip(zSlice);\n      case CamerasEnum.TOP:\n        return this._getZSlice(sliceIndex);\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n  }\n\n  getBackgroundSlices = (camera, sliceIndex) => {\n    let backgroundSliceIndex = sliceIndex;\n    const backgroundSliceIndices = [];\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        while (backgroundSliceIndex < (this.yMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.EAST:\n        while (backgroundSliceIndex < (this.xMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.WEST:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n        while (backgroundSliceIndex < (this.zMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.TOP:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n    const backgroundSlices = backgroundSliceIndices.map(i => this.getSlice(camera, i));\n    return backgroundSlices;\n  }\n\n  _getZSlice = z => this.objects[z]\n\n  _getXSlice = x => {\n    const slice = getEmpty2DArray(this.zMax, this.yMax);\n    for (let z = 0; z < this.zMax; z += 1) {\n      for (let y = 0; y < this.yMax; y += 1) {\n        slice[z][y] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getYSlice = y => {\n    const slice = getEmpty2DArray(this.zMax, this.xMax);\n    for (let z = 0; z < this.zMax; z += 1) {\n      for (let x = 0; x < this.xMax; x += 1) {\n        slice[z][x] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getCell = position => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < this.xMax && y < this.yMax && z < this.zMax) {\n      return this.objects[z][y][x];\n    }\n    return null;\n  }\n\n  _setCell = (position, object) => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < this.xMax && y < this.yMax && z < this.zMax) {\n      this.objects[z][y][x] = object;\n    }\n  }\n\n  /** Create an empty version of the design model */\n  _initObjects = () => {\n    const objects = new Array(this.zMax);\n\n    for (let i = 0; i < objects.length; i += 1) {\n      objects[i] = getEmpty2DArray(this.yMax, this.xMax, null);\n    }\n\n    return objects;\n  }\n\n  /** Populates the design world with some objects */\n  _populate = () => {\n    // const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));\n\n    // for (let i = 0; i < 100; i += 1) {\n    //   this.addObject({x:getRandomInt(17), y:getRandomInt(17), z:getRandomInt(7)}, ObjectsEnum.CUBE);\n    // }\n\n    // this.addObject({ x: 9, y: 10 + 16, z: 0 }, ObjectsEnum.CUBE);\n    // this.addObject({ x: 10, y: 10 + 16, z: 0 }, ObjectsEnum.CUBE);\n    // this.addObject({ x: 9, y: 10 + 16, z: 1 }, ObjectsEnum.ROOFLEFT);\n    // this.addObject({ x: 10, y: 10 + 16, z: 1 }, ObjectsEnum.ROOFRGHT);\n    // this.addObject({ x: 11, y: 10 + 15, z: 0 }, ObjectsEnum.TREE);\n    // this.addObject({ x: 11, y: 10 + 15, z: 1 }, ObjectsEnum.FOLIAGE);\n\n    this.addObject({ x: 2, y: 10 + 0, z: 2 }, 0);\n    this.addObject({ x: 2, y: 10 + 0, z: 3 }, 0);\n    this.addObject({ x: 3, y: 10 + 0, z: 3 }, 0);\n    this.addObject({ x: 4, y: 10 + 0, z: 3 }, 0);\n    this.addObject({ x: 13, y: 10 + 0, z: 0 }, 0);\n    this.addObject({ x: 12, y: 10 + 0, z: 0 }, 0);\n    this.addObject({ x: 12, y: 10 + 0, z: 1 }, 0);\n    this.addObject({ x: 11, y: 10 + 0, z: 1 }, 0);\n    this.addObject({ x: 10, y: 10 + 0, z: 1 }, 0);\n    this.addObject({ x: 11, y: 10 + 0, z: 2 }, 2);\n    this.addObject({ x: 14, y: 10 + 0, z: 0 }, 3);\n    this.addObject({ x: 15, y: 10 + 0, z: 0 }, 3);\n    this.addObject({ x: 8, y: 10 + 0, z: 0 }, 3);\n    this.addObject({ x: 4, y: 10 + 1, z: 1 }, 0);\n    this.addObject({ x: 4, y: 10 + 1, z: 2 }, 0);\n    this.addObject({ x: 3, y: 10 + 1, z: 2 }, 0);\n    this.addObject({ x: 5, y: 10 + 1, z: 2 }, 0);\n    this.addObject({ x: 6, y: 10 + 1, z: 2 }, 0);\n    this.addObject({ x: 6, y: 10 + 1, z: 3 }, 0);\n    this.addObject({ x: 7, y: 10 + 1, z: 3 }, 0);\n    this.addObject({ x: 8, y: 10 + 1, z: 0 }, 0);\n    this.addObject({ x: 9, y: 10 + 1, z: 0 }, 0);\n    this.addObject({ x: 9, y: 10 + 1, z: 1 }, 0);\n    this.addObject({ x: 11, y: 10 + 1, z: 0 }, 0);\n    this.addObject({ x: 9, y: 10 + 2, z: 2 }, 0);\n    this.addObject({ x: 9, y: 10 + 2, z: 3 }, 1);\n\n    for (let y = 0; y < 17; y += 1) {\n      this.topo.setTopoHeight({ x: 0, y }, 2);\n      this.topo.setTopoHeight({ x: 1, y }, 2);\n      this.topo.setTopoHeight({ x: 2, y }, 2);\n      this.topo.setTopoHeight({ x: 3, y }, 1);\n      this.topo.setTopoHeight({ x: 4, y }, 1);\n      this.topo.setTopoHeight({ x: 5, y }, 1);\n      this.topo.setTopoHeight({ x: 0, y }, 2);\n      this.topo.setTopoHeight({ x: 1, y }, 2);\n      this.topo.setTopoHeight({ x: 2, y }, 2);\n      this.topo.setTopoHeight({ x: 3, y }, 1);\n      this.topo.setTopoHeight({ x: 4, y }, 1);\n      this.topo.setTopoHeight({ x: 5, y }, 1);\n    }\n  }\n}\n","const ActionsEnum = {\n  STEPOUT: 0, // Retreat to the previous slice\n  STEPIN: 1, // Advance to the next slice\n  ADDCUBE: 2, // Add a cube\n  REMOVE: 3, // Remove an object\n  ROTATELT: 4, // Rotate the view to the right\n  ROTATERT: 5, // Rotate the view to the left\n  ADDTREE: 6, // Add a Tree (trunk and foliage)\n  ADDRFLFT: 7, // Add Left Angle Roof\n  ADDRFRGT: 8, // Add Right Angle Roof\n};\n\nexport default ActionsEnum;\n","import { createjs } from '@createjs/easeljs';\nimport ObjectsEnum from './enums/ObjectsEnum';\nimport CamerasEnum from './enums/CamerasEnum';\nimport { getCellContext3x3 } from './ArrayHelpers';\n\n/** Class responsible for rednering a 2D slice */\nexport default class Display2DView {\n  constructor(canvas, model) {\n    this.model = model;\n    this.stage = new createjs.Stage(canvas);\n\n    this.gridSize = 17;\n    this.height = canvas.height;\n    this.r = (this.height - 2) / this.gridSize;\n    this.color = '#ffffff';\n    this.drawBackground = true; // Whether background slices should be rendered\n  }\n\n  /**\n   * Draw the given sliceIndex for the camera angle to the screen\n   * @param {int} camera - CamerasEnum\n   * @param {int} sliceIndex - Index of slice of model from given camera view to draw\n   */\n  draw = (camera, sliceIndex) => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    // Draw the topography\n    const topoSlice = this.model.getTopoSlice(camera, sliceIndex);\n    if (topoSlice) {\n      this._drawTopoSlice(topoSlice);\n    }\n\n    // Draw the background slices\n    if (this.drawBackground) {\n      const backgroundSlices = this.model.getBackgroundSlices(camera, sliceIndex);\n      backgroundSlices.forEach(s => this._drawSlice(camera, s, true));\n    }\n\n    // Draw the given slice\n    const currentSlice = this.model.getSlice(camera, sliceIndex);\n    this._drawSlice(camera, currentSlice);\n\n    // Draw the grid of appropriate size for this slice\n    this._drawGridPoints(currentSlice);\n\n    // Render to the screen\n    this.stage.update();\n  };\n\n  /** Clear the screen */\n  clear = () => {\n    this.stage.removeAllChildren();\n    this.stage.update();\n  };\n\n  /**\n   * Draw a line representing the 1D slice of topography\n   * @param {array} topoSlice - heights at given locations\n   */\n  _drawTopoSlice = topoSlice => {\n    const line = new createjs.Shape();\n    let cornerX = 1;\n    let cornerY;\n    line.graphics.beginStroke(this.color).setStrokeStyle(3);\n\n    // Draw the heights left to right as a connected line\n    topoSlice.forEach(s => {\n      const { startHeight, endHeight } = s;\n      cornerY = this.height - 1 - (startHeight * this.r);\n      line.graphics.moveTo(cornerX, cornerY);\n      cornerX += this.r;\n      cornerY = this.height - 1 - (endHeight * this.r);\n      line.graphics.lineTo(cornerX, cornerY);\n    });\n    line.graphics.endStroke();\n\n    this.stage.addChild(line);\n  };\n\n  /**\n   * Add a slice to the view\n   * @param {int} camera - CamerasEnum\n   * @param {int[][]} slice - 2D array representing slice to add\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  _drawSlice = (camera, slice, isDashed = false) => {\n    this.camera = camera;\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const cell = row[x];\n\n        // Get the context around the cell to determine which lines to join\n        const context = getCellContext3x3(slice, x, y);\n\n        switch (cell) {\n          case ObjectsEnum.CUBE:\n            this._drawCube(x, y, isDashed, context);\n            break;\n          case ObjectsEnum.TREE:\n            this._drawTrunk(x, y, isDashed);\n            break;\n          case ObjectsEnum.FOLIAGE:\n            this._drawFoliage(x, y, isDashed);\n            break;\n          case ObjectsEnum.ROOFLEFT:\n            this._drawRoofLeft(x, y, isDashed, context);\n            break;\n          case ObjectsEnum.ROOFRGHT:\n            this._drawRoofRight(x, y, isDashed, context);\n            break;\n          default:\n            // Draw nothing\n            break;\n        }\n      }\n    }\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  _drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * this.r;\n        const contextY = this.height - ((y + 0.5) * this.r);\n\n        point.graphics.beginStroke(this.color).setStrokeStyle(2).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /**\n   * Add a square representing a cube at the given x and y. Dashed version is for background slices.\n   * Remove lines that link this to adjacent cubes or roofs.\n   * @param {int} x\n   * @param {int} y\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   * @param {int[]} context - The surrounding area [top, left, bottom, right]\n   */\n  _drawCube = (x, y, isDashed = false, context) => {\n    let drawLeft;\n    let drawRight;\n\n    const {\n      top, left, right, bottom\n    } = context;\n    // Determine which lines to remove representing joins\n    const drawTop = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFLEFT, ObjectsEnum.ROOFRGHT].includes(top);\n    const drawBottom = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFLEFT, ObjectsEnum.ROOFRGHT].includes(bottom);\n\n    // Lines on the sides require knowing the camera angle\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n        drawLeft = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFLEFT].includes(left);\n        drawRight = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFRGHT].includes(right);\n        break;\n      default:\n        drawLeft = ![ObjectsEnum.CUBE].includes(left);\n        drawRight = ![ObjectsEnum.CUBE].includes(right);\n        break;\n    }\n\n    this._drawSquare(x, y, isDashed, drawLeft, drawTop, drawRight, drawBottom);\n  };\n\n  /**\n   * Draws the trunk of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  _drawTrunk = (x, y, isDashed = false) => {\n    const trunk = new createjs.Shape();\n\n    if (isDashed) {\n      trunk.graphics.setStrokeDash([3, 7], 0);\n    }\n\n    trunk.graphics.beginStroke(this.color).setStrokeStyle(3);\n    let cornerX = ((x + 0.5) * this.r) + 1;\n    let cornerY = this.height - (y * this.r) - 1;\n\n    // The trunk is a rectangle from the side and a dot from the ends\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n        // Draw a rectangle\n        trunk.graphics.drawRect(cornerX, cornerY, 2, -this.r);\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        // Draw a point\n        cornerX -= 2;\n        cornerY -= (0.5 * this.r) + 2;\n        trunk.graphics.drawRect(cornerX, cornerY, 6, 6);\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n\n    this.stage.addChild(trunk);\n  };\n\n  /**\n   * Draws the circle representing foliage of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawFoliage = (x, y, isDashed = false) => {\n    const foliage = new createjs.Shape();\n\n    if (isDashed) {\n      foliage.graphics.setStrokeDash([3, 7], 0);\n    }\n\n    foliage.graphics.beginStroke(this.color).setStrokeStyle(3);\n    const cornerX = ((x + 0.5) * this.r) + 1;\n    const cornerY = this.height - ((y + 0.45) * this.r) - 1;\n    foliage.graphics.drawCircle(cornerX, cornerY, this.r * 0.40);\n\n    this.stage.addChild(foliage);\n  };\n\n  /**\n   * Add a roof at the given x and y. It is slanted upwards to the East\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofLeft = (x, y, isDashed, context) => {\n    let withLine;\n    const { left, right } = context;\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        withLine = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFRGHT].includes(right);\n        this._drawLineSlantLeft(x, y, isDashed, withLine);\n        break;\n      case CamerasEnum.SOUTH:\n        withLine = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFRGHT].includes(left);\n        this._drawLineSlantRight(x, y, isDashed, withLine);\n        break;\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        this._drawSquare(x, y, isDashed);\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n  };\n\n  /**\n   * Add a roof at the given x and y. It is slanted upwards to the West\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofRight = (x, y, isDashed, context) => {\n    let withLine;\n    const { left, right } = context;\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        withLine = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFLEFT].includes(left);\n        this._drawLineSlantRight(x, y, isDashed, withLine);\n        break;\n      case CamerasEnum.SOUTH:\n        withLine = ![ObjectsEnum.CUBE, ObjectsEnum.ROOFLEFT].includes(right);\n        this._drawLineSlantLeft(x, y, isDashed, withLine);\n        break;\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        this._drawSquare(x, y, isDashed);\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n  };\n\n  /**\n   * Add a square at x,y. Optional parameters for dashed or not rendering certain sides\n   * @param {int} x\n   * @param {int} y\n   * @param {boolean} [isDashed]\n   * @param {boolean} [drawLeft]\n   * @param {boolean} [drawTop]\n   * @param {boolean} [drawRight]\n   * @param {boolean} [drawBottom]\n   */\n  _drawSquare = (x, y, isDashed = false, drawLeft = true, drawTop = true, drawRight = true, drawBottom = true) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(this.color).setStrokeStyle(3);\n\n    const sx = (x * this.r) + 1;\n    const dx = this.r;\n    const sy = this.height - (y * this.r) - 1;\n    const dy = -this.r;\n\n    if (isDashed) {\n      shape.graphics.setStrokeDash([3, 7], 0);\n    }\n\n    if (drawLeft) { // left\n      shape.graphics.moveTo(sx, sy).lineTo(sx, sy + dy);\n    }\n    if (drawTop) { // top\n      shape.graphics.moveTo(sx, sy + dy).lineTo(sx + dx, sy + dy);\n    }\n    if (drawRight) { // right\n      shape.graphics.moveTo(sx + dx, sy + dy).lineTo(sx + dx, sy);\n    }\n    if (drawBottom) { // bottom\n      shape.graphics.moveTo(sx + dx, sy).lineTo(sx, sy);\n    }\n\n    this.stage.addChild(shape);\n  };\n\n  /**\n   * Draw a line that slants down to the left\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawLineSlantLeft = (x, y, isDashed = false, withLine = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([3, 8.5], 0);\n    }\n\n    let cornerX = (x * this.r) + 1;\n    let cornerY = this.height - (y * this.r) - 1;\n    roof.graphics.beginStroke(this.color).setStrokeStyle(3);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += this.r;\n    cornerY -= this.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (withLine) {\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += this.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    this.stage.addChild(roof);\n  };\n\n  /**\n   * Draw a line that slants down to the right\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawLineSlantRight = (x, y, isDashed = false, withLine = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([3, 8.5], 0);\n    }\n\n    let cornerX = (x * this.r) + 1;\n    let cornerY = this.height - ((y + 1) * this.r) - 1;\n    roof.graphics.beginStroke(this.color).setStrokeStyle(3);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += this.r;\n    cornerY += this.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (withLine) {\n      cornerX -= this.r;\n      cornerY -= this.r;\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += this.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    this.stage.addChild(roof);\n  };\n}\n","import CamerasEnum from './enums/CamerasEnum';\n\n/** Class to control rotating to different slice angles and elevations and moving through slices */\nexport default class Display2DController {\n  constructor(model) {\n    this.gridSize = 17;\n    this.xMax = 17;\n    this.yMax = 17;\n    this.zMax = 7;\n    this.model = model;\n    this.sliceXAxis = 0; // for W/E view\n    this.sliceYAxis = 0; // for N/S view\n    this.sliceZAxis = 6; // for TOP/BOTTOM view\n    this.views = [];\n\n    this.north(); // By default, set to view looking north\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  /**\n   * Add the object at the normalized position. Remove any object that is there.\n   * @param {int} clickX - Normalized x value [0,1]\n   * @param {int} clickY - Normalized y value [0,1]\n   * @param {int} object - ObjectsEnum object\n   */\n  addObject = (clickX, clickY, object) => {\n    const modelPosition = this.getRelativePosition(clickX, clickY);\n    if (modelPosition) {\n      this.model.addObject(modelPosition, object);\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Remove the object at the normalized position.\n   * @param {int} clickX - Normalized x value [0,1]\n   * @param {int} clickY - Normalized y value [0,1]\n   */\n  removeObject = (clickX, clickY) => {\n    const modelPosition = this.getRelativePosition(clickX, clickY);\n    if (modelPosition) {\n      this.model.removeObject(modelPosition);\n      this.updateViews();\n    }\n  }\n\n  /** Move the view to the next slice, without exceeding the last slice */\n  nextSlice = () => {\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.sliceYAxis + 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.sliceYAxis - 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.sliceXAxis + 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.sliceXAxis - 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.sliceZAxis - 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.sliceZAxis + 1);\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n  }\n\n  /** Move the view to the previous slice, without going past 0 */\n  previousSlice = () => {\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.sliceYAxis - 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.sliceYAxis + 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.sliceXAxis - 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.sliceXAxis + 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.sliceZAxis + 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.sliceZAxis - 1);\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n  }\n\n  /** Set the camera view to NORTH and reset the slice to 0 */\n  north = () => this._setCamera('NORTH')\n\n  /** Set the camera view to SOUTH and reset the slice to 0 */\n  south = () => this._setCamera('SOUTH')\n\n  /** Set the camera view to EAST and reset the slice to 0 */\n  east = () => this._setCamera('EAST')\n\n  /** Set the camera view to WEST and reset the slice to 0 */\n  west = () => this._setCamera('WEST')\n\n  /** Set the camera view to TOP and reset the slice to 0 */\n  top = () => this._setCamera('TOP')\n\n  /** Set the camera view to BOTTOM and reset the slice to 0 */\n  bottom = () => this._setCamera('BOTTOM')\n\n  rotateLeft = () => {\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  rotateRight = () => {\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  /**\n   * Set the slice in view in the Z axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceZAxis = slice => {\n    if (slice >= 0 && slice < this.zMax) {\n      this.sliceZAxis = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the X axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceXAxis = slice => {\n    if (slice >= 0 && slice < this.xMax) {\n      this.sliceXAxis = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the Y axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceYAxis = slice => {\n    if (slice >= 0 && slice < this.yMax) {\n      this.sliceYAxis = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the camera view to the given view and reset the slice to 0\n   * @param {String} camera - CamerasEnum name\n   */\n  _setCamera = camera => {\n    this.camera = CamerasEnum[camera];\n    this.updateViews();\n  }\n\n  /** Draw the current view from the current camera angle and sliceIndex */\n  updateViews = () => {\n    let sliceIndex;\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n        sliceIndex = this.sliceYAxis;\n        break;\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        sliceIndex = this.sliceXAxis;\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        sliceIndex = this.sliceZAxis;\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n\n    this.views.forEach(v => v.draw(this.camera, sliceIndex));\n  }\n\n  /**\n   * Returns a 3D vector of the model position based on the normalized click\n   * @param {float} clickX - Normalized x between 0 and 1\n   * @param {float} clickY - Normalized y between 0 and 1\n   */\n  getRelativePosition = (clickX, clickY) => {\n    // get the x, y position in the scale of the model\n    const x = Math.floor(clickX * this.gridSize);\n    const y = this.gridSize - 1 - Math.floor(clickY * this.gridSize);\n\n    // Check that it is a legal 3D index\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        if (y >= this.zMax) {\n          return null;\n        }\n        break;\n      default:\n        // do nothing\n    }\n\n    // translate this position along with the current slice to the 3D model indeces\n    switch (this.camera) {\n      case CamerasEnum.NORTH:\n        return { x, y: this.sliceYAxis, z: y };\n      case CamerasEnum.SOUTH:\n        return { x: this.gridSize - 1 - x, y: this.sliceZAxis, z: y };\n      case CamerasEnum.EAST:\n        return { x: this.sliceXAxis, y: this.gridSize - 1 - x, z: y };\n      case CamerasEnum.WEST:\n        return { x: this.sliceXAxis, y: x, z: y };\n      case CamerasEnum.BOTTOM:\n        return { x, y: this.gridSize - 1 - y, z: this.sliceZAxis };\n      case CamerasEnum.TOP:\n        return { x, y, z: this.sliceZAxis };\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n  }\n}\n","import Display2DView from './Display2DView';\nimport CamerasEnum from './enums/CamerasEnum';\n\nexport class TestViewSliceOffset {\n  constructor(canvas, model, sliceOffset) {\n    this.view = new Display2DView(canvas, model);\n    this.sliceOffset = sliceOffset;\n    this.canvas = canvas;\n  }\n\n  draw = (camera, sliceIndex) => {\n    const sliceIndexOffset = sliceIndex + this.sliceOffset;\n    switch (camera) {\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.NORTH:\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n        if (sliceIndexOffset >= 0 && sliceIndexOffset < 17) {\n          this.view.draw(camera, sliceIndexOffset);\n        } else {\n          const ctx = this.canvas.getContext('2d');\n          ctx.fillStyle = 'white';\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        if (sliceIndexOffset >= 0 && sliceIndexOffset < 7) {\n          this.view.draw(camera, sliceIndexOffset);\n        } else {\n          const ctx = this.canvas.getContext('2d');\n          ctx.fillStyle = 'white';\n          ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n  };\n}\n\nexport class TestViewCameraSlice {\n  constructor(canvas, model, controller, camera, sliceIndex) {\n    this.view = new Display2DView(canvas, model);\n    this.camera = camera;\n    this.sliceIndex = sliceIndex;\n    this.controller = controller;\n    this.view.drawBackground = false;\n  }\n\n  draw = () => {\n    let currentSliceIndex;\n    switch (this.camera) {\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.NORTH:\n        currentSliceIndex = this.controller.sliceYAxis;\n        break;\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n        currentSliceIndex = this.controller.sliceXAxis;\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        currentSliceIndex = this.controller.sliceZAxis;\n        break;\n      default:\n        throw new Error(`camera ${this.camera} is not recognized!`);\n    }\n    if (currentSliceIndex === this.sliceIndex) {\n      this.view.color = '#ff0000';\n    } else {\n      this.view.color = '#ffffff';\n    }\n    this.view.draw(this.camera, this.sliceIndex);\n  }\n}\n\nexport class TestViewCamera {\n  constructor(canvas, model, controller, camera, axisLabel) {\n    this.view = new Display2DView(canvas, model);\n    this.controller = controller;\n    this.camera = camera;\n    this.axisLabel = axisLabel;\n    this.view.drawBackground = false;\n  }\n\n  draw = () => this.view.draw(this.camera, this.controller[this.axisLabel]);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './DebuggingDisplays.css';\n\nimport CamerasEnum from '../../js/enums/CamerasEnum';\nimport { TestViewCameraSlice, TestViewCamera } from '../../js/DebuggingDisplaysViews';\n\n/* global document */\n\n/** Class that renders various views helpful for debugging. */\nexport default class DebuggingDisplays extends React.Component {\n  static propTypes = {\n    controller: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    model: PropTypes.object.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    // Implement controller.removeListener()\n  }\n\n  wire = () => {\n    if (this.isWired) {\n      return;\n    }\n\n    const { controller, model } = this.props;\n    if (!controller || !model) {\n      return;\n    }\n\n    for (let y = 0; y < 17; y += 1) {\n      controller.addListener(new TestViewCameraSlice(document.getElementById(`testCanvasArrNS${y}`), model, controller, CamerasEnum.NORTH, y));\n    }\n    for (let x = 0; x < 17; x += 1) {\n      controller.addListener(new TestViewCameraSlice(document.getElementById(`testCanvasArrEW${x}`), model, controller, CamerasEnum.EAST, x));\n    }\n    for (let z = 0; z < 7; z += 1) {\n      controller.addListener(new TestViewCameraSlice(document.getElementById(`testCanvasArrTB${z}`), model, controller, CamerasEnum.TOP, z));\n    }\n\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas2'), model, controller, CamerasEnum.SOUTH, 'sliceYAxis'));\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas3'), model, controller, CamerasEnum.NORTH, 'sliceYAxis'));\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas4'), model, controller, CamerasEnum.EAST, 'sliceXAxis'));\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas5'), model, controller, CamerasEnum.WEST, 'sliceXAxis'));\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas6'), model, controller, CamerasEnum.TOP, 'sliceZAxis'));\n    controller.addListener(new TestViewCamera(document.getElementById('testCanvas7'), model, controller, CamerasEnum.BOTTOM, 'sliceZAxis'));\n\n    controller.updateViews();\n    this.isWired = true;\n  }\n\n  render() {\n    const { controller, model } = this.props;\n    const camera = -1;\n\n    const NSArray = [];\n    const EWArray = [];\n    const TBArray = [];\n    if (controller && model) {\n      for (let y = 16; y >= 0; y -= 1) {\n        const id = `testCanvasArrNS${y}`;\n        NSArray.push(<div key={`ns${y}`} className=\"testArr\"><canvas id={id} width={120} height={120} /></div>);\n      }\n      for (let x = 0; x < 17; x += 1) {\n        const id = `testCanvasArrEW${x}`;\n        EWArray.push(<div key={`ew${x}`} className=\"testArr\"><canvas id={id} width={200} height={200} /></div>);\n      }\n      for (let z = 6; z >= 0; z -= 1) {\n        const id = `testCanvasArrTB${z}`;\n        TBArray.push(<div key={`tb${z}`} className=\"testArr\"><canvas id={id} width={200} height={200} /></div>);\n      }\n    }\n\n    return (\n      <div className=\"display-developer\">\n        <div>\n          <div style={{ position: 'absolute', top: 0, left: 100 }} className=\"northsouth\">\n            <h3>NORTH/SOUTH</h3>\n            {NSArray}\n          </div>\n          <div style={{ position: 'absolute', top: 0, left: 300 }}>\n            <h3>TOP/BOTTOM</h3>\n            {TBArray}\n          </div>\n          <div style={{ position: 'absolute', top: 50, left: 600 }}>\n            <h3>Key Controls</h3>\n            <ul>\n              <li>v: 2D slice view</li>\n              <li>b: 3D walk through</li>\n              <li>x: north slice view</li>\n              <li>a: east slice view</li>\n              <li>w: south slice view</li>\n              <li>d: west slice view</li>\n              <li>s: top plan view</li>\n              <li>c: bottom plan view</li>\n              <li>1: add cube</li>\n              <li>2: add tree</li>\n              <li>3: add roof left</li>\n              <li>4: add roof right</li>\n              <li>5: remove element</li>\n              <li>↑: move forward in 3D</li>\n              <li>↓: move backward in 3D</li>\n            </ul>\n          </div>\n        </div>\n        <div style={{ position: 'absolute', top: 1000, left: 300 }} className=\"horizontal\">\n          <h3>EAST/WEST</h3>\n          {EWArray}\n        </div>\n        <div style={{ position: 'absolute', top: 0, right: 220 }}>\n          <table>\n            <tbody>\n              <tr>\n                <td />\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.SOUTH ? 'red' : 'black' }}>SOUTH</h2>\n                  <canvas id=\"testCanvas2\" width={200} height={200} style={{ transform: 'rotateX(180deg) rotateY(180deg)' }} />\n                </td>\n                <td />\n              </tr>\n              <tr>\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.EAST ? 'red' : 'black' }}>EAST</h2>\n                  <canvas id=\"testCanvas4\" width={200} height={200} style={{ transform: 'rotateZ(90deg)' }} />\n                </td>\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.TOP ? 'red' : 'black' }}>TOP</h2>\n                  <canvas id=\"testCanvas6\" width={200} height={200} />\n                </td>\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.WEST ? 'red' : 'black' }}>WEST</h2>\n                  <canvas id=\"testCanvas5\" width={200} height={200} style={{ transform: 'rotateZ(-90deg)' }} />\n                </td>\n              </tr>\n              <tr>\n                <td />\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.NORTH ? 'red' : 'black' }}>NORTH</h2>\n                  <canvas id=\"testCanvas3\" width={200} height={200} />\n                </td>\n                <td>\n                  <h2 style={{ color: camera === CamerasEnum.BOTTOM ? 'red' : 'black' }}>BOTTOM</h2>\n                  <canvas id=\"testCanvas7\" width={200} height={200} />\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ActionsEnum from '../../js/enums/ActionsEnum';\nimport ObjectsEnum from '../../js/enums/ObjectsEnum';\nimport Display2DView from '../../js/Display2DView';\nimport Display2DController from '../../js/Display2DController';\nimport DebuggingDisplays from './DebuggingDisplays';\n\n/* global document */\n\n/** Class for the 2D slice views */\nexport default class Display2D extends React.Component {\n  static propTypes = {\n    action: PropTypes.number.isRequired, // eslint-disable-line react/forbid-prop-types\n    model: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    controller: null,\n    showDebug: false\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('display2D');\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.canvas.addEventListener('click', this.handleClick);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    this.canvas.removeEventListener('click', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { model } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !model) {\n      return;\n    }\n    this.isWired = true;\n\n    // Create controller and 2D slice view\n    const controller = new Display2DController(model);\n    this.view = new Display2DView(this.canvas, model);\n    controller.addListener(this.view);\n    // Trigger initial render\n    controller.updateViews();\n\n    this.setState({\n      controller\n    });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    const { controller, showDebug } = this.state;\n\n    switch (event.keyCode) {\n      case 87: // w\n        controller.south();\n        break;\n      case 88: // x\n        controller.north();\n        break;\n      case 65: // a\n        controller.east();\n        break;\n      case 68: // d\n        controller.west();\n        break;\n      case 83: // s\n        controller.top();\n        break;\n      case 67: // f\n        controller.bottom();\n        break;\n      case 38: // up arrow\n        controller.nextSlice();\n        break;\n      case 40: // down arrow\n        controller.previousSlice();\n        break;\n      case 80: // p\n        this.setState({\n          showDebug: !showDebug\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick = event => {\n    const { controller } = this.state;\n    // There is a 1px padding around the edges to not cut off the graphics awkwardly\n    // Ignore clicks in that range\n    if (event.offsetX === 0 || event.offsetX === (this.width - 1)\n        || event.offsetY === 0 || event.offsetY === (this.height - 1)) {\n      return;\n    }\n\n    // Offset click for 1px padding and find normalized position\n    const normalizedX = (event.offsetX - 1) / this.width;\n    const normalizedY = (event.offsetY - 1) / this.height;\n\n    // Execute the currently selected action from the light button at the click location\n    const { action } = this.props;\n    switch (action) {\n      case ActionsEnum.STEPOUT:\n        controller.previousSlice();\n        break;\n      case ActionsEnum.STEPIN:\n        controller.nextSlice();\n        break;\n      case ActionsEnum.ADDCUBE:\n        controller.addObject(normalizedX, normalizedY, ObjectsEnum.CUBE);\n        break;\n      case ActionsEnum.REMOVE:\n        controller.removeObject(normalizedX, normalizedY);\n        break;\n      case ActionsEnum.ROTATELT:\n        controller.rotateLeft();\n        break;\n      case ActionsEnum.ADDTREE:\n        controller.addObject(normalizedX, normalizedY, ObjectsEnum.TREE);\n        break;\n      case ActionsEnum.ADDRFLFT:\n        controller.addObject(normalizedX, normalizedY, ObjectsEnum.ROOFLEFT);\n        break;\n      case ActionsEnum.ADDRFRGT:\n        controller.addObject(normalizedX, normalizedY, ObjectsEnum.ROOFRGHT);\n        break;\n      default:\n        // nothing\n        break;\n    }\n  }\n\n  render() {\n    const { controller, showDebug } = this.state;\n    const { model } = this.props;\n\n    this.width = 852;\n    this.height = 852;\n    return (\n      <div>\n        <canvas id=\"display2D\" width={this.width} height={this.height} />\n        {showDebug && model && controller ? (<DebuggingDisplays controller={controller} model={model} />) : null}\n      </div>\n    );\n  }\n}\n","/** Class for controlling a 3D view mimicking a walk through of the model */\nexport default class CameraPathController {\n  constructor(model, path) {\n    this.model = model;\n    this.r = 50;\n    this.path = path;\n    this.i = 0;\n    this.views = [];\n\n    // Start animation of path, after a delay to allow the page to render\n    setTimeout(() => this.animateCameraPath(), 500);\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  /** Every 500ms update the camera position of the views to the next in the path */\n  animateCameraPath = () => {\n    if (this.i < this.path.length - 1) {\n      this.i += 1;\n      const p = this.path[this.i];\n      this.views.forEach(v => v.setCameraPosition(p));\n    }\n    setTimeout(() => this.animateCameraPath(), 500);\n  }\n}\n","import * as THREE from 'three';\nimport ObjectsEnum from './enums/ObjectsEnum';\n\n/* global requestAnimationFrame */\n\n/** Class responsible for drawing a 3D view of the model */\nexport default class CameraPathView {\n  constructor(container, model) {\n    this.container = container;\n\n    this.width = 852;\n    this.height = 852;\n    this.gridSize = 17;\n    this.xMax = 17;\n    this.yMax = 17;\n    this.zMax = 7;\n    this.r = (this.width - 2) / this.gridSize;\n\n    // Set to true once the controller gives it a camera position\n    this.hasPosition = false;\n\n    // Setup Three.js scene, camera, and renderer\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x000000);\n    this.camera = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 1000);\n    this.scene.add(this.camera);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setPixelRatio(1);\n    this.renderer.setSize(this.width, this.height);\n    this.container.appendChild(this.renderer.domElement);\n\n    this.addModelToScene(model);\n    // TODO: Add topography to scene\n\n    this.animate();\n  }\n\n  animate = () => {\n    requestAnimationFrame(this.animate);\n    // Wait until the controller has set the position to start animating\n    if (!this.hasPosition) {\n      return;\n    }\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Sets the camera position according to the given point\n   * @param {object} p - A 3D point\n   */\n  setCameraPosition = p => {\n    this.hasPosition = true;\n    const { x, y, z } = p;\n    this.camera.position.x = x * this.r;\n    this.camera.position.y = z * this.r + (this.r / 2);\n    this.camera.position.z = -y * this.r;\n  }\n\n  /**\n   * Add the objects in the model to the scene\n   * TODO: Make buildings join properly\n   * TODO: Make trees match URBAN5 look\n   * @param {object} model - DesignModel\n   */\n  addModelToScene = model => {\n    if (!model) {\n      return;\n    }\n\n    const { objects } = model;\n    for (let z = 0; z < this.zMax; z += 1) {\n      for (let y = 0; y < this.yMax; y += 1) {\n        for (let x = 0; x < this.xMax; x += 1) {\n          const object = objects[z][y][x];\n          switch (object) {\n            case ObjectsEnum.CUBE:\n              this._addCube(x, y, z);\n              break;\n            case ObjectsEnum.TREE:\n              this._addTree(x, y, z);\n              break;\n            case ObjectsEnum.FOLIAGE:\n              this._addFoliage(x, y, z);\n              break;\n            case ObjectsEnum.ROOFLEFT:\n              this._addRoofLeft(x, y, z);\n              break;\n            case ObjectsEnum.ROOFRGHT:\n              this._addRoofRight(x, y, z);\n              break;\n            default:\n              // Draw nothing\n              break;\n          }\n        }\n      }\n    }\n  }\n\n  _addCube = (x, y, z) => {\n    const geometry = new THREE.BoxGeometry(this.r, this.r, this.r);\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 10 });\n    const lines = new THREE.LineSegments(wireframe, material);\n    const position = { x: x * this.r, y: z * this.r, z: -y * this.r };\n    lines.position.x = position.x + (this.r / 2);\n    lines.position.y = position.y + (this.r / 2);\n    lines.position.z = position.z - (this.r / 2);\n    this.scene.add(lines);\n  }\n\n  _addTree = (x, y, z) => {\n    const radius = this.r / 10;\n    const geometry = new THREE.CylinderGeometry(radius, radius, this.r, 6);\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 10 });\n    const lines = new THREE.LineSegments(wireframe, material);\n    const position = { x: x * this.r, y: z * this.r, z: -y * this.r };\n    lines.position.x = position.x + (this.r / 2);\n    lines.position.y = position.y + (this.r / 2);\n    lines.position.z = position.z - (this.r / 2);\n    this.scene.add(lines);\n  }\n\n  _addFoliage = (x, y, z) => {\n    const geometry = new THREE.SphereGeometry(this.r / 2, 6, 6);\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 10 });\n    const lines = new THREE.LineSegments(wireframe, material);\n    const position = { x: x * this.r, y: z * this.r, z: -y * this.r };\n    lines.position.x = position.x + (this.r / 2);\n    lines.position.y = position.y + (this.r / 2);\n    lines.position.z = position.z - (this.r / 2);\n    this.scene.add(lines);\n  }\n\n  _addRoofLeft = (x, y, z) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, 0, -this.r),\n      new THREE.Vector3(this.r, 0, -this.r),\n      new THREE.Vector3(this.r, 0, 0),\n      new THREE.Vector3(this.r, this.r, 0),\n      new THREE.Vector3(this.r, this.r, -this.r)\n    );\n    geometry.faces.push(\n      new THREE.Face3(0, 1, 2, 3),\n      new THREE.Face3(2, 3, 4, 5),\n      new THREE.Face3(0, 3, 4),\n      new THREE.Face3(1, 2, 5),\n      new THREE.Face3(0, 1, 4, 5)\n    );\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 10 });\n    const lines = new THREE.LineSegments(wireframe, material);\n    const position = { x: x * this.r, y: z * this.r, z: -y * this.r };\n    lines.position.x = position.x;\n    lines.position.y = position.y;\n    lines.position.z = position.z;\n    this.scene.add(lines);\n  }\n\n  _addRoofRight = (x, y, z) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(\n      new THREE.Vector3(0, 0, 0),\n      new THREE.Vector3(0, 0, -this.r),\n      new THREE.Vector3(this.r, 0, -this.r),\n      new THREE.Vector3(this.r, 0, 0),\n      new THREE.Vector3(0, this.r, 0),\n      new THREE.Vector3(0, this.r, -this.r)\n    );\n    geometry.faces.push(\n      new THREE.Face3(0, 1, 2, 3),\n      new THREE.Face3(2, 3, 4, 5),\n      new THREE.Face3(0, 3, 4),\n      new THREE.Face3(1, 2, 5),\n      new THREE.Face3(0, 1, 4, 5)\n    );\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const material = new THREE.LineBasicMaterial({ color: 0xffffff, linewidth: 10 });\n    const lines = new THREE.LineSegments(wireframe, material);\n    const position = { x: x * this.r, y: z * this.r, z: -y * this.r };\n    lines.position.x = position.x;\n    lines.position.y = position.y;\n    lines.position.z = position.z;\n    this.scene.add(lines);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CameraPathController from '../../js/CameraPathController';\nimport CameraPathView from '../../js/CameraPathView';\n\n/* global document */\n\n/** Class for the 3D fly throughs of the model */\nexport default class CameraPath extends React.Component {\n  static propTypes = {\n    model: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    cameraPath: PropTypes.array.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.container = document.getElementById('display3D');\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    switch (event.keyCode) {\n      case 87: // w Forward\n        this.camera.position.z -= this.r;\n        break;\n      case 83: // s Back\n        this.camera.position.z += this.r;\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the DOM.\n   */\n  wire = () => {\n    const { model, cameraPath } = this.props;\n    if (this.isWired || !model || !cameraPath) {\n      return;\n    }\n    this.isWired = true;\n\n    const controller = new CameraPathController(model, cameraPath);\n    this.view = new CameraPathView(this.container, model);\n    controller.addListener(this.view);\n  }\n\n  render() {\n    this.width = 852;\n    this.height = 852;\n\n    return (\n      <div id=\"display3D\" style={{ width: this.width, height: this.height }} />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport DesignModel from '../../js/DesignModel';\nimport Display2D from './Display2D';\nimport CameraPath from './CameraPath';\n\n/* global document */\n\n/** Class for the main display of URBAN5 that can switch between various views */\nexport default class Center extends React.Component {\n  static propTypes = {\n    action: PropTypes.number.isRequired\n  }\n\n  state = {\n    model: null,\n    displayType: '2D'\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n\n    const model = new DesignModel();\n    this.setState({\n      model\n    });\n  }\n\n  handleKeyDown = event => {\n    // Switch between views\n    switch (event.keyCode) {\n      case 86: // v\n        this.setState({\n          displayType: '2D'\n        });\n        break;\n      case 66: // b\n        this.setState({\n          displayType: 'PATH'\n        });\n        break;\n      default:\n        break;\n    }\n  }\n\n  getDisplay = () => {\n    const { action } = this.props;\n    const {\n      model, displayType\n    } = this.state;\n\n    if (!model || !action) {\n      return null;\n    }\n\n    // Test camera path, TODO: should be set by user selection\n    const cameraPath = [];\n    for (let i = 0; i < 10; i += 1) {\n      cameraPath.push({ x: 10, y: i, z: 0 });\n    }\n\n    switch (displayType) {\n      case '2D':\n        return (<Display2D action={action} model={model} />);\n      case 'PATH':\n        return (<CameraPath model={model} cameraPath={cameraPath} />);\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        {this.getDisplay()}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class for the side panel of 'light buttons' */\nexport default class Menu extends React.PureComponent {\n  static propTypes = {\n    // Array of ButtonsEnum to show\n    buttons: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    // Function to call when button is clicked\n    onClick: PropTypes.func.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  render() {\n    const buttonElements = [];\n\n    const { buttons, onClick } = this.props;\n    if (buttons) {\n      buttons.forEach(button => {\n        buttonElements.push((\n          <button\n            type=\"button\"\n            key={button.label}\n            button={button}\n            onClick={e => {\n              e.preventDefault();\n              onClick(button);\n            }}\n            style={{ display: 'block' }}\n          >\n            {button.label}\n          </button>\n        ));\n      });\n    }\n\n    return (\n      <div>\n        {buttonElements}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class for the top of the screen where text interaction with URBAN5 takes place */\nexport default class Top extends React.PureComponent {\n  static propTypes = {\n    // An object representing the user data that the system interacts with and updates\n    user: PropTypes.object.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  render() {\n    const { user } = this.props;\n\n    let welcome = 'Welcome';\n\n    if (user) {\n      welcome = `Welcome ${!user.isNewUser ? 'back ' : ''} ${user.name} this is URBAN5.`;\n    }\n    return (\n      <div>\n        <span className=\"mono-text\">{welcome}</span>\n      </div>\n    );\n  }\n}\n","import ActionsEnum from './ActionsEnum';\n\n// Buttons pair a label which is 8 chars of fixed-width to an action\nconst ButtonsEnum = {\n  STEPOUT: { label: 'STEP OUT', action: ActionsEnum.STEPOUT },\n  STEPIN: { label: 'STEP  IN', action: ActionsEnum.STEPIN },\n  ADDCUBE: { label: 'ADD CUBE', action: ActionsEnum.ADDCUBE },\n  REMOVE: { label: 'RE  MOVE', action: ActionsEnum.REMOVE },\n  ROTATELT: { label: 'ROTATELT', action: ActionsEnum.ROTATELT },\n  ROTATERT: { label: 'ROTATERT', action: ActionsEnum.ROTATERT },\n  ADDTREE: { label: 'ADD TREE', action: ActionsEnum.ADDTREE },\n  ADDRFLFT: { label: 'ADDRFLFT', action: ActionsEnum.ADDRFLFT },\n  ADDRFRGT: { label: 'ADDRFRGT', action: ActionsEnum.ADDRFRGT },\n};\n\nexport default ButtonsEnum;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Center from '../parts/Center';\nimport Menu from '../parts/Menu';\nimport Top from '../parts/Top';\nimport ButtonsEnum from '../../js/enums/ButtonsEnum';\nimport ActionsEnum from '../../js/enums/ActionsEnum';\n\n/* global document */\n\n/** Class for the rendering the main view with top, menu, and center panels */\nexport default class MainPage extends React.Component {\n  static propTypes = {\n    user: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    action: 2, // Default action is ADDCUBE\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  onMenuClick = button => {\n    this.setState({\n      action: button.action,\n    });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    let actionCode;\n    switch (event.keyCode) {\n      case 48: // 0\n        actionCode = ActionsEnum.REMOVE;\n        break;\n      case 49: // 1\n        actionCode = ActionsEnum.ADDCUBE;\n        break;\n      case 50: // 2\n        actionCode = ActionsEnum.ADDTREE;\n        break;\n      case 51: // 3\n        actionCode = ActionsEnum.ADDRFLFT;\n        break;\n      case 52: // 4\n        actionCode = ActionsEnum.ADDRFRGT;\n        break;\n      case 53: // 5\n        actionCode = ActionsEnum.REMOVE;\n        break;\n      case 54: // 6\n        actionCode = ActionsEnum.ADDCUBE;\n        break;\n      case 55: // 7\n        actionCode = ActionsEnum.ADDRFLFT;\n        break;\n      case 56: // 8\n        actionCode = ActionsEnum.ADDRFRGT;\n        break;\n      default:\n        break;\n    }\n\n    if (actionCode) {\n      this.setState({\n        action: actionCode,\n      });\n    }\n  }\n\n  render() {\n    const buttons = [\n      ButtonsEnum.ADDCUBE,\n      ButtonsEnum.ADDTREE,\n      ButtonsEnum.ADDRFLFT,\n      ButtonsEnum.ADDRFRGT,\n      ButtonsEnum.REMOVE\n    ];\n\n    const { user } = this.props;\n    const { action } = this.state;\n    return (\n      <div>\n        <div style={{ width: '864px', height: '100%', float: 'left' }}>\n          <div style={{ width: '864px', height: '160px' }}>\n            <div style={{ padding: '20px' }}>\n              <Top user={user} />\n            </div>\n          </div>\n          <div style={{ width: '852px', height: '852px', padding: '5px' }}>\n            <Center action={action} />\n          </div>\n        </div>\n        <div style={{ width: '160px', height: '100%', float: 'left' }}>\n          <div style={{ padding: '20px' }}>\n            <Menu buttons={buttons} onClick={this.onMenuClick} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport MainPage from './components/routes/MainPage';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    user: {\n      isNewUser: false,\n      name: 'Erik',\n    },\n  };\n\n  render() {\n    const { user } = this.state;\n    return (\n      <div className=\"app\">\n        <MainPage user={user} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}