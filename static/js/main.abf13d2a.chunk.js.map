{"version":3,"sources":["js/data/Constraint.js","js/helpers/TextToConstraint.js","js/data/Monitor.js","js/enums/ObjectsEnum.js","js/enums/CamerasEnum.js","js/helpers/Helpers.js","js/enums/SurfacesEnum.js","js/data/Roof.js","js/data/Cube.js","js/data/Tree.js","js/enums/TypeToConstructorEnum.js","js/data/Design.js","js/data/Topo.js","js/data/U5Session.js","js/helpers/Sounds.js","js/data/U5SessionFactory.js","components/LoadPage.js","components/TextInput.js","components/StartPage.js","components/Menu.js","js/enums/ActionsEnum.js","components/Top.js","js/ui/TopoRenderer2D.js","js/ui/DesignRenderer2D.js","js/ui/Display2DView.js","js/ui/Display2DController.js","components/Draw.js","js/ui/EditTopoRenderer2D.js","js/ui/TopoView.js","components/Topo.js","components/Surface.js","js/ui/CameraPathController.js","js/ui/TopoRenderer3D.js","js/ui/DesignRenderer3D.js","js/ui/CameraPathView.js","components/CameraPath.js","js/helpers/CalculatePath.js","components/ChoosePath.js","components/DisplayWalkthrough.js","components/MainPage.js","debugging/DebuggingConstraints.js","debugging/Debugging3D.js","App.js","index.js"],"names":["Constraint","data","_this","this","Object","_Users_erikulberg_Desktop_urban5_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","isViolated","design","objectsOfType","type","getBuildings","objects","getObjects","filter","item","parseInt","map","object","propValues","prop","length","calculatedValue","fn","reduce","sum","num","max","Math","min","calculatedResult","eval","concat","comp","value","console","log","result","isSameType","otherConstraint","JSON","stringify","text","removeFlag","possibleConstraints","hasError","constraintData","hasMatch","forEach","possibility","undefined","create","parseText","__webpack_require__","d","__webpack_exports__","compromise__WEBPACK_IMPORTED_MODULE_0__","compromise__WEBPACK_IMPORTED_MODULE_0___default","n","nlp","plugin","words","less than","fewer than","more than","greater than","building","structure","no","REMOVE_KEYS","reverseMap","reverse","keys","key","synonym","COMPS_REVERSE","===",">","<",">=","<=","PROPS_REVERSE","area","height","distToAccess","TYPES_REVERSE","Structure","0","1","2","REPLACE_REVERSE","getResult","doc","has","getValue","numbers","values","i","toString","getProp","getType","getComp","getFn","isRemove","cleanText","toLowerCase","replace","trim","normalize","out","word","replacement","RegExp","display","tags","join","Monitor","classCallCheck","getMessages","messages","setMessages","addConstraint","constraintToAdd","push","newConstraints","removedConstraint","constraints","old","clearConstraints","checkDesign","conflicts","checkConflicts","incompatibilities","checkIncompatibilities","newMessages","SETTINGS","userName","constraint","newProblems","systemConstraints","freeze","monitor","jsonStr","parse","thaw","json","ObjectsEnum","CUBE","ROOF","TRUNK","FOLIAGE","PERSON","CamerasEnum","NORTH","EAST","SOUTH","WEST","TOP","BOTTOM","getGridPointInModelSpace","x","y","_SETTINGS2","w","h","clickX","clickY","gridSize","floor","getRelativePosition","getSafe","arr","getSafe3D","z","getCellContext3D","position","e","s","t","b","getCornerContext2x2","topLeft","topRight","bottomLeft","bottomRight","getEmpty2DArray","rows","columns","defaultValue","arguments","Array","j","getEmpty3DArray","SurfacesEnum","SOLID","TRANS","PART","NONE","Roof","roofData","hookAfterInsert","modifier","context","direction","constructor","Cube","surfaces","hasSideSurface","hookBeforeRemove","setSurface","sideCardinal","surface","typeName","cubeData","hasAccessToOutside","hasAccessInDirection","Foliage","Trunk","TypeToConstructorEnum","Design","getAll","getAt","p","clear","xMax","yMax","zMax","add","obj","newObject","foliagePosition","remove","_setCell","_getCell","camera","side","getCardinalSide","sharedWallNeighbor","cardinalDirection","getOppositeDirection","_buildings","calculateAttributes","topo","_objects","calculateObjectAttributes","calculateAccess","buildings","findBuildings","calculateBuildingAttributes","gh","ground","noBase","Infinity","accessPoints","checkAccess","dist","nextDist","buildingAttributes","floating","maxDistToAccess","part","buildingParts","buildingIndex","nextIndex","floodFillBuildings","neighborPosition","Error","getSlice","sliceIndex","ySlice","xSlice","zSlice","_getYSlice","Array2D","hflip","_getXSlice","_getZSlice","vflip","getBackgroundSlices","backgroundSliceIndex","backgroundSliceIndices","slice","_addCube","c","addObject","fill","pos","mod","objectsPacked","objectData","objectsUnpacked","constructorFn","Topo","heights","increase","decrease","heightsView","transpose","back","front","all","top","left","center","right","bottom","getCorners","cornersLength","corners","U5Session","id","onUpdate","_design","_monitor","Audio","play","save","_topo","xyz","meta","xy","setTimeout","ice","localStorage","setItem","_id","Date","now","session","date","U5SessionFactory","getIDList","ids","getItem","split","get","_setIDList","last","pop","newSession","_getNextID","test","currentID","LoadPage","state","onButtonClick","onSelectSession","props","factory","getButton","dateStr","toLocaleString","title","react_default","a","createElement","onClick","_this2","recentIds","style","lineHeight","React","Component","TextInput","handleKeyDown","event","keyCode","handleSubmit","handleChange","actualVal","target","setState","onSubmit","input","document","getElementById","addEventListener","focus","removeEventListener","autoComplete","spellCheck","onChange","PureComponent","StartPage","stageId","firstTime","handleKeyStartSession","preventDefault","onFirstTimeSpeak","includes","onNameSpeak","next","getStage","textAlign","margin","src","alt","autoFocus","TextInput_TextInput","LoadPage_LoadPage","width","float","padding","Menu","buttonElements","_this$props","actions","action","label","whiteSpace","ActionsEnum","STEPOUT","STEPIN","ADDCUBE","REMOVE","ROTATELT","ROTATERT","ADDTREE","ADD_ROOF_NORTH","ADD_ROOF_SOUTH","WALKTHRU","SPEAK_CONSTRAINT","INCREASE_HEIGHT","DECREASE_HEIGHT","SOLID_SURFACE","PARTITION_SURFACE","TRANSPARENT_SURFACE","NO_SURFACE","HAS_ACCESS","NO_ACCESS","ADD_ROOF_WEST","ADD_ROOF_EAST","ADDROOF","isAdd","Top","textMessages","onMessage","newMessage","prevState","toConsumableArray","componentDidUpdate","scrollElement","window","requestAnimationFrame","container","scrollTop","scrollHeight","onSpeak","poll","pollTimeout","clearTimeout","textInput","messageElements","message","className","overflow","TopoRenderer2D","stage","draw","topoSlice","isBackground","cornerX","cornerY","line","createjs","Shape","graphics","beginStroke","color","setStrokeStyle","stroke","setStrokeDash","_s","slicedToArray","startHeight","endHeight","r","moveTo","lineTo","endStroke","addChild","DesignRenderer2D","drawSlice","isDashed","row","cell","drawCube","drawRoof","drawFoliage","drawTrunk","drawGridPoints","point","contextX","contextY","drawRect","drawCircle","circle","cube","drawLeft","drawTop","drawRight","drawBottom","_drawCubeSquare","shape","sx","dx","sy","dy","roof","_drawRoofSquare","_drawRoofSlantLeft","_drawRoofSlantRight","foliage","trunk","Display2DView","canvas","isBackgroundDashed","removeAllChildren","topoRenderer","drawBackground","clippingMax","designRenderer","currentSlice","update","drawTopCompressedView","allSlices","masterSlice","_loop","_loop2","topObj","_drawTopoSlice","_drawSlice","draw2D","_drawGridPoints","animateX","path","speed","callback","xObj","drawX","xNoise","yNoise","removeChild","cornerX2","cornerY2","Stage","Display2DController","cameraView","addListener","view","views","removeListener","toRemove","doAction","modelPosition","previousSlice","nextSlice","removeObject","rotateLeft","rotateRight","EDITTOPO","setTopoHeight","updateViews","_setSliceYAxis","slices","_setSliceXAxis","_setSliceZAxis","north","_setCamera","south","east","west","minX","minY","minZ","maxX","maxY","maxZ","_object$position","v","Draw","controller","wire","isWired","handleClick","offsetX","offsetY","_SETTINGS","grayValues","EditTopoRenderer2D","drawSquare","grayValue","beginFill","endFill","Text","TopoView","renderer","Surface","edge","_SETTINGS3","normalizedY","xRound","xRemainder","yRound","yRemainder","tDist","bDist","lDist","rDist","getClosestEdgeInModelSpace","CameraPathController","onWalkthroughEnd","run","animateCameraPath","nextP","setCameraPosition","TopoRenderer3D","scene","pointLists","_getArrows","_addArrows","isDebug","adjustedCorners","cornerPoint","adjustedCornerPoint","_getAdjustedPoint","downPoint","_addLine","leftPoint","points","geometry","THREE","adjP","vertices","arrow","_cameraView$slices","p0","p1","material","DesignRenderer3D","lines","_getCubeFaces","positionAdj","_getRoof","rotation","PI","wireframe","position2","CameraPathView","fov","children","designRenderer3D","topoRenderer3D","topoCorners","render","hasPosition","_this$getAdjustedPoin","getAdjustedPoint","np","lookAt","background","antialias","setPixelRatio","setSize","appendChild","domElement","CameraPath","PF","require","calculatePath","start","end","smoothedPath","steps","dz","smoothPath","grid","Grid","adjX","adjY","cornerZ","isObjectInWay","setWalkableAt","AStarFinder","allowDiagonal","dontCrossCorners","findPath","adjPath","currX","currY","_path$i","getPathWithWallOpenings","range","random","addNoise","ChoosePath","hasStart","onSelectPath","distance","DisplayWalkthrough","CameraPath_CameraPath","ChoosePath_ChoosePath","newPath","MainPage","displayType","onMenuClick","getDisplay","_this$state","Draw_Draw","DisplayWalkthrough_DisplayWalkthrough","components_Topo_Topo","Surface_Surface","getActions","Top_Top","Menu_Menu","DebuggingConstraints","getStringsFromConstraints","_this3","marginTop","Debugging3D","startPoll","lastCameraView","lastNumObjects","lastTotalHeight","numObjects","totalHeight","total","nextRotation","location","origins","_this$props2","size","increment","viewPoint","cos","sin","border","onMouseDown","App","restartIndex","startSession","getCameraView","reset","renderBody","MainPage_MainPage","Debugging3D_Debugging3D","DebuggingConstraints_DebuggingConstraints","wordWrap","fontSize","resetTimer","_this$state2","StartPage_StartPage","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.abf13d2a.chunk.js","sourcesContent":["import parseText from '../helpers/TextToConstraint';\n\nclass Constraint {\n  constructor(data) {\n    if (data) {\n      const { text, result, fn, type, prop, comp, value, removeFlag } = data;  // eslint-disable-line\n      this.text = text;\n      this.result = result;\n      this.fn = fn;\n      this.type = type;\n      this.prop = prop;\n      this.comp = comp;\n      this.value = value;\n      this.removeFlag = removeFlag;\n    }\n  }\n\n  isViolated = design => {\n    let objectsOfType;\n    if (this.type === 'Structure') {\n      objectsOfType = design.getBuildings();\n    } else {\n      const objects = design.getObjects();\n      objectsOfType = objects.filter(item => parseInt(this.type) === item.type);\n      objectsOfType = objectsOfType.map(item => item.object);\n    }\n\n    const propValues = objectsOfType.map(item => item[this.prop]);\n\n    if (propValues.length === 0) {\n      return false;\n    }\n\n    let calculatedValue = null;\n    switch (this.fn) {\n      case 'SUM':\n        calculatedValue = propValues.reduce((sum, num) => num ? (sum + num) : sum);  // eslint-disable-line\n        break;\n      case 'MAX':\n        calculatedValue = propValues.reduce((max, num) => num ? Math.max(max, num) : max);  // eslint-disable-line\n        break;\n      case 'MIN':\n        calculatedValue = propValues.reduce((min, num) => num ? Math.min(min, num) : min);  // eslint-disable-line\n        break;\n      default:\n        break;\n    }\n\n    const calculatedResult = eval(`${calculatedValue} ${this.comp} ${this.value}`);  // eslint-disable-line\n    console.log(this.prop, calculatedValue, this.comp, this.value, calculatedResult, 'expected', this.result);\n    const isViolated = calculatedResult !== this.result;\n\n    return {\n      result: isViolated,\n      value: calculatedValue\n    };\n  }\n\n  isSameType = otherConstraint => {\n    return JSON.stringify(otherConstraint.type) === JSON.stringify(this.type)\n      && otherConstraint.prop === this.prop;\n  }\n}\n\nconst possibleConstraints = [\n  { fn: 'MAX', type: 'Structure', prop: 'height' }, // can compare the max structure height to anything\n  { fn: 'MIN', type: 'Structure', prop: 'height' }, // can compare the min structure height to anything\n  { fn: 'MAX', type: '0', prop: 'distToAccess' }, // can compare to dist to access for cubes\n  { fn: 'MAX', type: 'Structure', prop: 'area' }, // can compare the max structure area to anything\n  { fn: 'MIN', type: 'Structure', prop: 'area' }, // can compare the min structure area to anything\n];\n\nconst hasError = constraintData => {\n  if (!constraintData) {\n    return true;\n  }\n\n  const { fn, type, prop, value, comp, result, removeFlag } = constraintData;\n  // If remove flag is set, try to cancel one out\n  if (removeFlag) {\n    return false;\n  }\n\n  if (!fn || !type || !prop || !value || !comp || result === null) {\n    return true;\n  }\n\n  let hasMatch = false;\n  // Check if they match a possible constraint\n  possibleConstraints.forEach(possibility => {\n    if ((possibility.fn === undefined || possibility.fn === fn)\n        && (possibility.type === undefined || possibility.type === type)\n        && (possibility.prop === undefined || possibility.prop === prop)\n        && (possibility.value === undefined || possibility.value === value)\n        && (possibility.comp === undefined || possibility.comp === comp)\n        && (possibility.result === undefined || possibility.result === result)) {\n      hasMatch = true; // if they match all the provided criteria\n    }\n  });\n  if (!hasMatch) {\n    return true;\n  }\n  return false;\n};\n\nConstraint.create = text => {\n  if (!text) {\n    return 'No text provided';\n  }\n\n  const constraintData = parseText(text);\n  if (!hasError(constraintData)) {\n    return new Constraint(constraintData);\n  }\n\n  return null;\n};\n\nexport default Constraint;\n","import nlp from 'compromise';\n\nconst plugin = {\n  words: {\n    'less than': 'Comparative',\n    'fewer than': 'Comparative',\n    'more than': 'Comparative',\n    'greater than': 'Comparative',\n    'building': 'Noun',\n    'structure': 'Noun',\n    'no': 'Expression'\n  }\n};\nnlp.plugin(plugin);\n\n// Replace problem words or for convenience\nconst REPLACE = {\n  // result\n  no: ['not', 'none'],\n};\n\nconst TYPES = {\n  Structure: ['structure', 'building', 'structures', 'buildings', 'house', 'home', 'domicile', 'complex', 'design'],\n  0: ['cube', 'room', 'area', 'cubes', 'rooms', 'areas', 'elements'], // ObjectsEnum.CUBE\n  1: ['roof', 'roofs', 'rooves', 'covering', 'ceiling', 'gable', 'crown'], // ObjectsEnum.ROOF\n  2: ['tree', 'plant', 'bush', 'trees', 'plants', 'bushes', 'canopy'], // ObjectsEnum.TRUNK\n};\n\nconst PROPS = {\n  area: ['area', 'square footage', 'sf', 'space', 'floor', 'floorspace', 'size', 'expanse', 'breadth', 'field'],\n  height: ['tall', 'height', 'elevation', 'taller', 'shorter', 'ceiling', 'peak', 'stature', 'crest', 'tip', 'zenith'],\n  distToAccess: ['access', 'entry', 'entrance', 'ingress', 'path', 'route', 'exit', 'way', 'door']\n};\n\nconst COMPS = {\n  '===': ['equals', 'same'],\n  '>': ['greater', 'more', 'bigger', 'taller', 'larger', 'above', 'exceeding', 'over', 'further', 'farther'],\n  '<': ['fewer', 'less', 'smaller', 'shorter', 'below', 'under', 'lower', 'beneath'],\n  '>=': ['minimum', 'min', 'littlest', 'least', 'smallest'],\n  '<=': ['maximum', 'max', 'biggest', 'most', 'largest', 'greatest'],\n};\n\nconst REMOVE_KEYS = ['any', 'whatever', 'infinity', 'remove', 'allow'];\n\nfunction reverseMap(map) {\n  const reverse = {};\n  Object.keys(map).forEach(key => {\n    const synonyms = map[key];\n    synonyms.forEach(synonym => {\n      reverse[synonym] = key;\n    });\n  });\n  return reverse;\n}\n\n// Create inverse map for look ups\nconst COMPS_REVERSE = reverseMap(COMPS);\nconst PROPS_REVERSE = reverseMap(PROPS);\nconst TYPES_REVERSE = reverseMap(TYPES);\nconst REPLACE_REVERSE = reverseMap(REPLACE);\n\nconst getResult = doc => !doc.has('no');\n\nconst getValue = doc => {\n  const numbers = doc.values().numbers();\n  let value = null;\n  if (numbers.length > 0) {\n    let i = 0;\n    while (!numbers[i] && i < numbers.length - 1) {\n      i += 1;\n    }\n    value = numbers[i].toString();\n  }\n  return value;\n};\n\nconst getProp = doc => {\n  let prop = null;\n  const propKeys = Object.keys(PROPS_REVERSE);\n  propKeys.forEach(key => {\n    if (doc.has(key)) {\n      prop = PROPS_REVERSE[key];\n    }\n  });\n\n  return prop;\n};\n\nconst getType = doc => {\n  let type = '0';\n  const propKeys = Object.keys(TYPES_REVERSE);\n  propKeys.forEach(key => {\n    if (doc.has(key)) {\n      type = TYPES_REVERSE[key];\n    }\n  });\n  return type;\n};\n\nconst getComp = doc => {\n  let comp = null;\n  const compKeys = Object.keys(COMPS_REVERSE);\n  compKeys.forEach(key => {\n    if (doc.has(key)) {\n      comp = COMPS_REVERSE[key];\n    }\n  });\n  return comp;\n};\n\nconst getFn = (result, comp) => {\n  let fn = null;\n  if (!result) {\n    if (comp === '>' || comp === '>=') {\n      fn = 'MAX';\n    } else if (comp === '<' || comp === '<=') {\n      fn = 'MIN';\n    } else if (comp === '===') {\n      fn = 'SUM';\n    }\n  } else {\n    if (comp === '>' || comp === '>=') { // eslint-disable-line\n      fn = 'MIN';\n    } else if (comp === '<' || comp === '<=') {\n      fn = 'MAX';\n    } else if (comp === '===') {\n      fn = 'SUM';\n    }\n  }\n  return fn;\n};\n\nconst isRemove = doc => {\n  let removeFlag = false;\n  REMOVE_KEYS.forEach(key => {\n    if (doc.has(key)) {\n      removeFlag = true;\n    }\n  });\n\n  return removeFlag;\n};\n\nexport default function parseText(text) {\n  console.log('Original text: ' + text);\n\n  // Clean up to lower case and remove symbols\n  let cleanText = text.toLowerCase().replace(/[.,-/#!$%^&*;:{}=\\-_`()]/g, '').trim();\n\n  // Remove contractions and 'normalize'\n  cleanText = nlp(cleanText).normalize().out();\n\n  // Replace keywords with synonyms\n  Object.keys(REPLACE_REVERSE).forEach(word => {\n    const replacement = REPLACE_REVERSE[word];\n    cleanText = cleanText.replace(new RegExp(`${word} `, 'g'), `${replacement} `);\n  });\n\n  console.log('Cleaned text: ' + cleanText);\n  // Parse cleaned up text into parts of speech\n  const doc = nlp(cleanText);\n\n  // Log parts\n  const pos = doc.out('tags');\n  const display = pos.map(item => `[${item.text}: ${item.tags.join(',')}]`).join('');\n  console.log('pos: ' + display);\n\n  const result = getResult(doc);\n  const value = getValue(doc);\n  const type = getType(doc);\n  const prop = getProp(doc);\n  const comp = getComp(doc);\n\n  let removeFlag = false;\n  if (!value) {\n    removeFlag = isRemove(doc);\n  }\n\n  const fn = getFn(result, comp);\n\n  const constraintData = { text, result, fn, type, prop, comp, value, removeFlag }; // eslint-disable-line\n  // It should look something like this\n  // const constraintData = {\n  //   result: true,\n  //   fn: 'MAX',\n  //   type: 'Cube',\n  //   prop: 'area',\n  //   comp: '<',\n  //   value: 50,\n  //   removeFlag: false\n  // };\n\n  console.log(`Constraint result: \\n${JSON.stringify(constraintData)}`);\n\n  return constraintData;\n}\n","import Constraint from './Constraint';\n\n/* global SETTINGS */\n\n/** Class to monitor the actions of the user */\nclass Monitor {\n  constructor() {\n    this.constraints = [];\n    this.systemConstraints = [\n      new Constraint({\n        text: 'no building below ground',\n        result: false,\n        fn: 'MIN',\n        type: 'Structure',\n        prop: 'ground',\n        comp: '<',\n        value: '0'\n      }),\n      new Constraint({\n        text: 'no roof without base',\n        result: false,\n        fn: 'SUM',\n        type: 1,\n        prop: 'noBase',\n        comp: '>',\n        value: '0' // the height of top of the building\n      }),\n      new Constraint({\n        text: 'no building floating',\n        result: false,\n        fn: 'SUM',\n        type: 'Structure',\n        prop: 'floating',\n        comp: '>',\n        value: '0' // the height of top of the building\n      }),\n    ];\n    this.conflicts = [];\n    this.incompatibilities = [];\n    this.messages = [];\n  }\n\n  getMessages = () => this.messages;\n\n  setMessages = messages => this.messages = messages;\n\n  addConstraint = text => {\n    const constraintToAdd = Constraint.create(text);\n    this.messages.push(text);\n\n    if (constraintToAdd && constraintToAdd instanceof Constraint) {\n      // Check if this overrides former constraint\n      const newConstraints = [];\n      let removedConstraint = null;\n      this.constraints.forEach(old => {\n        if (!old.isSameType(constraintToAdd)) {\n          newConstraints.push(old);\n        } else {\n          removedConstraint = old;\n        }\n      });\n      // If remove flag is set, it will cancel out the old, and we don't want to add\n      if (!constraintToAdd.removeFlag) {\n        newConstraints.push(constraintToAdd);\n        this.messages.push(`I have understood. The constraint: '${constraintToAdd.text}' was added.`);\n      } else if (removedConstraint) {\n        // remove constraint removed something\n        this.messages.push(`Removed the constraint: '${removedConstraint.text}'`);\n      }\n\n      this.constraints = newConstraints;\n      return true;\n    }\n\n    this.messages.push('I am sorry I do not understand.');\n    return false;\n  };\n\n  clearConstraints = () => {\n    this.constraints = [];\n    this.messages.push('Cleared constraints');\n  }\n\n  checkDesign = design => {\n    const conflicts = this.checkConflicts(design);\n    const incompatibilities = this.checkIncompatibilities(design);\n\n    const newMessages = [];\n    if (conflicts.length > 2) {\n      newMessages.push(`Don't you think you should stop, ${SETTINGS.userName}?`);\n    } else if (conflicts.length > 1) {\n      newMessages.push(`${SETTINGS.userName}, many conflicts are occurring.`);\n    } else if (conflicts.length > 0) {\n      // conflicts.forEach(conflict => {\n      //   newMessages.push(`Ted, a conflict has occurred, you said: ${conflict.constraint.text}. The present status is ${conflict.value}.`);\n      // });\n      newMessages.push(`${SETTINGS.userName}, a conflict has occurred, you said: ${conflicts[0].constraint.text}. The present status is ${conflicts[0].value}.`);\n    } else if (conflicts.length === 0 && this.conflicts.length > 0) {\n      newMessages.push('Conflicts were resolved.');\n    }\n\n    if (incompatibilities.length > 0) {\n      newMessages.push('Not structurally possible at this time.');\n    } else if (incompatibilities.length === 0 && this.incompatibilities.length > 0) {\n      newMessages.push('Incompatibilities were resolved.');\n    }\n\n    console.log(`Messages: [${newMessages.join(',')}]`);\n    this.messages = newMessages;\n\n    let newProblems = false;\n    if (conflicts.length > this.conflicts.length || incompatibilities.length > this.incompatibilities.length) {\n      newProblems = true;\n    }\n\n    this.conflicts = conflicts;\n    this.incompatibilities = incompatibilities;\n\n    return newProblems;\n  }\n\n  /**\n    * Conflict “An inconsistency discerned by the machine relating criteria specified by the designer\n    * to forms generated by the designer.”\n    * Examples: max height, number of objects, light, blocking entrances, check access\n    */\n  checkConflicts = design => {\n    const conflicts = [];\n    this.constraints.forEach(constraint => {\n      if (constraint.isViolated(design).result) {\n        console.log('violated constraint!');\n        conflicts.push({ constraint, value: constraint.isViolated(design).value });\n      }\n    });\n\n    return conflicts;\n  };\n\n  /**\n    * Incompatibility: “incongruity between a designer’s action and a predefined requisite embedded in the machine.”\n    * Leads to a bell ringing and displaying the message on the top of the screen\n    * Examples: underground, floating, clash\n    */\n  checkIncompatibilities = design => {\n    const incompatibilities = [];\n    this.systemConstraints.forEach(constraint => {\n      if (constraint.isViolated(design).result) {\n        console.log('violated system constraint!');\n        incompatibilities.push({ constraint, value: constraint.isViolated(design).value });\n      }\n    });\n\n    return incompatibilities;\n  };\n}\n\nMonitor.freeze = monitor => {\n  const jsonStr = JSON.stringify(monitor);\n  const json = JSON.parse(jsonStr);\n\n  return json;\n};\n\nMonitor.thaw = json => {\n  const { constraints, conflicts, incompatibilities, messages } = json;\n\n  const monitor = new Monitor();\n\n  monitor.constraints = constraints.map(constraintData => new Constraint(constraintData));\n  monitor.conflicts = conflicts;\n  monitor.incompatibilities = incompatibilities;\n  monitor.messages = messages;\n\n  return monitor;\n};\n\nexport default Monitor;\n","// Various objects that can occupy a single cube in space\nconst ObjectsEnum = {\n  CUBE: 0,\n  ROOF: 1,\n  TRUNK: 2,\n  FOLIAGE: 3,\n  PERSON: 4,\n};\n\nexport default ObjectsEnum;\n","// These are the 2D slice views of the 3D model\nconst CamerasEnum = {\n  NORTH: 0,\n  EAST: 1,\n  SOUTH: 2,\n  WEST: 3,\n  TOP: 4,\n  BOTTOM: 5,\n};\n\nexport default CamerasEnum;\n","/* global SETTINGS */\n\n/**\n * Returns a 3D vector of the model position based on the normalized click\n * @param {float} clickX - Normalized x between 0 and 1\n * @param {float} clickY - Normalized y between 0 and 1\n */\nexport function getRelativePosition(clickX, clickY) {\n  // get the x, y position in the scale of the model\n  const { gridSize } = SETTINGS;\n  const x = Math.floor(clickX * gridSize);\n  const y = gridSize - 1 - Math.floor(clickY * gridSize);\n  return { x, y };\n}\n\nexport function getGridPointInModelSpace(x, y) {\n  const { w, h } = SETTINGS;\n  // There is a 1px padding around the edges to not cut off the graphics awkwardly\n  // Ignore clicks in that range\n  if (x === 0 || x === (w - 1)\n      || y === 0 || y === (h - 1)) {\n    return null;\n  }\n\n  // Offset click for 1px padding and find normalized position\n  const normalizedX = (x - 1) / w;\n  const normalizedY = (y - 1) / h;\n  const point = getRelativePosition(normalizedX, normalizedY);\n\n  return point;\n}\n\nexport function getClosestEdgeInModelSpace(clickX, clickY) {\n  const { w, h, gridSize } = SETTINGS;\n  // There is a 1px padding around the edges to not cut off the graphics awkwardly\n  // Ignore clicks in that range\n  if (clickX === 0 || clickX === (w - 1)\n      || clickY === 0 || clickY === (h - 1)) {\n    return null;\n  }\n\n  // Offset click for 1px padding and find normalized position\n  const normalizedX = (clickX - 1) / w;\n  const normalizedY = (clickY - 1) / h;\n\n  const x = normalizedX * gridSize;\n  const xRound = Math.floor(x);\n  const xRemainder = x - xRound;\n\n  const y = gridSize - (normalizedY * gridSize);\n  const yRound = Math.floor(y);\n  const yRemainder = y - yRound;\n\n  let side;\n  const tDist = 1 - yRemainder;\n  const bDist = yRemainder;\n  const lDist = xRemainder;\n  const rDist = 1 - xRemainder;\n  const max = Math.min(tDist, bDist, lDist, rDist);\n  if (tDist === max) {\n    side = 't';\n  } else if (bDist === max) {\n    side = 'b';\n  } else if (lDist === max) {\n    side = 'l';\n  } else if (rDist === max) {\n    side = 'r';\n  }\n\n  return { x: xRound, y: yRound, side };\n}\n\nexport function getOppositeDirection(cardinalDirection) {\n  switch (cardinalDirection) {\n    case 'n':\n      return 's';\n    case 's':\n      return 'n';\n    case 'e':\n      return 'w';\n    case 'w':\n      return 'e';\n    case 't':\n      return 'b';\n    case 'b':\n      return 't';\n    default:\n      return null;\n  }\n}\n\nfunction getSafe(arr, x, y) {\n  if (x >= 0 && arr.length > 0 && arr[0].length && x < arr[0].length && y >= 0 && y < arr.length) {\n    return arr[y][x];\n  }\n  return null;\n}\n\nfunction getSafe3D(arr, x, y, z) {\n  if (arr.length > 0 && arr[0].length && arr[0][0].length\n      && x >= 0 && x < arr[0][0].length\n      && y >= 0 && y < arr[0].length\n      && z >= 0 && z < arr.length) {\n    return arr[z][y][x];\n  }\n  return null;\n}\n\n/**\n* Given a 2D array 'arr' and a position, get the position and all cells around it as an object\n* This can be unpacked as follows:\n* const { topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight } = context;\n*/\nexport function getCellContext3x3(arr, x, y) {\n  return {\n    topLeft: getSafe(arr, x - 1, y + 1),\n    top: getSafe(arr, x, y + 1),\n    topRight: getSafe(arr, x + 1, y + 1),\n    left: getSafe(arr, x - 1, y),\n    center: getSafe(arr, x, y),\n    right: getSafe(arr, x + 1, y),\n    bottomLeft: getSafe(arr, x - 1, y - 1),\n    bottom: getSafe(arr, x, y - 1),\n    bottomRight: getSafe(arr, x + 1, y - 1)\n  };\n}\n\n/**\n* Given a 2D array 'arr' and a position, get the position and all cells around it as an object\n* This can be unpacked as follows:\n* const { n, e, s, w, t, b } = context;\n*/\nexport function getCellContext3D(arr, position) {\n  const { x, y, z } = position;\n  return {\n    w: getSafe3D(arr, x - 1, y, z),\n    n: getSafe3D(arr, x, y + 1, z),\n    e: getSafe3D(arr, x + 1, y, z),\n    s: getSafe3D(arr, x, y - 1, z),\n    t: getSafe3D(arr, x, y, z + 1),\n    b: getSafe3D(arr, x, y, z - 1)\n  };\n}\n\n/**\n* Given a 2D array 'arr' and a position of a corner, get the height of all adjacent cells around it as an object\n* This can be unpacked as follows:\n* const { topLeft, topRight, bottomLeft, bottomRight } = context;\n*/\nexport function getCornerContext2x2(arr, x, y) {\n  return {\n    topLeft: getSafe(arr, x - 1, y),\n    topRight: getSafe(arr, x, y),\n    bottomLeft: getSafe(arr, x - 1, y - 1),\n    bottomRight: getSafe(arr, x, y - 1)\n  };\n}\n\n/**\n * Returns an empty 2D array\n * @param {int} rows - Number of rows in the array\n * @param {int} columns - Number of columns in the array\n * @param defaultValue - Default value for new array cells\n */\nexport function getEmpty2DArray(rows, columns, defaultValue = null) {\n  const arr = new Array(rows);\n  for (let i = 0; i < rows; i += 1) {\n    arr[i] = new Array(columns);\n    for (let j = 0; j < columns; j += 1) {\n      arr[i][j] = defaultValue;\n    }\n  }\n  return arr;\n}\n\nexport function getEmpty3DArray(x, y, z) {\n  const arr = new Array(z);\n\n  for (let i = 0; i < arr.length; i += 1) {\n    arr[i] = getEmpty2DArray(y, x, null);\n  }\n\n  return arr;\n}\n","const SurfacesEnum = Object.freeze({\n  SOLID: 0,\n  TRANS: 1,\n  PART: 2,\n  NONE: 3\n});\n\nexport default SurfacesEnum;\n","import SurfacesEnum from '../enums/SurfacesEnum';\nimport Cube from './Cube';\n\nexport default class Roof {\n  static typeName = 'ROOF'\n\n  constructor(roofData) {\n    if (roofData) {\n      const { direction, hasSideSurface } = roofData;\n      this.direction = direction;\n      this.hasSideSurface = hasSideSurface;\n    } else {\n      this.direction = 'n';\n      this.hasSideSurface = true;\n    }\n  }\n\n  // Join cube surfaces that connect\n  hookAfterInsert = (modifier, context) => {\n    this.direction = modifier;\n\n    const { n, e, s, w, b } = context;\n\n    // Join to roof above\n    if (b && b.constructor === Cube) {\n      b.surfaces.t = SurfacesEnum.NONE;\n    }\n\n    // Join to adjacent cubes that face this roof\n    if (n && n.constructor === Cube && this.direction === 's') {\n      n.surfaces.s = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (e && e.constructor === Cube && this.direction === 'w') {\n      e.surfaces.w = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (s && s.constructor === Cube && this.direction === 'n') {\n      s.surfaces.n = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (w && w.constructor === Cube && this.direction === 'e') {\n      w.surfaces.e = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n\n    // Join to adjacent roofs\n    if (n && (n.constructor === Roof && n.direction === 'n') && this.direction === 's') {\n      n.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (e && (e.constructor === Roof && e.direction === 'e') && this.direction === 'w') {\n      e.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (s && (s.constructor === Roof && s.direction === 's') && this.direction === 'n') {\n      s.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (w && (w.constructor === Roof && w.direction === 'w') && this.direction === 'e') {\n      w.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n  };\n\n  hookBeforeRemove = context => {\n    const { n, e, s, w, b } = context;\n    // Unjoin adjacent cubes\n    if (b && b.constructor === Cube) {\n      b.surfaces.t = SurfacesEnum.SOLID;\n    }\n    if (n && n.constructor === Cube && this.direction === 's') {\n      n.surfaces.s = SurfacesEnum.SOLID;\n    }\n    if (e && e.constructor === Cube && this.direction === 'w') {\n      e.surfaces.w = SurfacesEnum.SOLID;\n    }\n    if (s && s.constructor === Cube && this.direction === 'n') {\n      s.surfaces.n = SurfacesEnum.SOLID;\n    }\n    if (w && w.constructor === Cube && this.direction === 'e') {\n      w.surfaces.e = SurfacesEnum.SOLID;\n    }\n\n    // Unjoin adjacent roofs\n    if (n && (n.constructor === Roof && n.direction === 'n') && this.direction === 's') {\n      n.hasSideSurface = true;\n    }\n    if (e && (e.constructor === Roof && e.direction === 'e') && this.direction === 'w') {\n      e.hasSideSurface = true;\n    }\n    if (s && (s.constructor === Roof && s.direction === 's') && this.direction === 'n') {\n      s.hasSideSurface = true;\n    }\n    if (w && (w.constructor === Roof && w.direction === 'w') && this.direction === 'e') {\n      w.hasSideSurface = true;\n    }\n  };\n\n  setSurface = (sideCardinal, surface) => {\n    if (surface === SurfacesEnum.NONE) {\n      switch (sideCardinal) {\n        case 'n':\n          if (this.direction === 's') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 's':\n          if (this.direction === 'n') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 'e':\n          if (this.direction === 'w') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 'w':\n          if (this.direction === 'e') {\n            this.hasSideSurface = false;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  };\n}\n","import SurfacesEnum from '../enums/SurfacesEnum';\nimport Roof from './Roof';\n\nexport default class Cube {\n  static typeName = 'CUBE'\n\n  constructor(cubeData) {\n    if (cubeData) {\n      const { surfaces } = cubeData;\n      this.surfaces = surfaces;\n    } else {\n      this.surfaces = {\n        n: SurfacesEnum.SOLID,\n        e: SurfacesEnum.SOLID,\n        s: SurfacesEnum.SOLID,\n        w: SurfacesEnum.SOLID,\n        t: SurfacesEnum.SOLID,\n        b: SurfacesEnum.SOLID\n      };\n    }\n  }\n\n  hookAfterInsert = context => {\n    const { n, e, s, w, t } = context;\n    // Join to adjacent cubes (update both this one and the other)\n    if (n && n.constructor === Cube) {\n      this.surfaces.n = SurfacesEnum.NONE;\n      n.surfaces.s = SurfacesEnum.NONE;\n    }\n    if (e && e.constructor === Cube) {\n      this.surfaces.e = SurfacesEnum.NONE;\n      e.surfaces.w = SurfacesEnum.NONE;\n    }\n    if (s && s.constructor === Cube) {\n      this.surfaces.s = SurfacesEnum.NONE;\n      s.surfaces.n = SurfacesEnum.NONE;\n    }\n    if (w && w.constructor === Cube) {\n      this.surfaces.w = SurfacesEnum.NONE;\n      w.surfaces.e = SurfacesEnum.NONE;\n    }\n\n    // Join to roof above\n    if (t && t.constructor === Roof) {\n      this.surfaces.t = SurfacesEnum.NONE;\n    }\n\n    // Join to adjacent roofs that face this cube\n    if (n && n.constructor === Roof && n.direction === 'n') {\n      this.surfaces.n = SurfacesEnum.NONE;\n      n.hasSideSurface = false;\n    }\n    if (e && e.constructor === Roof && e.direction === 'e') {\n      this.surfaces.e = SurfacesEnum.NONE;\n      e.hasSideSurface = false;\n    }\n    if (s && s.constructor === Roof && s.direction === 's') {\n      this.surfaces.s = SurfacesEnum.NONE;\n      s.hasSideSurface = false;\n    }\n    if (w && w.constructor === Roof && w.direction === 'w') {\n      this.surfaces.w = SurfacesEnum.NONE;\n      w.hasSideSurface = false;\n    }\n  };\n\n  hookBeforeRemove = context => {\n    // check adjacent cubes and seal them?\n    const { n, e, s, w, t } = context;\n    if (n && n.constructor === Cube) {\n      n.surfaces.s = SurfacesEnum.SOLID;\n    }\n    if (e && e.constructor === Cube) {\n      e.surfaces.w = SurfacesEnum.SOLID;\n    }\n    if (s && s.constructor === Cube) {\n      s.surfaces.n = SurfacesEnum.SOLID;\n    }\n    if (w && w.constructor === Cube) {\n      w.surfaces.e = SurfacesEnum.SOLID;\n    }\n\n    // Readd floor from cube above\n    if (t && t.constructor === Cube) {\n      t.surfaces.b = SurfacesEnum.SOLID;\n    }\n\n    // Unjoin to adjacent roofs that face this cube\n    if (n && n.constructor === Roof && n.direction === 'n') {\n      n.hasSideSurface = true;\n    }\n    if (e && e.constructor === Roof && e.direction === 'e') {\n      e.hasSideSurface = true;\n    }\n    if (s && s.constructor === Roof && s.direction === 's') {\n      s.hasSideSurface = true;\n    }\n    if (w && w.constructor === Roof && w.direction === 'w') {\n      w.hasSideSurface = true;\n    }\n  };\n\n  setSurface = (sideCardinal, surface) => {\n    this.surfaces[sideCardinal] = surface;\n  };\n\n  // Check if any wall has no surface\n  hasAccessToOutside = context => {\n    const { n, s, e, w } = context;\n    if (this.surfaces.e === SurfacesEnum.NONE && e === null) {\n      return true;\n    }\n    if (this.surfaces.w === SurfacesEnum.NONE && w === null) {\n      return true;\n    }\n    if (this.surfaces.n === SurfacesEnum.NONE && n === null) {\n      return true;\n    }\n    if (this.surfaces.s === SurfacesEnum.NONE && s === null) {\n      return true;\n    }\n    return false;\n  };\n\n  hasAccessInDirection = direction => {\n    if (this.surfaces[direction] === SurfacesEnum.NONE) {\n      return true;\n    }\n    return false;\n  };\n}\n","export class Foliage {\n  static typeName = 'FOLIAGE'\n}\n\nexport class Trunk {\n  static typeName = 'TRUNK'\n}\n","import Cube from '../data/Cube';\nimport { Trunk, Foliage } from '../data/Tree';\nimport Roof from '../data/Roof';\n\n// Mapping of class type to name for serialization across browsers after mangling of class names\nconst TypeToConstructorEnum = Object.freeze({\n  CUBE: Cube,\n  TRUNK: Trunk,\n  FOLIAGE: Foliage,\n  ROOF: Roof,\n});\nexport default TypeToConstructorEnum;\n","import Array2D from 'array2d';\nimport ObjectsEnum from '../enums/ObjectsEnum';\nimport CamerasEnum from '../enums/CamerasEnum';\n\nimport { getOppositeDirection, getEmpty2DArray, getEmpty3DArray, getCellContext3D } from '../helpers/Helpers';\n\nimport Cube from './Cube';\nimport Roof from './Roof';\nimport { Foliage, Trunk } from './Tree';\n\nimport TypeToConstructorEnum from '../enums/TypeToConstructorEnum';\n\n/* global SETTINGS */\n\n/**\n * Represents the data of a design world\n *\n * The world is similar to Google Sketchup. The standard view \"North\" (looking North)\n * has x increasing from left to right, y, starting at 0 and increasing as it moves\n * away from you, and z increasing as it goes up.\n *\n */\nclass Design {\n  constructor(objects) {\n    if (objects) {\n      this.objects = objects;\n    } else {\n      // init empty world\n      this.objects = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n      this.fill();\n    }\n  }\n\n  getAll = () => this.objects;\n\n  getAt = p => this.objects[p.z][p.y][p.x];\n\n  clear = () => {\n    this.objects = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  };\n\n  /**\n   * Add an object at a certain position.\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   * @param {int} obj - int representing the ObjectsEnum object\n   */\n  add = (obj, position, modifier) => {\n    const context = getCellContext3D(this.objects, position);\n    let newObject;\n\n    switch (obj) {\n      case ObjectsEnum.TRUNK:\n        if (position.z < (SETTINGS.zMax - 1)) {\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          const foliagePosition = { x, y, z };\n          // Check placement spot and placement spot above\n          this.remove(position);\n          this.remove(foliagePosition);\n          this._setCell(position, new Trunk(position));\n          this._setCell(foliagePosition, new Foliage(foliagePosition));\n          return true;\n        }\n        return false;\n      case ObjectsEnum.CUBE:\n        newObject = new Cube();\n        this.remove(position);\n        this._setCell(position, newObject);\n        newObject.hookAfterInsert(context);\n        return true;\n      case ObjectsEnum.ROOF:\n        newObject = new Roof();\n        this.remove(position);\n        this._setCell(position, newObject);\n        newObject.hookAfterInsert(modifier, context);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Remove the object at a certain position\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   */\n  remove = position => {\n    const obj = this._getCell(position);\n\n    if (!obj) {\n      return;\n    }\n\n    switch (obj.constructor) {\n      case Trunk:\n        if (position.z < (SETTINGS.zMax - 1)) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      case Foliage:\n        if (position.z > 0) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z -= 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      default:\n        if (obj && obj.hookBeforeRemove) {\n          const context = getCellContext3D(this.objects, position);\n          obj.hookBeforeRemove(context);\n        }\n        this._setCell(position, null);\n        break;\n    }\n  }\n\n  /**\n   * Use the camera and 2D side (l, r, t, b) to get a cardinal\n   * point (n,s,e,w,t,b) and set that surface at the model position\n   * to the given surface.\n   */\n  setSurface = (camera, position, side, surface) => {\n    const obj = this._getCell(position);\n\n    const sideCardinal = this.getCardinalSide(camera, side);\n    if (obj && obj.setSurface) {\n      obj.setSurface(sideCardinal, surface);\n    }\n\n    const context = getCellContext3D(this.objects, position);\n    const sharedWallNeighbor = context[sideCardinal];\n    if (sharedWallNeighbor && sharedWallNeighbor.setSurface) {\n      sharedWallNeighbor.setSurface(getOppositeDirection(sideCardinal), surface);\n    }\n  }\n\n  getObjects = () => {\n    const objects = [];\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        for (let x = 0; x < SETTINGS.xMax; x += 1) {\n          const object = this.objects[z][y][x];\n          if (object) {\n            let type = null;\n            switch (object.constructor) {\n              case Cube:\n                type = ObjectsEnum.CUBE;\n                break;\n              case Roof:\n                type = ObjectsEnum.ROOF;\n                break;\n              case Foliage:\n                type = ObjectsEnum.FOLIAGE;\n                break;\n              case Trunk:\n                type = ObjectsEnum.TRUNK;\n                break;\n              default:\n                break;\n            }\n            objects.push({\n              object,\n              type,\n              position: { x, y, z }\n            });\n          }\n        }\n      }\n    }\n\n    return objects;\n  }\n\n  getBuildings = () => {\n    if (this._buildings) {\n      return this._buildings;\n    }\n    return [];\n  }\n\n  calculateAttributes = topo => {\n    const objects = this.getObjects();\n    this._objects = objects;\n\n    if (!objects) {\n      return;\n    }\n\n    // Calculate individual object attributes\n    this.calculateObjectAttributes(objects, topo);\n    this.calculateAccess(objects);\n\n    // Check building attributes\n    const buildings = this.findBuildings(objects);\n    this._buildings = this.calculateBuildingAttributes(buildings); // save building attributes\n  }\n\n  calculateObjectAttributes = (objects, topo) => {\n    objects.forEach(item => {\n      const { position, object } = item;\n      const { x, y, z } = position;\n      const gh = topo.getAt({ x, y }); // get ground height\n      // const {\n      //   n, e, s, w, t, b\n      // } = getCellContext3D(this.objects, { x, y, z });\n      const { b } = getCellContext3D(this.objects, { x, y, z });\n\n      switch (object.constructor) {\n        case Cube:\n          object.area = 100;\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        case Roof:\n          object.height = 10 * (z + 1 - gh);\n          // 0 if has building below, else 1\n          object.noBase = b && b.constructor === Cube ? 0 : 1;\n          object.ground = 10 * (z - gh);\n          break;\n        case Foliage:\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        case Trunk:\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  calculateAccess = objects => {\n    // Reset access\n    objects.forEach(item => {\n      if (item.type === ObjectsEnum.CUBE) {\n        const { object } = item;\n        object.distToAccess = Infinity;\n      }\n    });\n\n    // Get access points\n    const accessPoints = objects.filter(item => {\n      if (item.type === ObjectsEnum.CUBE) {\n        const { position, object } = item;\n        const { x, y, z } = position;\n        const context = getCellContext3D(this.objects, { x, y, z });\n        return object.hasAccessToOutside(context);\n      }\n      return false;\n    });\n\n    const checkAccess = (position, dist) => {\n      const { x, y, z } = position;\n      if (x < 0 || y < 0 || x >= SETTINGS.xMax || y >= SETTINGS.yMax) {\n        // out of bounds\n        return;\n      }\n      const object = this.objects[z][y][x];\n\n      if (object && (dist < object.distToAccess)) {\n        // Update access and continue flood fill of neighbors if this is the closest acces seen yet\n        object.distToAccess = dist;\n        const nextDist = dist + 10;\n\n        // check neigbors that open in this direction\n        if (object.hasAccessInDirection('n')) {\n          checkAccess({ x, y: y + 1, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('s')) {\n          checkAccess({ x, y: y - 1, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('e')) {\n          checkAccess({ x: x + 1, y, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('w')) {\n          checkAccess({ x: x - 1, y, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('t')) {\n          checkAccess({ x, y, z: z + 1 }, nextDist);\n        }\n        if (object.hasAccessInDirection('b')) {\n          checkAccess({ x, y, z: z - 1 }, nextDist);\n        }\n      }\n    };\n\n    // For each access points, flood fill building, replacing access distance if lower\n    accessPoints.forEach(item => {\n      const { position } = item;\n      checkAccess(position, 10);\n    });\n  }\n\n  calculateBuildingAttributes = buildings => {\n    // Check building attributes\n    const buildingAttributes = []; // save building attributes\n    Object.keys(buildings).forEach(key => {\n      const building = buildings[key];\n      // building touches ground\n      // square footage of buildings\n      let floating = true;\n      let height = 0;\n      let ground = Infinity;\n      let area = 0;\n      let maxDistToAccess = 0;\n      building.forEach(part => {\n        if (part.constructor === Cube) {\n          area += 100;\n\n          if (part.distToAccess > maxDistToAccess) {\n            maxDistToAccess = part.distToAccess;\n          }\n        }\n        if (part.height === 10) { // on ground\n          floating = false;\n        }\n        if (part.height > height) {\n          height = part.height;\n        }\n        if (part.ground < ground) {\n          ground = part.ground;\n        }\n      });\n      buildingAttributes.push({\n        area,\n        floating: floating ? 1 : 0,\n        height,\n        ground,\n        maxDistToAccess\n      });\n    });\n\n    return buildingAttributes;\n  }\n\n  findBuildings = objects => {\n    const buildingParts = objects.filter(item => item.type === ObjectsEnum.CUBE || item.type === ObjectsEnum.ROOF);\n    const buildings = {};\n\n    // Reset buildings\n    buildingParts.forEach(item => {\n      const { object } = item;\n      object.buildingIndex = null;\n    });\n\n    // get the next building part, if no building, flood fill\n    const floodFillBuildings = (position, buildingIndex) => {\n      const { x, y, z } = position;\n      if (x < 0 || y < 0 || z < 0 || x >= SETTINGS.xMax || y >= SETTINGS.yMax || z >= SETTINGS.zMax) {\n        // out of bounds\n        return;\n      }\n      const object = this.objects[z][y][x];\n      if (object && object.buildingIndex === null) {\n        object.buildingIndex = buildingIndex;\n        buildings[buildingIndex].push(object);\n        const neighborPositions = [{ x, y: y + 1, z }, { x, y: y - 1, z }, { x: x + 1, y, z },\n          { x: x - 1, y, z }, { x, y, z: z + 1 }, { x, y, z: z - 1 }];\n        neighborPositions.forEach(neighborPosition => floodFillBuildings(neighborPosition, buildingIndex));\n      }\n    };\n\n    // For each access points, flood fill building, replacing access distance if lower\n    let nextIndex = 0;\n    buildingParts.forEach(item => {\n      const { position, object } = item;\n      if (object.buildingIndex === null) {\n        buildings[nextIndex] = [];\n        floodFillBuildings(position, nextIndex);\n        nextIndex += 1;\n      }\n    });\n\n    return buildings;\n  }\n\n  // Given 2D side { t, b, l, r } and camera view, return the cardinal direction { t, b, n, s, e, w }\n  getCardinalSide = (camera, side) => {\n    let sideCardinal;\n    if (side === 't' || side === 'b') {\n      switch (camera) {\n        case CamerasEnum.NORTH:\n        case CamerasEnum.SOUTH:\n        case CamerasEnum.EAST:\n        case CamerasEnum.WEST:\n          sideCardinal = side;\n          break;\n        case CamerasEnum.BOTTOM:\n          if (side === 't') {\n            sideCardinal = 's';\n          } else {\n            sideCardinal = 'n';\n          }\n          break;\n        case CamerasEnum.TOP:\n          if (side === 't') {\n            sideCardinal = 'n';\n          } else {\n            sideCardinal = 's';\n          }\n          break;\n        default:\n          throw new Error(`camera ${camera} is not recognized!`);\n      }\n    } else {\n      switch (camera) {\n        case CamerasEnum.NORTH:\n          if (side === 'l') {\n            sideCardinal = 'w';\n          } else if (side === 'r') {\n            sideCardinal = 'e';\n          }\n          break;\n        case CamerasEnum.SOUTH:\n          if (side === 'l') {\n            sideCardinal = 'e';\n          } else if (side === 'r') {\n            sideCardinal = 'w';\n          }\n          break;\n        case CamerasEnum.EAST:\n          if (side === 'l') {\n            sideCardinal = 'n';\n          } else if (side === 'r') {\n            sideCardinal = 's';\n          }\n          break;\n        case CamerasEnum.WEST:\n          if (side === 'l') {\n            sideCardinal = 's';\n          } else if (side === 'r') {\n            sideCardinal = 'n';\n          }\n          break;\n        case CamerasEnum.BOTTOM:\n        case CamerasEnum.TOP:\n          if (side === 'l') {\n            sideCardinal = 'w';\n          } else if (side === 'r') {\n            sideCardinal = 'e';\n          }\n          break;\n        default:\n          throw new Error(`camera ${camera} is not recognized!`);\n      }\n    }\n    return sideCardinal;\n  }\n\n  /**\n   * Returns 2D array of objects in the given slice\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getSlice = (camera, sliceIndex) => {\n    let ySlice;\n    let xSlice;\n    let zSlice;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        return this._getYSlice(sliceIndex);\n      case CamerasEnum.SOUTH:\n        ySlice = this._getYSlice(sliceIndex);\n        return Array2D.hflip(ySlice);\n      case CamerasEnum.EAST:\n        xSlice = this._getXSlice(sliceIndex);\n        return Array2D.hflip(xSlice);\n      case CamerasEnum.WEST:\n        return this._getXSlice(sliceIndex);\n      case CamerasEnum.BOTTOM:\n        zSlice = this._getZSlice(sliceIndex);\n        return Array2D.vflip(zSlice);\n      case CamerasEnum.TOP:\n        return this._getZSlice(sliceIndex);\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n  }\n\n  getBackgroundSlices = (camera, sliceIndex, max = 17) => {\n    let backgroundSliceIndex = sliceIndex;\n    let backgroundSliceIndices = [];\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        while (backgroundSliceIndex < (SETTINGS.yMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.EAST:\n        while (backgroundSliceIndex < (SETTINGS.xMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.WEST:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n        while (backgroundSliceIndex < (SETTINGS.zMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.TOP:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n    backgroundSliceIndices = backgroundSliceIndices.slice(0, max);\n    const backgroundSlices = backgroundSliceIndices.map(i => this.getSlice(camera, i));\n    return backgroundSlices;\n  }\n\n  _getZSlice = z => this.objects[z]\n\n  _getXSlice = x => {\n    const slice = getEmpty2DArray(SETTINGS.zMax, SETTINGS.yMax);\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        slice[z][y] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getYSlice = y => {\n    const slice = getEmpty2DArray(SETTINGS.zMax, SETTINGS.xMax);\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        slice[z][x] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getCell = position => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < SETTINGS.xMax && y < SETTINGS.yMax && z < SETTINGS.zMax) {\n      return this.objects[z][y][x];\n    }\n    return null;\n  }\n\n  _setCell = (position, object) => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < SETTINGS.xMax && y < SETTINGS.yMax && z < SETTINGS.zMax) {\n      this.objects[z][y][x] = object;\n    }\n  }\n\n  _addCube = position => {\n    const context = getCellContext3D(position);\n    const c = new Cube(position, context);\n    this.addObject(position, c);\n  }\n\n  fill = () => {\n    const addObject = (pos, type, mod) => {\n      this.add(type, pos, mod);\n    };\n\n    addObject({ x: 7, y: 8, z: 0 }, 0);\n    addObject({ x: 8, y: 8, z: 0 }, 0);\n    addObject({ x: 7, y: 8, z: 1 }, 0);\n    addObject({ x: 8, y: 8, z: 1 }, 0);\n    addObject({ x: 7, y: 8, z: 2 }, 1, 'w');\n    addObject({ x: 8, y: 8, z: 2 }, 1, 'e');\n    addObject({ x: 7, y: 9, z: 0 }, 0);\n    addObject({ x: 8, y: 9, z: 0 }, 0);\n\n    addObject({ x: 12, y: 8, z: 1 }, 2);\n\n    this.setSurface(0, { x: 7, y: 8, z: 0 }, 'l', 1);\n    this.setSurface(0, { x: 8, y: 8, z: 1 }, 'b', 1);\n  }\n}\n\nDesign.freeze = design => {\n  const { objects } = design;\n  const objectsPacked = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  for (let z = 0; z < SETTINGS.zMax; z += 1) {\n    for (let y = 0; y < SETTINGS.xMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        const objectData = objects[z][y][x];\n        if (objectData) {\n          const jsonStr = JSON.stringify(objectData);\n          const json = JSON.parse(jsonStr);\n          json.typeName = objectData.constructor.typeName;\n          objectsPacked[z][y][x] = json;\n        }\n      }\n    }\n  }\n\n  const json = {\n    objects: objectsPacked\n  };\n\n  return json;\n};\n\nDesign.thaw = json => {\n  const { objects } = json;\n  const objectsUnpacked = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  // Deserialize all the object data into objects\n  for (let z = 0; z < SETTINGS.zMax; z += 1) {\n    for (let y = 0; y < SETTINGS.xMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        const objectData = objects[z][y][x];\n        if (objectData) {\n          let object = null;\n\n          const constructorFn = TypeToConstructorEnum[objectData.typeName];\n          object = new constructorFn(objectData);\n\n          objectsUnpacked[z][y][x] = object;\n        }\n      }\n    }\n  }\n\n  const design = new Design(objectsUnpacked);\n  return design;\n};\n\nexport default Design;\n","import Array2D from 'array2d';\nimport CamerasEnum from '../enums/CamerasEnum';\nimport { getEmpty2DArray, getCellContext3x3, getCornerContext2x2 } from '../helpers/Helpers';\n\n/* global SETTINGS */\n\n/** Class represents the topograhy of a design world */\nclass Topo {\n  constructor(heights) {\n    if (heights) {\n      this.heights = heights;\n    } else {\n      this.heights = getEmpty2DArray(SETTINGS.yMax, SETTINGS.xMax, 0);\n      this.fill();\n    }\n  }\n\n  clear = () => {\n    this.heights = getEmpty2DArray(SETTINGS.yMax, SETTINGS.xMax, 0);\n  };\n\n  increase = position => {\n    const height = this.heights[position.y][position.x] + 1;\n    if (height < SETTINGS.zMax) {\n      this.heights[position.y][position.x] = height;\n    }\n  };\n\n  decrease = position => {\n    const height = this.heights[position.y][position.x] - 1;\n    if (height >= 0) {\n      this.heights[position.y][position.x] = height;\n    }\n  };\n\n  /**\n   * Get the topography height at a given position\n   * @param {object} position - 2D position in the form {x:x,y:y}\n   */\n  getAt = position => this.heights[position.y][position.x];\n\n  /**\n   * Get a the 1D array of heights for the given slice at the camera angle\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getSlice = (camera, sliceIndex) => {\n    // console.log(`camera ${camera} and sliceIndex ${sliceIndex}`);\n    let heightsView;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        heightsView = this.heights;\n        break;\n      case CamerasEnum.SOUTH:\n        heightsView = Array2D.hflip(this.heights);\n        break;\n      case CamerasEnum.EAST:\n        heightsView = Array2D.hflip(Array2D.transpose(this.heights));\n        break;\n      case CamerasEnum.WEST:\n        heightsView = Array2D.transpose(this.heights);\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        return null;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n\n    const back = [];\n    const front = [];\n    const all = [];\n\n    /*\n    For a given slice, get the highest corners of the front of the current cube and\n    the cubes in front and back and left and right. Imagine a sheet hung\n    over stacks of cubes. That is what we represent. This is necessary\n    because we set the heights of the cells, but we render the heights\n    at half way points in the slices.\n    */\n    for (let i = 0; i < heightsView[sliceIndex].length; i += 1) {\n      // Get the context\n      const context = getCellContext3x3(heightsView, i, sliceIndex);\n      const {\n        topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight\n      } = context;\n      // Find the heightest points\n      all.push([Math.max(bottomLeft, bottom, topLeft, top, left, center), Math.max(bottom, bottomRight, top, topRight, center, right)]);\n      back.push([Math.max(topLeft, top, left, center), Math.max(top, topRight, center, right)]);\n      front.push([ Math.max(bottomLeft, bottom, left, center), Math.max(bottom, bottomRight, center, right) ]);\n    }\n\n    return { all, front, back };\n  };\n\n  getBackgroundSlices = (camera, sliceIndex, max = 17) => {\n    let backgroundSliceIndex = sliceIndex;\n    let backgroundSliceIndices = [];\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        while (backgroundSliceIndex < (SETTINGS.yMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.EAST:\n        while (backgroundSliceIndex < (SETTINGS.xMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.WEST:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        // no background topo for top view\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n    backgroundSliceIndices = backgroundSliceIndices.slice(0, max);\n    const backgroundSlices = backgroundSliceIndices.map(i => this.getSlice(camera, i));\n    return backgroundSlices;\n  }\n\n  /**\n   * Get 2D array of all the corner heights (at each corner use the highest adjacent tile)\n   */\n  getCorners = () => {\n    const { length } = this.heights;\n    const cornersLength = length + 1;\n    // Create a 2D array 1 longer and wider than heights\n    const corners = getEmpty2DArray(cornersLength, cornersLength, 0);\n\n    for (let y = 0; y < cornersLength; y += 1) {\n      for (let x = 0; x < cornersLength; x += 1) {\n        const context = getCornerContext2x2(this.heights, x, y);\n        const {\n          topLeft, topRight, bottomLeft, bottomRight\n        } = context;\n        // console.log(topLeft, topRight, bottomLeft, bottomRight);\n        corners[y][x] = Math.max(topLeft, topRight, bottomLeft, bottomRight);\n      }\n    }\n\n    // console.dir(corners);\n    return corners;\n  };\n\n  fill = () => {\n    this.heights[8][12] = 1;\n  }\n}\n\nTopo.freeze = topo => {\n  const jsonStr = JSON.stringify(topo);\n  const json = JSON.parse(jsonStr);\n\n  return json;\n};\n\nTopo.thaw = json => {\n  const { heights } = json;\n  const topo = new Topo(heights);\n  return topo;\n};\n\nexport default Topo;\n","import Monitor from './Monitor';\nimport Design from './Design';\nimport Topo from './Topo';\nimport beep from '../helpers/Sounds';\n\n/* global localStorage */\n\n/**\n* Represents a user's session with the system and provides an interface for\n* the UI to display information about it.\n*/\nclass U5Session {\n  constructor(id) {\n    this._id = id;\n  }\n\n  onUpdate = () => {\n    // calculate totals\n    this._design.calculateAttributes(this.topo);\n\n    // monitor checks design\n    const newProblems = this._monitor.checkDesign(this._design);\n    if (newProblems) {\n      beep();\n    }\n\n    // save\n    this.save();\n  };\n\n  clear = () => {\n    this._design.clear();\n    this._topo.clear();\n    this._monitor.clearConstraints();\n    this.onUpdate();\n  };\n\n  // Interface for the design model\n  design = {\n    add: (type, xyz, meta) => {\n      this._design.add(type, xyz, meta);\n      this.onUpdate();\n    },\n    remove: xyz => {\n      this._design.remove(xyz);\n      this.onUpdate();\n    },\n    setSurface: (camera, xyz, side, surface) => {\n      this._design.setSurface(camera, xyz, side, surface);\n      this.onUpdate();\n    },\n    // Get the 3D array of design\n    getAll: () => this._design.getAll(),\n    getAt: p => this._design.getAt(p),\n    // Get array of objects\n    getObjects: () => this._design.getObjects(),\n    // Get the 2D array of objects for a given slice\n    getSlice: (camera, slice) => this._design.getSlice(camera, slice),\n    getBackgroundSlices: (camera, slice, max) => this._design.getBackgroundSlices(camera, slice, max)\n  };\n\n  // Interface for the topography model\n  topo = {\n    // Increase the height of the topography at position xy by 1\n    increase: xy => {\n      this._topo.increase(xy);\n      this.onUpdate();\n    },\n    // Decrease the height of the topography at position xy by 1\n    decrease: xy => {\n      this._topo.decrease(xy);\n      this.onUpdate();\n    },\n    // Get the 2D array of heights for the topography\n    getCorners: () => this._topo.getCorners(),\n    // Get the 2D array of heights for the topography\n    getAt: xy => this._topo.getAt(xy),\n    // Get a list of heights for the topography at the corners for a line representing it in a slice\n    getSlice: (camera, slice) => this._topo.getSlice(camera, slice),\n    getBackgroundSlices: (camera, slice, max) => this._topo.getBackgroundSlices(camera, slice, max)\n  };\n\n  // Interface for the monitor\n  monitor = {\n    addConstraint: text => {\n      const success = this._monitor.addConstraint(text);\n      if (success) {\n        setTimeout(this.onUpdate, 4000);\n      }\n    },\n    clearConstraints: () => {\n      this._monitor.clearConstraints();\n      this.onUpdate();\n    },\n    getMessages: () => this._monitor.getMessages(),\n    setMessages: messages => this._monitor.setMessages(messages)\n  };\n\n  save = () => {\n    // console.log('save!');\n    const ice = U5Session.freeze(this);\n    localStorage.setItem(this._id, JSON.stringify(ice));\n    localStorage.setItem(`${this._id}_date`, Date.now());\n  };\n}\n\nU5Session.create = id => {\n  const session = new U5Session(id);\n  session._design = new Design();  // eslint-disable-line\n  session._topo = new Topo();  // eslint-disable-line\n  session._monitor = new Monitor();  // eslint-disable-line\n\n  session.save();\n  return session;\n};\n\nU5Session.freeze = session => {\n  const { _id, _design, _topo, _monitor } = session;  // eslint-disable-line\n\n  const json = {\n    id: _id,\n    design: Design.freeze(_design),\n    topo: Topo.freeze(_topo),\n    monitor: Monitor.freeze(_monitor)\n  };\n\n  return json;\n};\n\nU5Session.thaw = json => {\n  const { id, design, topo, monitor, date } = json;  // eslint-disable-line\n  const session = new U5Session(id);\n  session._design = Design.thaw(design);  // eslint-disable-line\n  session._topo = Topo.thaw(topo);  // eslint-disable-line\n  session._monitor = Monitor.thaw(monitor);  // eslint-disable-line\n\n  session.onUpdate();\n\n  return session;\n};\n\nexport default U5Session;\n","\n// play a beep sound\nexport default function beep() {\n  const snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n  snd.play();\n}\n","import U5Session from './U5Session';\n\n/* global localStorage */\n\n/** Provides access to previous, new, and test U5Sessions */\nexport default class U5SessionFactory {\n  getIDList = () => {\n    let ids = localStorage.getItem('U5SessionIDList');\n    if (!ids) {\n      ids = [];\n    } else {\n      ids = ids.split(',');\n    }\n    console.log(ids);\n    return ids;\n  }\n\n  get = id => {\n    const json = JSON.parse(localStorage.getItem(id));\n    const session = U5Session.thaw(json);\n\n    // Reorder sessions to make this session the most recent\n    let ids = this.getIDList();\n    ids = ids.filter(item => item !== id);\n    ids.push(id);\n    this._setIDList(ids);\n\n    return session;\n  }\n\n  remove = id => {\n    let ids = this.getIDList();\n    ids = ids.filter(item => item !== id);\n    this._setIDList(ids);\n    return ids;\n  }\n\n  last = () => {\n    const ids = this.getIDList();\n    const id = ids.pop();\n\n    if (!id) {\n      return this.newSession();\n    }\n\n    const json = JSON.parse(localStorage.getItem(id));\n    const session = U5Session.thaw(json);\n\n    return session;\n  }\n\n  newSession = () => {\n    const id = this._getNextID();\n\n    const ids = this.getIDList();\n    ids.push(id);\n    this._setIDList(ids);\n\n    const session = U5Session.create(id);\n    return session;\n  }\n\n  test = () => {\n    const id = this._getNextID();\n\n    const ids = this.getIDList();\n    ids.push(id);\n    this._setIDList(ids);\n\n    // Always get the same data, but save to new id\n    const test = localStorage.getItem('U5SessionTestData');\n\n    test.id = id;\n    const session = U5Session.thaw(test);\n    return session;\n  }\n\n  _setIDList = ids => localStorage.setItem('U5SessionIDList', ids)\n\n  _getNextID = () => {\n    let currentID = localStorage.getItem('U5SessionIDCount');\n    if (!currentID) {\n      currentID = 0;\n    }\n    currentID = parseInt(currentID, 10) + 1;\n    localStorage.setItem('U5SessionIDCount', currentID);\n    return `U5Session_${currentID}`;\n  }\n}\n","import React from 'react';\n\nimport U5SessionFactory from '../js/data/U5SessionFactory';\n\n/** Class for the rendering the main view with top, menu, and center panels */\nexport default class LoadPage extends React.Component {\n\n  state = {};\n\n  componentDidMount() {\n  }\n\n  onButtonClick = id => {\n    const { onSelectSession } = this.props;\n    const factory = new U5SessionFactory();\n    let session;\n    if (id === 'new') {\n      session = factory.newSession();\n    } else if (id === 'last') {\n      session = factory.last();\n    } else {\n      session = factory.get(id);\n    }\n\n    onSelectSession(session);\n  }\n\n  getButton = id => {\n    const date = localStorage.getItem(`${id}_date`);\n    let dateStr = '';\n    if (date) {\n      dateStr = new Date(parseInt(date)).toLocaleString();\n    }\n    const title = dateStr;\n    return (<li key={id}><button type=\"button\" onClick={e => this.onButtonClick(id)}>{title}</button></li>);\n  }\n\n  render() {\n    const ids = new U5SessionFactory().getIDList();\n    ids.reverse();\n    const recentIds = ids.slice(0, 8);\n\n    return (\n      <div>\n        <div>Load Previous Session:</div>\n        <ul style={{ lineHeight: '28px' }}>\n          <li key={'new'}><button type=\"button\" onClick={e => this.onButtonClick('new')}>NEW</button></li>\n          { recentIds.map(this.getButton) }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* global document */\n\n/** Class for the top of the screen where text interaction with URBAN5 takes place */\nexport default class TextInput extends React.PureComponent {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    value: ''\n  };\n\n  componentDidMount() {\n    this.input = document.getElementById('speak');\n    this.input.addEventListener('keydown', this.handleKeyDown);\n    this.input.focus();\n  }\n\n  componentWillUnmount() {\n    this.input.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) { // Is 'Enter'\n      this.handleSubmit();\n    }\n  };\n\n  handleChange = event => {\n    const val = event.target.value;\n    const actualVal = val;\n    this.setState({ value: actualVal });\n  };\n\n  handleSubmit = () => {\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n\n    this.setState({ value: '' });\n    onSubmit(value);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div>\n        <input type=\"text\" id=\"speak\" autoComplete=\"off\" spellCheck=\"false\" value={value} onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport U5SessionFactory from '../js/data/U5SessionFactory';\nimport LoadPage from './LoadPage';\nimport TextInput from './TextInput';\n\n/* global SETTINGS */\n/* global document */\n\n/** Class for the rendering the main view with top, menu, and center panels */\nexport default class StartPage extends React.Component {\n\n  state = {\n    stageId: -1,\n    firstTime: null\n  };\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyStartSession);\n    document.removeEventListener('keydown', this.next);\n  }\n\n  handleKeyStartSession = e => {\n    e.preventDefault();\n    this.newSession();\n  }\n\n  onFirstTimeSpeak = text => {\n    if (text.toLowerCase().includes('y')) {\n      this.setState({ stageId: 1, firstTime: true });\n    } else {\n      this.setState({ stageId: 1, firstTime: false });\n    }\n  };\n\n  onNameSpeak = text => {\n    const { firstTime } = this.state;\n    SETTINGS.userName = text ? text : 'User';\n    if (firstTime) {\n      this.setState({ stageId: 3 });\n    } else {\n      this.setState({ stageId: 2 });\n    }\n  };\n\n  newSession = () => {\n    const { onSelectSession } = this.props;\n    const session = new U5SessionFactory().newSession();\n    onSelectSession(session);\n  }\n\n  next = e => {\n    e.preventDefault();\n    const { stageId } = this.state;\n    this.setState({ stageId: stageId + 1 });\n    document.removeEventListener('keydown', this.next);\n  }\n\n  getStage = () => {\n    const { stageId } = this.state;\n    const { onSelectSession } = this.props;\n    switch (stageId) {\n      case -1:\n        document.addEventListener('keydown', this.next);\n        return (\n          <div>\n            <h1>URBAN5</h1>\n            <div>Welcome to a recreation of Nicholas Negroponte's URBAN5.</div>\n            <br />\n            <div>URBAN5 is an urban planning tool representing the built environment as ten foot cubes.</div>\n            <br />\n            <div>The purpose of this project is not an exact replica of the original with the same hardware and software, but rather an approximation using modern tools to enrich our understanding of the device. URBAN5 was created with the goal to “study the desirability and feasibility of conversing with a machine about an environmental design project.”</div>\n            <br />\n            <br />\n            <button type=\"button\" onClick={this.next}>&gt; CONTINUE</button>\n            <br />\n            <br />\n            <div style={{ textAlign: 'center', margin: '40px' }}>\n              <img src=\"imgs/zoomscrn.png\" alt=\"original\" />\n            </div>\n          </div>\n        );\n      case 0:\n        return (\n          <div>\n            <div>Is this the first time you are using the machine? (Y/N)</div>\n            <input type=\"text\" id=\"speak\" autoComplete=\"off\" spellCheck=\"false\" value=\"\" onChange={e => this.onFirstTimeSpeak(e.target.value)} autoFocus />\n          </div>\n        );\n      case 1:\n        return (\n          <div>\n            <div>What is your name?</div>\n            <TextInput onSubmit={this.onNameSpeak} />\n          </div>\n        );\n      case 2:\n        return (\n          <div>\n            <LoadPage onSelectSession={onSelectSession} />\n          </div>\n        );\n      case 3:\n        // new session on any key, setTimeout so it gets add after key down event triggering this\n        setTimeout(() => document.addEventListener('keydown', this.handleKeyStartSession), 0);\n        return (\n          <div>\n            <div>\n              Welcome&nbsp;\n              <span>{ SETTINGS.userName }!</span>\n            </div>\n            <br />\n            <br />\n            <div>To save and exit at any time, press Escape.</div>\n            {/*<div>Draw mode permits you to manipulate elements within a given two dimensional plane at any scale. You have already described the volume of your site, this rectangular chunk can be sectioned vertically or horizontally. The \"slice\" itself can be moved in or out(\"stepin or stepout\") or rotated ninety degrees(\"lookleft\" or \"lookright\"), to start, the machine assumes a vertical slice looking through the center of your site, looking north.</div>*/}\n            <br />\n            <br />\n            <button type=\"button\" onClick={this.newSession}>&gt; CONTINUE</button>\n          </div>\n        );\n      default:\n        break;\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ width: '1024px', height: '100%', float: 'left' }}>\n          <div style={{ padding: '80px' }}>\n            { this.getStage() }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class for the side panel of 'light buttons' */\nexport default class Menu extends React.PureComponent {\n  static propTypes = {\n    // Array of ActionsEnum to show\n    actions: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    // Function to call when button is clicked\n    onClick: PropTypes.func.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  render() {\n    const buttonElements = [];\n\n    const { actions, onClick, action } = this.props;\n    if (actions) {\n      actions.forEach(item => {\n        buttonElements.push((\n          <button\n            type=\"button\"\n            key={item.label}\n            onClick={e => {\n              e.preventDefault();\n              onClick(item);\n            }}\n            style={{ display: 'block', whiteSpace: 'pre' }}\n          >\n            {item.label + (item.id === action.id ? '_' : '')}\n          </button>\n        ));\n      });\n    }\n\n    return (\n      <div>\n        {buttonElements}\n      </div>\n    );\n  }\n}\n","const ActionsEnum = {\n  STEPOUT: { id: 0, label: 'STEP OUT' }, // Retreat to the previous slice\n  STEPIN: { id: 1, label: 'STEP  IN' }, // Advance to the next slice\n  ADDCUBE: { id: 2, label: 'ADD CUBE' }, // Add a cube\n  REMOVE: { id: 3, label: 'DELETE' }, // Remove an object\n  ROTATELT: { id: 4, label: 'LOOKLEFT' }, // Rotate the view to the right\n  ROTATERT: { id: 5, label: 'LOOKRGHT' }, // Rotate the view to the left\n  ADDTREE: { id: 6, label: 'ADD TREE' }, // Add a Tree (trunk and foliage)\n  ADD_ROOF_NORTH: { id: 7, label: 'ADDROOFN' }, // Add Angled Roof down towards north\n  ADD_ROOF_SOUTH: { id: 8, label: 'ADDROOFS' }, // Add Angled Roof down towards south\n  WALKTHRU: { id: 9, label: 'WALKTHRU' }, // Start walkthrough\n  // EDITTOPO: { id: 10, label: 'EDITTOPO' }, // Edit topo mode\n  SPEAK_CONSTRAINT: { id: 11, label: 'SPEAK' }, // Enter text constraint\n  INCREASE_HEIGHT: { id: 12, label: 'INCRS HT' },\n  DECREASE_HEIGHT: { id: 13, label: 'DECRS HT' },\n  SOLID_SURFACE: { id: 14, label: 'SOLIDSRF' },\n  PARTITION_SURFACE: { id: 15, label: 'PARTTION' },\n  TRANSPARENT_SURFACE: { id: 16, label: 'TRANSPNT' },\n  NO_SURFACE: { id: 17, label: 'NO SRF' },\n  HAS_ACCESS: { id: 18, label: 'HASACCSS' },\n  NO_ACCESS: { id: 19, label: 'NO ACCSS' },\n  ADD_ROOF_WEST: { id: 20, label: 'ADDROOFW' }, // Add Angled Roof down towards west\n  ADD_ROOF_EAST: { id: 21, label: 'ADDROOFE' }, // Add Angled Roof down towards east\n  ADDROOF: { id: 22, label: 'ADD ROOF' }, // Add Roof, click rotates\n\n  isAdd: action => [2, 6, 7, 8, 20, 21].includes(action.id),\n};\n\nexport default ActionsEnum;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActionsEnum from '../js/enums/ActionsEnum';\nimport TextInput from './TextInput';\n\n/* global window */\n/* global document */\n\n/** Class for the top of the screen where text interaction with URBAN5 takes place */\nexport default class Top extends React.PureComponent {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    textMessages: []\n  };\n\n  componentDidMount() {\n    const { session } = this.props;\n\n    const poll = () => {\n      const textMessages = session.monitor.getMessages();\n      this.setState({ textMessages });\n      this.pollTimeout = setTimeout(poll, 100);\n    };\n    poll();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  onMessage = newMessage => {\n    this.setState(prevState => ({ textMessages: [...prevState.textMessages, newMessage] }));\n  }\n\n  componentDidUpdate = () => {\n    this.scrollElement();\n  }\n\n  scrollElement = () => {\n    window.requestAnimationFrame(() => {\n      const container = document.getElementById('topContainer');\n      if (container !== undefined) {\n        container.scrollTop = container.scrollHeight + 100;\n      }\n    });\n  };\n\n  onSpeak = text => {\n    const { session } = this.props;\n    session.monitor.addConstraint(text);\n    const textMessages = session.monitor.getMessages();\n    this.setState({ textMessages: textMessages.slice() });\n  };\n\n  render() {\n    const { action } = this.props;\n    const { textMessages } = this.state;\n\n    let textInput = null;\n\n    if (action === ActionsEnum.SPEAK_CONSTRAINT) {\n      textInput = (\n        <div>\n          <TextInput onSubmit={this.onSpeak} />\n        </div>\n      );\n    }\n\n    console.log('textMessages', textMessages);\n    const messageElements = textMessages.map(message => (\n      <div className=\"mono-text\" key={message}>{message}</div>\n    ));\n\n    return (\n      <div id=\"topContainer\" style={{ overflow: 'hidden', height: '75px' }}>\n        { messageElements }\n        { textInput }\n      </div>\n    );\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\n/* global SETTINGS */\n\nexport default class TopoRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  draw = (topoSlice, isBackground) => {\n    const line = new createjs.Shape();\n    let cornerX;\n    let cornerY;\n\n    // Draw the heights left to right as a connected line\n    cornerX = 1;\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    if (isBackground) {\n      line.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    topoSlice.all.forEach(s => {\n      const [ startHeight, endHeight ] = s;\n      cornerY = SETTINGS.h - 1 - (startHeight * SETTINGS.r);\n      line.graphics.moveTo(cornerX, cornerY);\n      cornerX += SETTINGS.r;\n      cornerY = SETTINGS.h - 1 - (endHeight * SETTINGS.r);\n      line.graphics.lineTo(cornerX, cornerY);\n    });\n    line.graphics.endStroke();\n\n    this.stage.addChild(line);\n  }\n}\n","import { createjs } from '@createjs/easeljs';\nimport CamerasEnum from '../enums/CamerasEnum';\nimport SurfacesEnum from '../enums/SurfacesEnum';\nimport Cube from '../data/Cube';\nimport { Trunk, Foliage } from '../data/Tree';\nimport Roof from '../data/Roof';\n\n/* global SETTINGS */\n\n/** Class responsible for rendering a 2D slice */\nexport default class DesignRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  /**\n   * Add a slice to the view\n   * @param {int} camera - CamerasEnum\n   * @param {int[][]} slice - 2D array representing slice to add\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  drawSlice = (camera, slice, isDashed = false) => {\n    this.camera = camera;\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const cell = row[x];\n\n        if (cell) {\n          switch (cell.constructor) {\n            case Cube:\n              this.drawCube(cell, camera, this.stage, x, y, isDashed);\n              break;\n            case Roof:\n              this.drawRoof(cell, camera, this.stage, x, y, isDashed);\n              break;\n            case Foliage:\n              // Dont draw background trees\n              if (!isDashed) {\n                this.drawFoliage(camera, this.stage, x, y, isDashed);\n              }\n              break;\n            case Trunk:\n              // Dont draw background trees\n              if (!isDashed) {\n                this.drawTrunk(camera, this.stage, x, y, isDashed);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * SETTINGS.r;\n        const contextY = SETTINGS.h - ((y + 0.5) * SETTINGS.r);\n\n        point.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke - 1).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /**\n   * Draw a circle at the location\n   * @param {int} x\n   * @param {int} y\n   */\n  drawCircle = (x, y) => {\n    const circle = new createjs.Shape();\n\n    circle.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    circle.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    this.stage.addChild(circle);\n  };\n\n  drawCube = (cube, camera, stage, x, y, isDashed = false) => {\n    let drawLeft, drawTop, drawRight, drawBottom;\n    const s = cube.surfaces;\n    // Lines on the sides require knowing the camera angle\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.SOUTH:\n        drawLeft = s.e === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.w === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.EAST:\n        drawLeft = s.n === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.s === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.WEST:\n        drawLeft = s.s === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.n === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.TOP:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.n === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.s === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.BOTTOM:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.s === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.n === SurfacesEnum.SOLID;\n        break;\n      default:\n        return;\n    }\n\n    this._drawCubeSquare(stage, x, y, isDashed, drawLeft, drawTop, drawRight, drawBottom);\n  };\n\n  _drawCubeSquare = (stage, x, y, isDashed = false, drawLeft = true, drawTop = true, drawRight = true, drawBottom = true) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    if (isDashed) {\n      shape.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    if (drawLeft) { // left\n      shape.graphics.moveTo(sx, sy).lineTo(sx, sy + dy);\n    }\n    if (drawTop) { // top\n      shape.graphics.moveTo(sx, sy + dy).lineTo(sx + dx, sy + dy);\n    }\n    if (drawRight) { // right\n      shape.graphics.moveTo(sx + dx, sy + dy).lineTo(sx + dx, sy);\n    }\n    if (drawBottom) { // bottom\n      shape.graphics.moveTo(sx + dx, sy).lineTo(sx, sy);\n    }\n\n    stage.addChild(shape);\n  };\n\n  drawRoof = (roof, camera, stage, x, y, isDashed = false) => {\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        if (roof.direction === 'n' || roof.direction === 's') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'w') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'e') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        if (roof.direction === 'n' || roof.direction === 's') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'e') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'w') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.EAST:\n        if (roof.direction === 'e' || roof.direction === 'w') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 's') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'n') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.WEST:\n        if (roof.direction === 'e' || roof.direction === 'w') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'n') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 's') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        this._drawRoofSquare(stage, x, y, isDashed);\n        break;\n      default:\n    }\n  };\n\n  _drawRoofSquare = (stage, x, y, isDashed = false) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    if (isDashed) {\n      shape.graphics.setStrokeDash([3, 7], 0);\n    }\n\n    shape.graphics.drawRect(sx, sy, dx, dy);\n    stage.addChild(shape);\n  };\n\n  /**\n   * Draw a line that slants down to the left\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofSlantLeft = (obj, stage, x, y, isDashed = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    let cornerX = (x * SETTINGS.r) + 1;\n    let cornerY = SETTINGS.h - (y * SETTINGS.r) - 1;\n    roof.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += SETTINGS.r;\n    cornerY -= SETTINGS.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (obj.hasSideSurface) {\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += SETTINGS.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    stage.addChild(roof);\n  };\n\n  /**\n   * Draw a line that slants down to the right\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofSlantRight = (obj, stage, x, y, isDashed = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    let cornerX = (x * SETTINGS.r) + 1;\n    let cornerY = SETTINGS.h - ((y + 1) * SETTINGS.r) - 1;\n    roof.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += SETTINGS.r;\n    cornerY += SETTINGS.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (obj.hasSideSurface) {\n      cornerX -= SETTINGS.r;\n      cornerY -= SETTINGS.r;\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += SETTINGS.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    stage.addChild(roof);\n  };\n\n  /**\n   * Draws the circle representing foliage of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   */\n  drawFoliage = (camera, stage, x, y, isDashed = false) => {\n    const foliage = new createjs.Shape();\n\n    if (isDashed) {\n      foliage.graphics.setStrokeDash([SETTINGS.stroke, 7], 0);\n    }\n\n    foliage.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    foliage.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    stage.addChild(foliage);\n  };\n\n  /**\n   * Draws the trunk of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  drawTrunk = (camera, stage, x, y, isDashed = false) => {\n    const trunk = new createjs.Shape();\n\n    if (isDashed) {\n      trunk.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    trunk.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - (y * SETTINGS.r) - 1;\n\n    // The trunk is a rectangle from the side and a dot from the ends\n    switch (camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n        // Draw a line\n        trunk.graphics.moveTo(cornerX, cornerY).lineTo(cornerX, cornerY - SETTINGS.r);\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        // Draw no point, because grid point\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n\n    stage.addChild(trunk);\n  };\n}\n","import { createjs } from '@createjs/easeljs';\nimport CamerasEnum from '../enums/CamerasEnum';\nimport { getEmpty2DArray } from '../helpers/Helpers';\n\nimport TopoRenderer2D from './TopoRenderer2D';\nimport DesignRenderer2D from './DesignRenderer2D';\n\n/* global SETTINGS */\n\n/** Class responsible for rednering a 2D slice */\nexport default class Display2DView {\n  constructor(canvas, session) {\n    this.session = session;\n    this.stage = new createjs.Stage(canvas);\n    this.designRenderer = new DesignRenderer2D(this.stage);\n    this.topoRenderer = new TopoRenderer2D(this.stage);\n\n    this.drawBackground = true; // Whether background slices should be rendered\n  }\n\n  /**\n   * Draw the given sliceIndex for the camera angle to the screen\n   * @param {int} camera - CamerasEnum\n   * @param {int} sliceIndex - Index of slice of model from given camera view to draw\n   * @param {int} isBackgroundDashed - Draw objects in background slices as dashed lines\n   */\n  draw = (camera, sliceIndex, isBackgroundDashed = true) => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    // Draw the topography\n    const topoSlice = this.session.topo.getSlice(camera, sliceIndex);\n    if (topoSlice) {\n      this.topoRenderer.draw(topoSlice);\n    }\n\n    // Draw the background slices\n    if (this.drawBackground) {\n      const topoBackgroundSlices = this.session.topo.getBackgroundSlices(camera, sliceIndex, SETTINGS.clippingMax);\n      topoBackgroundSlices.forEach(s => this.topoRenderer.draw(s, isBackgroundDashed));\n\n      const backgroundSlices = this.session.design.getBackgroundSlices(camera, sliceIndex, SETTINGS.clippingMax);\n      backgroundSlices.forEach(s => this.designRenderer.drawSlice(camera, s, isBackgroundDashed));\n    }\n\n    // Draw the given slice\n    const currentSlice = this.session.design.getSlice(camera, sliceIndex);\n    this.designRenderer.drawSlice(camera, currentSlice);\n\n    // Draw the grid of appropriate size for this slice\n    this.designRenderer.drawGridPoints(currentSlice);\n\n    // Render to the screen\n    this.stage.update();\n  };\n\n  /**\n   * Draw a version where all the layers are compressed into a single top view\n   */\n  drawTopCompressedView = () => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    const allSlices = this.session.design.getBackgroundSlices(CamerasEnum.TOP, SETTINGS.zMax);\n    // Reverse to go from bottom up\n    allSlices.reverse();\n\n    // Create master slice from all slices\n    const masterSlice = getEmpty2DArray(SETTINGS.xMax, SETTINGS.yMax, null);\n    for (let y = 0; y < SETTINGS.yMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        let topObj = null;\n        allSlices.forEach(slice => {\n          const obj = slice[y][x];\n          if (obj) {\n            topObj = obj;\n          }\n        });\n        masterSlice[y][x] = topObj;\n      }\n    }\n\n    this.designRenderer.drawSlice(CamerasEnum.TOP, masterSlice);\n\n    // Render to the screen\n    this.stage.update();\n  };\n\n  /** Update the screen */\n  update = () => {\n    this.stage.update();\n  };\n\n  /** Clear the screen */\n  clear = () => {\n    this.stage.removeAllChildren();\n    this.stage.update();\n  };\n\n  /**\n   * Draw a line representing the 1D slice of topography\n   * @param {array} topoSlice - heights at given locations\n   */\n  _drawTopoSlice = topoSlice => {\n    const line = new createjs.Shape();\n    let cornerX = 1;\n    let cornerY;\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    // Draw the heights left to right as a connected line\n    topoSlice.forEach(s => {\n      const { startHeight, endHeight } = s;\n      cornerY = SETTINGS.h - 1 - (startHeight * SETTINGS.r);\n      line.graphics.moveTo(cornerX, cornerY);\n      cornerX += SETTINGS.r;\n      cornerY = SETTINGS.h - 1 - (endHeight * SETTINGS.r);\n      line.graphics.lineTo(cornerX, cornerY);\n    });\n    line.graphics.endStroke();\n\n    this.stage.addChild(line);\n  };\n\n  /**\n   * Add a slice to the view\n   * @param {int} camera - CamerasEnum\n   * @param {int[][]} slice - 2D array representing slice to add\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  _drawSlice = (camera, slice, isDashed = false) => {\n    this.camera = camera;\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const cell = row[x];\n\n        if (cell) {\n          cell.draw2D(camera, this.stage, x, y, isDashed);\n        }\n      }\n    }\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  _drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * SETTINGS.r;\n        const contextY = SETTINGS.h - ((y + 0.5) * SETTINGS.r);\n\n        point.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke - 1).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /**\n   * Draw a circle at the location\n   * @param {int} x\n   * @param {int} y\n   */\n  drawCircle = (x, y) => {\n    const circle = new createjs.Shape();\n\n    circle.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    circle.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    this.stage.addChild(circle);\n  };\n\n  animateX = (path, position, speed, callback) => {\n    if (position >= path.length) {\n      callback();\n      return;\n    }\n\n    const p = path[position];\n    const xObj = this.drawX(p.xNoise, p.yNoise);\n    this.update();\n    setTimeout(() => {\n      this.stage.removeChild(xObj);\n      this.animateX(path, position + 1, speed, callback);\n    }, speed);\n  };\n\n  drawX = (x, y) => {\n    const line = new createjs.Shape();\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const offset = 0.2;\n    const cornerX = (x + offset) * SETTINGS.r;\n    const cornerY = SETTINGS.h - ((y + offset) * SETTINGS.r);\n    line.graphics.moveTo(cornerX, cornerY).lineTo(cornerX + ((1 - (2 * offset)) * SETTINGS.r), cornerY - ((1 - (2 * offset)) * SETTINGS.r));\n\n    const cornerX2 = (x + 1 - offset) * SETTINGS.r;\n    const cornerY2 = SETTINGS.h - ((y + offset) * SETTINGS.r);\n    line.graphics.moveTo(cornerX2, cornerY2).lineTo(cornerX2 - ((1 - (2 * offset)) * SETTINGS.r), cornerY2 - ((1 - (2 * offset)) * SETTINGS.r));\n    return this.stage.addChild(line);\n  }\n}\n","import CamerasEnum from '../enums/CamerasEnum';\nimport ActionsEnum from '../enums/ActionsEnum';\nimport ObjectsEnum from '../enums/ObjectsEnum';\nimport SurfacesEnum from '../enums/SurfacesEnum';\n\n/* global SETTINGS */\n\n/** Class to control rotating to different slice angles and elevations and moving through slices */\nexport default class Display2DController {\n  constructor(session, cameraView) {\n    this.session = session;\n\n    this.gridSize = SETTINGS.gridSize;\n    this.xMax = SETTINGS.xMax;\n    this.yMax = SETTINGS.yMax;\n    this.zMax = SETTINGS.zMax;\n\n    this.cameraView = cameraView;\n    this.views = [];\n    this.isBackgroundDashed = true;\n\n    this.north();\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  doAction = (action, clickX, clickY, modifier) => {\n    const modelPosition = this.getRelativePosition(clickX, clickY);\n    // Execute the currently selected action from the light button at the click location\n    switch (action) {\n      case ActionsEnum.STEPOUT:\n        this.previousSlice();\n        break;\n      case ActionsEnum.STEPIN:\n        this.nextSlice();\n        break;\n      case ActionsEnum.ADDCUBE:\n        this.addObject(modelPosition, ObjectsEnum.CUBE);\n        break;\n      case ActionsEnum.REMOVE:\n        this.removeObject(modelPosition);\n        break;\n      case ActionsEnum.ROTATELT:\n        this.rotateLeft();\n        break;\n      case ActionsEnum.ROTATERT:\n        this.rotateRight();\n        break;\n      case ActionsEnum.ADDTREE:\n        this.addObject(modelPosition, ObjectsEnum.TRUNK);\n        break;\n      case ActionsEnum.ADDROOF:\n        const object = this.session.design.getAt(modelPosition);\n        if (object && object.constructor.typeName === 'ROOF') {\n          if (object.direction === 'e') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'n');\n          } else if (object.direction === 'n') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'w');\n          } else if (object.direction === 'w') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 's');\n          } else if (object.direction === 's') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n          }\n        } else {\n          this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n        }\n        break;\n      case ActionsEnum.ADD_ROOF_EAST:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n        break;\n      case ActionsEnum.ADD_ROOF_WEST:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'w');\n        break;\n      case ActionsEnum.ADD_ROOF_NORTH:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'n');\n        break;\n      case ActionsEnum.ADD_ROOF_SOUTH:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 's');\n        break;\n      case ActionsEnum.EDITTOPO:\n        this.setTopoHeight(modelPosition);\n        break;\n      case ActionsEnum.NO_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.NONE);\n        break;\n      case ActionsEnum.SOLID_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.SOLID);\n        break;\n      case ActionsEnum.TRANSPARENT_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.TRANS);\n        break;\n      case ActionsEnum.PARTITION_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.PART);\n        break;\n      default:\n        // nothing\n        break;\n    }\n  };\n\n  /**\n   * Add the object at the normalized position. Remove any object that is there.\n   * @param {object} modelPosition - {x,y,z}\n   */\n  addObject = (modelPosition, object, modifier) => {\n    if (modelPosition) {\n      this.session.design.add(object, modelPosition, modifier);\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Remove the object at the normalized position.\n   * @param {object} modelPosition - {x,y,z}\n   */\n  removeObject = modelPosition => {\n    if (modelPosition) {\n      this.session.design.remove(modelPosition);\n      this.updateViews();\n    }\n  }\n\n  /**\n   */\n  setSurface = (camera, position, side, surface) => {\n    if (position) {\n      this.session.design.setSurface(camera, position, side, surface);\n      this.updateViews();\n    }\n  }\n\n  /** Move the view to the next slice, without exceeding the last slice */\n  nextSlice = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.cameraView.slices.y + 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.cameraView.slices.y - 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.cameraView.slices.x + 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.cameraView.slices.x - 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.cameraView.slices.z - 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.cameraView.slices.z + 1);\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n\n  /** Move the view to the previous slice, without going past 0 */\n  previousSlice = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.cameraView.slices.y - 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.cameraView.slices.y + 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.cameraView.slices.x - 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.cameraView.slices.x + 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.cameraView.slices.z + 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.cameraView.slices.z - 1);\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n\n  /** Set the camera view to NORTH and reset the slice to 0 */\n  north = () => this._setCamera('NORTH')\n\n  /** Set the camera view to SOUTH and reset the slice to 0 */\n  south = () => this._setCamera('SOUTH')\n\n  /** Set the camera view to EAST and reset the slice to 0 */\n  east = () => this._setCamera('EAST')\n\n  /** Set the camera view to WEST and reset the slice to 0 */\n  west = () => this._setCamera('WEST')\n\n  /** Set the camera view to TOP and reset the slice to 0 */\n  top = () => this._setCamera('TOP')\n\n  /** Set the camera view to BOTTOM and reset the slice to 0 */\n  bottom = () => this._setCamera('BOTTOM')\n\n  rotateLeft = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  rotateRight = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  /**\n   * Set the slice in view in the Z axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceZAxis = slice => {\n    if (slice >= 0 && slice < this.zMax) {\n      this.cameraView.slices.z = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the X axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceXAxis = slice => {\n    if (slice >= 0 && slice < this.xMax) {\n      this.cameraView.slices.x = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the Y axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceYAxis = slice => {\n    if (slice >= 0 && slice < this.yMax) {\n      this.cameraView.slices.y = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the camera view to the given view and reset the slice to 0\n   * @param {String} camera - CamerasEnum name\n   */\n  _setCamera = camera => {\n    this.cameraView.camera = CamerasEnum[camera];\n\n    let minX = SETTINGS.xMax;\n    let minY = SETTINGS.yMax;\n    let minZ = SETTINGS.zMax;\n    let maxX = 0;\n    let maxY = 0;\n    let maxZ = 0;\n\n    // set camera to first object on update\n    const objects = this.session.design.getObjects();\n    if (objects.length > 0) {\n      objects.forEach(object => {\n        const { x, y, z } = object.position;\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n        if (z < minZ) {\n          minZ = z;\n        }\n        if (z > maxZ) {\n          maxZ = z;\n        }\n      });\n    }\n\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this.cameraView.slices.y = minY;\n        break;\n      case CamerasEnum.SOUTH:\n        this.cameraView.slices.y = maxY;\n        break;\n      case CamerasEnum.EAST:\n        this.cameraView.slices.x = minX;\n        break;\n      case CamerasEnum.WEST:\n        this.cameraView.slices.x = maxX;\n        break;\n      case CamerasEnum.TOP:\n        this.cameraView.slices.z = maxZ;\n        break;\n      case CamerasEnum.BOTTOM:\n        this.cameraView.slices.z = minZ;\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n\n    this.updateViews();\n  }\n\n  /** Draw the current view from the current camera angle and sliceIndex */\n  updateViews = () => {\n    let sliceIndex;\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n        sliceIndex = this.cameraView.slices.y;\n        break;\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        sliceIndex = this.cameraView.slices.x;\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        sliceIndex = this.cameraView.slices.z;\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n\n    this.views.forEach(v => v.draw(this.cameraView.camera, sliceIndex, this.isBackgroundDashed));\n  }\n\n  /**\n   * Returns a 3D vector of the model position based on the normalized click\n   * @param {float} clickX - Normalized x between 0 and 1\n   * @param {float} clickY - Normalized y between 0 and 1\n   */\n  getRelativePosition = (x, y) => {\n    // Check that it is a legal 3D index\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        if (y >= this.zMax) {\n          return null;\n        }\n        break;\n      default:\n        // do nothing\n    }\n\n    // translate this position along with the current slice to the 3D model indeces\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        return { x, y: this.cameraView.slices.y, z: y };\n      case CamerasEnum.SOUTH:\n        return { x: this.gridSize - 1 - x, y: this.cameraView.slices.y, z: y };\n      case CamerasEnum.EAST:\n        return { x: this.cameraView.slices.x, y: this.gridSize - 1 - x, z: y };\n      case CamerasEnum.WEST:\n        return { x: this.cameraView.slices.x, y: x, z: y };\n      case CamerasEnum.BOTTOM:\n        return { x, y: this.gridSize - 1 - y, z: this.cameraView.slices.z };\n      case CamerasEnum.TOP:\n        return { x, y, z: this.cameraView.slices.z };\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/ui/Display2DView';\nimport Display2DController from '../js/ui/Display2DController';\nimport ActionsEnum from '../js/enums/ActionsEnum';\nimport { getGridPointInModelSpace } from '../js/helpers/Helpers';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for the 2D slice views */\nexport default class Draw extends React.Component {\n  static propTypes = {\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    controller: null\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('draw');\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.canvas.addEventListener('mousedown', this.handleClick);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session, cameraView } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    // Create controller and 2D slice view\n    const controller = new Display2DController(session, cameraView);\n    this.view = new Display2DView(this.canvas, session);\n    controller.addListener(this.view);\n    // Trigger initial render\n    controller.updateViews();\n\n    this.setState({\n      controller\n    });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    const { controller } = this.state;\n\n    const { action } = this.props;\n    if (action === ActionsEnum.SPEAK_CONSTRAINT) {\n      return; // text area has control\n    }\n\n    switch (event.keyCode) {\n      case 87: // w\n        controller.south();\n        break;\n      case 88: // x\n        controller.north();\n        break;\n      case 65: // a\n        controller.east();\n        break;\n      case 68: // d\n        controller.west();\n        break;\n      case 83: // s\n        controller.top();\n        break;\n      case 38: // up arrow\n        controller.nextSlice();\n        break;\n      case 40: // down arrow\n        controller.previousSlice();\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick = event => {\n    const { controller } = this.state;\n    const { action } = this.props;\n    console.log(action);\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n    controller.doAction(action, point.x, point.y);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n\n    return (\n      <div>\n        <canvas id=\"draw\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\n/* global SETTINGS */\n\nconst grayValues = [0, 60, 110, 150, 180, 205, 225, 240];\n\n/** Class responsible for rednering a 2D slice */\nexport default class EditTopoRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  /**\n   * Add a square at x,y with number representing height\n   */\n  drawSquare = (x, y, num) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(1);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    const grayValue = grayValues[num];\n    const fill = `rgba(${grayValue}, ${grayValue}, ${grayValue}, 0.7)`;\n    shape.graphics.beginFill(fill);\n    shape.graphics.drawRect(sx, sy, dx, dy);\n    shape.graphics.endFill();\n    this.stage.addChild(shape);\n\n    const text = new createjs.Text(num, 'bold 24px Andale Mono', SETTINGS.color);\n    text.x = sx + (dx / 2) - 7;\n    text.y = sy + (dy / 2) - 11;\n    this.stage.addChild(text);\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\nimport EditTopoRenderer2D from './EditTopoRenderer2D';\n\n/* global SETTINGS */\n\n/** Class responsible for rendering a 2D slice of topography */\nexport default class TopoView {\n  constructor(canvas, session) {\n    this.session = session;\n    this.stage = new createjs.Stage(canvas);\n\n    this.renderer = new EditTopoRenderer2D(this.stage);\n  }\n\n  /**\n   * Draw the given sliceIndex for the camera angle to the screen\n   * @param {int} camera - CamerasEnum\n   * @param {int} sliceIndex - Index of slice of model from given camera view to draw\n   * @param {int} isBackgroundDashed - Draw objects in background slices as dashed lines\n   */\n  draw = () => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    for (let y = 0; y < SETTINGS.yMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        this.renderer.drawSquare(x, y, this.session.topo.getAt({ x, y }));\n      }\n    }\n\n    // Render to the screen\n    this.stage.update();\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TopoView from '../js/ui/TopoView';\nimport { getGridPointInModelSpace } from '../js/helpers/Helpers';\nimport ActionsEnum from '../js/enums/ActionsEnum';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for t */\nexport default class Topo extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('display');\n    this.canvas.addEventListener('mousedown', this.handleClick);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    this.view = new TopoView(this.canvas, session);\n    // Trigger initial render\n    this.view.draw();\n  }\n\n  handleClick = event => {\n    const { session, action } = this.props;\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n\n    if (action === ActionsEnum.DECREASE_HEIGHT) {\n      session.topo.decrease(point);\n    } else {\n      session.topo.increase(point);\n    }\n    this.view.draw();\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"display\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/ui/Display2DView';\nimport Display2DController from '../js/ui/Display2DController';\nimport { getClosestEdgeInModelSpace } from '../js/helpers/Helpers';\n\n/* global document */\n/* global SETTINGS */\n\nexport default class Surface extends React.Component {\n  static propTypes = {\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    controller: null\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('surface');\n    document.addEventListener('keydown', this.handleKeyDown);\n    this.canvas.addEventListener('click', this.handleClick);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n    this.canvas.removeEventListener('click', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session, cameraView } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    // Create controller and 2D slice view\n    const controller = new Display2DController(session, cameraView);\n    this.view = new Display2DView(this.canvas, session);\n    controller.addListener(this.view);\n    // Trigger initial render\n    controller.updateViews();\n\n    this.setState({\n      controller\n    });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    const { controller } = this.state;\n\n    switch (event.keyCode) {\n      case 87: // w\n        controller.south();\n        break;\n      case 88: // x\n        controller.north();\n        break;\n      case 65: // a\n        controller.east();\n        break;\n      case 68: // d\n        controller.west();\n        break;\n      case 83: // s\n        controller.top();\n        break;\n      case 38: // up arrow\n        controller.nextSlice();\n        break;\n      case 40: // down arrow\n        controller.previousSlice();\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick = event => {\n    const { controller } = this.state;\n    const { action } = this.props;\n\n    const edge = getClosestEdgeInModelSpace(event.offsetX, event.offsetY);\n    if (!edge) {\n      return;\n    }\n\n    const { x, y, side } = edge;\n    controller.doAction(action, x, y, side);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"surface\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","/** Class for controlling a 3D view mimicking a walk through of the model */\nexport default class CameraPathController {\n  constructor(session, onWalkthroughEnd) {\n    this.session = session;\n    this.views = [];\n    this.onWalkthroughEnd = onWalkthroughEnd;\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  run = path => {\n    this.path = path;\n    this.i = 0;\n\n    // Start animation of path, after a delay to allow the page to render\n    setTimeout(() => this.animateCameraPath(), 500);\n  }\n\n  /** Every 500ms update the camera position of the views to the next in the path */\n  animateCameraPath = () => {\n    if (this.i < this.path.length - 2) {\n      this.i += 1;\n      const p = this.path[this.i];\n      const nextP = this.path[this.i + 1];\n      this.views.forEach(v => v.setCameraPosition(p, nextP));\n      setTimeout(() => this.animateCameraPath(), 150);\n    } else {\n      this.onWalkthroughEnd();\n    }\n  }\n}\n","import * as THREE from 'three';\nimport { getEmpty2DArray } from '../helpers/Helpers';\nimport CamerasEnum from '../enums/CamerasEnum';\n\n/* global SETTINGS */\n\nexport default class TopoRenderer3D {\n  draw = (scene, corners, cameraView) => {\n    if (!corners) {\n      return;\n    }\n\n    // Add code for debugger to mark current camera view\n    if (cameraView) {\n      const pointLists = this._getArrows(cameraView);\n      this._addArrows(scene, pointLists);\n    }\n    const isDebug = !!cameraView;\n\n    // calculate the corners of all the topography and connect them\n    const adjustedCorners = getEmpty2DArray(SETTINGS.xMax + 1, SETTINGS.yMax + 1, null);\n    for (let y = 0; y <= SETTINGS.yMax; y += 1) {\n      for (let x = 0; x <= SETTINGS.xMax; x += 1) {\n        const cornerPoint = { x, y, z: corners[y][x] - 0.5 };\n        const adjustedCornerPoint = this._getAdjustedPoint(cornerPoint);\n        // Drop the height by half a block\n        adjustedCornerPoint.z -= 0.5;\n        adjustedCorners[y][x] = adjustedCornerPoint;\n\n        // Connect down and right\n        if (y > 0) {\n          const downPoint = adjustedCorners[y - 1][x];\n          this._addLine(scene, adjustedCornerPoint, downPoint, isDebug);\n        }\n        if (x > 0) {\n          const leftPoint = adjustedCorners[y][x - 1];\n          this._addLine(scene, adjustedCornerPoint, leftPoint, isDebug);\n        }\n      }\n    }\n  }\n\n  _addArrows = (scene, pointLists) => {\n    pointLists.forEach(points => {\n      const geometry = new THREE.Geometry();\n      points.forEach(p => {\n        const adjP = this._getAdjustedPoint(p);\n        const { x, y, z } = adjP;\n        geometry.vertices.push(new THREE.Vector3(x, y, z));\n      });\n      const arrow = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0x00EE00 }));\n      scene.add(arrow);\n    });\n  }\n\n  _getArrows = cameraView => {\n    let { x, y, z } = cameraView.slices;\n    let pointLists;\n\n    switch (cameraView.camera) {\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        pointLists = [\n          [{ x: -1, y: 0, z }, { x: 0, y: 0, z }, { x: 0, y: -1, z }, { x: -1, y: 0, z }],\n          [{ x: SETTINGS.xMax + 1, y: SETTINGS.yMax, z }, { x: SETTINGS.xMax, y: SETTINGS.yMax, z }, { x: SETTINGS.xMax, y: SETTINGS.yMax + 1, z }, { x: SETTINGS.xMax + 1, y: SETTINGS.yMax, z }],\n          [{ x: SETTINGS.xMax + 1, y: 0, z }, { x: SETTINGS.xMax, y: 0, z }, { x: SETTINGS.xMax, y: -1, z }, { x: SETTINGS.xMax + 1, y: 0, z }],\n          [{ x: -1, y: SETTINGS.yMax, z }, { x: 0, y: SETTINGS.yMax, z }, { x: 0, y: SETTINGS.yMax + 1, z }, { x: -1, y: SETTINGS.yMax, z }],\n        ];\n        break;\n      case CamerasEnum.WEST:\n        x -= 0.5;\n        pointLists = [\n          [{ x: x + 1, y: -1, z: -0.5 }, { x, y: -0.5, z: -0.5 }, { x: x + 1, y: 0, z: -0.5 }, { x: x + 1, y: -1, z: -0.5 }],\n          [{ x: x + 1, y: SETTINGS.yMax + 1, z: -0.5 }, { x, y: SETTINGS.yMax + 0.5, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax + 1, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.EAST:\n        x += 0.5;\n        pointLists = [\n          [{ x, y: -1, z: -0.5 }, { x: x + 1, y: -0.5, z: -0.5 }, { x, y: 0, z: -0.5 }, { x, y: -1, z: -0.5 }],\n          [{ x, y: SETTINGS.yMax + 1, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax + 0.5, z: -0.5 }, { x, y: SETTINGS.yMax, z: -0.5 }, { x, y: SETTINGS.yMax + 1, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.NORTH:\n        y += 0.5;\n        pointLists = [\n          [{ x: -1, y, z: -0.5 }, { x: -0.5, y: y + 1, z: -0.5 }, { x: 0, y, z: -0.5 }, { x: -1, y, z: -0.5 }],\n          [{ x: SETTINGS.xMax + 1, y, z: -0.5 }, { x: SETTINGS.xMax + 0.5, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax, y, z: -0.5 }, { x: SETTINGS.xMax + 1, y, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.SOUTH:\n        y -= 0.5;\n        pointLists = [\n          [{ x: -1, y: y + 1, z: -0.5 }, { x: -0.5, y, z: -0.5 }, { x: 0, y: y + 1, z: -0.5 }, { x: -1, y: y + 1, z: -0.5 }],\n          [{ x: SETTINGS.xMax + 1, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax + 0.5, y, z: -0.5 }, { x: SETTINGS.xMax, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax + 1, y: y + 1, z: -0.5 }]\n        ];\n        break;\n      default:\n        pointLists = [];\n        break;\n    }\n\n    return pointLists;\n  }\n\n  _addLine = (scene, p0, p1, isDebug) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(p0.x, p0.y, p0.z));\n    geometry.vertices.push(new THREE.Vector3(p1.x, p1.y, p1.z));\n\n    let line;\n    if (isDebug) {\n      line = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0x666666 }));\n    } else {\n      line = new THREE.Line(geometry, SETTINGS.material);\n    }\n\n    scene.add(line);\n  }\n\n  /**\n   * Returns the point adjusted for the 3D world\n   * @param {object} p - A 3D point\n   */\n  _getAdjustedPoint = p => {\n    const { x, y, z } = p;\n    return { x: x * SETTINGS.r, y: z * SETTINGS.r + (SETTINGS.r / 2), z: -y * SETTINGS.r };\n  }\n}\n","import * as THREE from 'three';\nimport SurfacesEnum from '../enums/SurfacesEnum';\nimport Cube from '../data/Cube';\nimport { Trunk, Foliage } from '../data/Tree';\nimport Roof from '../data/Roof';\n\n/* global SETTINGS */\n\nclass DesignRenderer3D {\n  draw = (scene, objects) => {\n    if (!objects) {\n      return;\n    }\n\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        for (let x = 0; x < SETTINGS.xMax; x += 1) {\n          const object = objects[z][y][x];\n          const position = { x, y, z };\n          if (object) {\n            switch (object.constructor) {\n              case Cube:\n                this.drawCube(scene, object, position);\n                break;\n              case Roof:\n                this.drawRoof(scene, object, position);\n                break;\n              case Foliage:\n                this.drawFoliage(scene, position);\n                break;\n              case Trunk:\n                this.drawTrunk(scene, position);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  drawCube = (scene, cube, position) => {\n    const lines = this._getCubeFaces(cube);\n\n    const positionAdj = { x: position.x * SETTINGS.r, y: position.z * SETTINGS.r, z: -position.y * SETTINGS.r };\n\n    lines.position.x = positionAdj.x;\n    lines.position.y = positionAdj.y;\n    lines.position.z = positionAdj.z;\n    scene.add(lines);\n  };\n\n  _getCubeFaces = cube => {\n    const geometry = new THREE.Geometry();\n\n    if (cube.surfaces.t === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // top face\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n      );\n    }\n    if (cube.surfaces.b === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // bottom face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n    if (cube.surfaces.n === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // north face\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n      );\n    }\n    if (cube.surfaces.s === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // south face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n    if (cube.surfaces.e === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // east face\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n      );\n    }\n    if (cube.surfaces.w === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // west face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n\n    const lines = new THREE.LineSegments(geometry, SETTINGS.material);\n\n    return lines;\n  }\n\n  drawRoof = (scene, roof, position) => {\n    const lines = this._getRoof(roof);\n\n    const positionAdj = { x: position.x * SETTINGS.r, y: position.z * SETTINGS.r, z: -position.y * SETTINGS.r };\n\n    switch (roof.direction) {\n      case 'n':\n        break;\n      case 'e':\n        lines.rotation.y = Math.PI * 1.5;\n        positionAdj.z -= SETTINGS.r;\n        break;\n      case 's':\n        lines.rotation.y = Math.PI;\n        positionAdj.x += SETTINGS.r;\n        positionAdj.z -= SETTINGS.r;\n        break;\n      case 'w':\n        lines.rotation.y = Math.PI * 0.5;\n        positionAdj.x += SETTINGS.r;\n        break;\n      default:\n        return;\n    }\n    lines.position.x = positionAdj.x;\n    lines.position.y = positionAdj.y;\n    lines.position.z = positionAdj.z;\n    scene.add(lines);\n  };\n\n  _getRoof = roof => {\n    const geometry = new THREE.Geometry();\n\n    if (roof.hasSideSurface) {\n      geometry.vertices.push(\n        // tall face bottom\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      );\n    }\n\n    geometry.vertices.push(\n      // slanted face\n      new THREE.Vector3(0, 0, -SETTINGS.r),\n      new THREE.Vector3(0, SETTINGS.r, 0),\n      new THREE.Vector3(0, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n      new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n      new THREE.Vector3(0, 0, -SETTINGS.r),\n    );\n\n    const lines = new THREE.LineSegments(geometry, SETTINGS.material);\n\n    return lines;\n  }\n\n  drawFoliage = (scene, center) => {\n    const { x, y, z } = center;\n    const geometry = new THREE.SphereGeometry(SETTINGS.r / 2, 5, 5);\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const lines = new THREE.LineSegments(wireframe, SETTINGS.material);\n    const position = { x: x * SETTINGS.r, y: z * SETTINGS.r, z: -y * SETTINGS.r };\n    lines.position.x = position.x + (SETTINGS.r / 2);\n    lines.position.y = position.y + (SETTINGS.r / 2);\n    lines.position.z = position.z - (SETTINGS.r / 2);\n    scene.add(lines);\n  };\n\n  drawTrunk = (scene, center) => {\n    const { x, y, z } = center;\n    const position = { x: (x + 0.5) * SETTINGS.r, y: z * SETTINGS.r, z: (-y - 0.5) * SETTINGS.r };\n    const position2 = { x: position.x, y: position.y + SETTINGS.r, z: position.z };\n    this._addLine(scene, position, position2);\n  };\n\n  _addLine = (scene, p0, p1) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(p0.x, p0.y, p0.z));\n    geometry.vertices.push(new THREE.Vector3(p1.x, p1.y, p1.z));\n    const line = new THREE.Line(geometry, SETTINGS.material);\n    scene.add(line);\n  }\n}\n\nexport default DesignRenderer3D;\n","import * as THREE from 'three';\n\nimport TopoRenderer3D from './TopoRenderer3D';\nimport DesignRenderer3D from './DesignRenderer3D';\n\n/* global SETTINGS */\n\n/** Class responsible for drawing a 3D view of the model */\nexport default class CameraPathView {\n  constructor(container, session, cameraView, fov = 75) {\n    this.container = container;\n    this.target = null;\n    this.session = session;\n\n    // Set to true once the controller gives it a camera position\n    this.hasPosition = false;\n\n    // Setup Three.js scene, camera, and renderer\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x000000);\n    this.camera = new THREE.PerspectiveCamera(fov, SETTINGS.w / SETTINGS.h, 1, 8000);\n    this.scene.add(this.camera);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setPixelRatio(0.6);\n    this.renderer.setSize(SETTINGS.w, SETTINGS.h);\n    this.container.appendChild(this.renderer.domElement);\n    this.cameraView = cameraView;\n\n    this.draw();\n  }\n\n  draw = () => {\n    while (this.scene.children.length > 0) {\n      this.scene.remove(this.scene.children[0]);\n    }\n\n    this.designRenderer3D = new DesignRenderer3D();\n    const design = this.session.design.getAll();\n    this.designRenderer3D.draw(this.scene, design);\n\n    this.topoRenderer3D = new TopoRenderer3D();\n    const topoCorners = this.session.topo.getCorners();\n    this.topoRenderer3D.draw(this.scene, topoCorners, this.cameraView);\n  }\n\n  render = () => {\n    this.draw();\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Sets the camera position according to the given point\n   * @param {object} p - A 3D point\n   * @param {object} nextP - The next 3D point for direction\n   */\n  setCameraPosition = (p, nextP) => {\n    this.hasPosition = true;\n    const { x, y, z } = this.getAdjustedPoint(p);\n    this.camera.position.x = x;\n    this.camera.position.y = y;\n    this.camera.position.z = z;\n\n    // Point camera at next point\n    const np = this.getAdjustedPoint(nextP);\n    this.camera.lookAt(np.x, np.y, np.z);\n    this.render();\n  }\n\n  /**\n   * Returns the point adjusted for the 3D world\n   * @param {object} p - A 3D point\n   */\n  getAdjustedPoint = p => {\n    const { x, y, z } = p;\n    return { x: x * SETTINGS.r + (SETTINGS.r / 2), y: z * SETTINGS.r + (SETTINGS.r * 0.75), z: -y * SETTINGS.r - (SETTINGS.r / 2) };\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CameraPathController from '../js/ui/CameraPathController';\nimport CameraPathView from '../js/ui/CameraPathView';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for the 3D fly throughs of the model */\nexport default class CameraPath extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    path: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    onWalkthroughEnd: PropTypes.func.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.container = document.getElementById('display3D');\n\n    // If the model had already been created, immediately wire\n    this.wire();\n\n    const { path } = this.props;\n    this.run(path);\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n\n    const { path } = this.props;\n    this.run(path);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the DOM.\n   */\n  wire = () => {\n    const { session, path, onWalkthroughEnd } = this.props;\n    if (this.isWired || !session || !path) {\n      return;\n    }\n    this.isWired = true;\n\n    this.controller = new CameraPathController(session, onWalkthroughEnd);\n    this.view = new CameraPathView(this.container, session);\n    this.controller.addListener(this.view);\n  }\n\n  run = path => {\n    this.controller.run(path);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n\n    return (\n      <div id=\"display3D\" style={{ width: w, height: h }} />\n    );\n  }\n}\n","const PF = require('pathfinding');\n\n/* global SETTINGS */\n\n// Calculate the 2D path along the ground that avoids objects, but can pass through walls (except on slopes)\nfunction getPathWithWallOpenings(session, start, end) {\n  // Make grid square 3x3 so that openings can exist in walls\n  const grid = new PF.Grid(SETTINGS.xMax * 3, SETTINGS.yMax * 3);\n\n  const topoCorners = session.topo.getCorners();\n\n  // get all the objects at ground level\n  for (let y = 0; y < SETTINGS.yMax; y += 1) {\n    for (let x = 0; x < SETTINGS.xMax; x += 1) {\n      const adjX = Math.floor(x);\n      const adjY = Math.floor(y);\n      const z = session.topo.getAt({ x: adjX, y: adjY });\n\n      const cornerZ = Math.max(topoCorners[y][x], topoCorners[y][x + 1], topoCorners[y + 1][x], topoCorners[y + 1][x + 1]);\n      if (z !== cornerZ) {\n        console.log('z comp', z, cornerZ);\n        // If you are on slope, check for all objects on slope\n        let isObjectInWay = false;\n        for (let h = z; h < cornerZ + 1; h += 1) {\n          const object = session.design.getAt({ x: adjX, y: adjY, z: h });\n          if (object) {\n            isObjectInWay = true;\n          }\n        }\n\n        if (isObjectInWay) {\n          // fill in all squares\n          grid.setWalkableAt(x * 3, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n          grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n          grid.setWalkableAt((x * 3) + 1, y * 3, false);\n        }\n      } else {\n        // on flat ground, just check current object, allowing to pass through walls of cube\n        const object = session.design.getAt({ x: adjX, y: adjY, z });\n        if (object) {\n          // fill in corners\n          grid.setWalkableAt(x * 3, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 2, false);\n\n          // if cube check walls\n          if (object.constructor.typeName === 'CUBE') {\n            if (!object.hasAccessInDirection('w')) {\n              grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n            }\n            if (!object.hasAccessInDirection('e')) {\n              grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n            }\n            if (!object.hasAccessInDirection('n')) {\n              grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n            }\n            if (!object.hasAccessInDirection('s')) {\n              grid.setWalkableAt((x * 3) + 1, y * 3, false);\n            }\n          } else {\n            // else, fill in walls\n            grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n            grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n            grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n            grid.setWalkableAt((x * 3) + 1, y * 3, false);\n          }\n        }\n      }\n    }\n  }\n\n  const finder = new PF.AStarFinder({\n    allowDiagonal: true,\n    dontCrossCorners: true\n  });\n  let path = finder.findPath((start.x * 3) + 1, (start.y * 3) + 1, (end.x * 3) + 1, (end.y * 3) + 1, grid);\n  // get every third and adjust\n  const adjPath = [];\n  let currX = null;\n  let currY = null;\n  for (let i = 0; i < path.length; i += 1) {\n    const [x, y] = path[i];\n    const adjX = Math.floor(x / 3);\n    const adjY = Math.floor(y / 3);\n    if (adjX !== currX || adjY !== currY) {\n      currX = adjX;\n      currY = adjY;\n      // new point\n      adjPath.push({ x: currX, y: currY });\n    }\n  }\n\n  return adjPath;\n}\n\n// Given a path, interpolate between the points with a given number of steps per point\nfunction smoothPath(path, steps) {\n  if (steps > 1 && path.length < 2) {\n    return path;\n  }\n\n  const smoothedPath = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const start = path[i - 1];\n    const end = path[i];\n\n    const dx = (end.x - start.x) / steps;\n    const dy = (end.y - start.y) / steps;\n    const dz = (end.z - start.z) / steps;\n    for (let s = 0; s < steps; s += 1) {\n      const x = start.x + (s * dx);\n      const y = start.y + (s * dy);\n      const z = start.z + (s * dz);\n\n      smoothedPath.push({ x, y, z });\n    }\n  }\n  smoothedPath.push(path[path.length - 1]);\n\n  return smoothedPath;\n}\n\n// Add a random xNoise and yNoise within the given range in place to the path\nfunction addNoise(path, range) {\n  for (let i = 1; i < path.length - 1; i += 1) {\n    const xNoise = (Math.random() * 2 * range) - range;\n    const yNoise = (Math.random() * 2 * range) - range;\n    const p = path[i];\n    p.xNoise = p.x + xNoise;\n    p.yNoise = p.y + yNoise;\n  }\n}\n\n// Given a start and end point, navigate through the design along the ground\n// The path goes around objects, but can pass through walls (except on hills)\nexport default function calculatePath(session, start, end) {\n  const path = getPathWithWallOpenings(session, start, end);\n\n  // make 3D\n  const path3D = path.map(p => {\n    const { x, y } = p;\n    const z = session.topo.getAt({ x, y });\n    return { x, y, z };\n  });\n\n  // smooth path\n  const smoothedPath = smoothPath(path3D, 3);\n\n  // Add noise (except for start and last spot)\n  const range = 0.1;\n  addNoise(smoothedPath, range);\n\n  return smoothedPath;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/ui/Display2DView';\nimport { getGridPointInModelSpace } from '../js/helpers/Helpers';\nimport calculatePath from '../js/helpers/CalculatePath';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for t */\nexport default class ChoosePath extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    onSelectPath: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    hasStart: false\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('display');\n    this.canvas.addEventListener('mousedown', this.handleClick);\n    this.start = null;\n    this.end = null;\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    this.view = new Display2DView(this.canvas, session);\n    // Trigger initial render\n    this.view.drawTopCompressedView();\n  }\n\n  handleClick = event => {\n    const { hasStart } = this.state;\n    const { onSelectPath, session } = this.props;\n\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n\n    if (session.design.getAt({ x: point.x, y: point.y, z: 0 })) {\n      return;\n    }\n\n    if (!hasStart) {\n      this.setState({ hasStart: true });\n      this.view.drawCircle(point.x, point.y);\n      this.view.update();\n      this.start = point;\n    } else if (this.start.x !== point.x || this.start.y !== point.y) {\n      this.view.drawCircle(point.x, point.y);\n      this.view.update();\n      this.end = point;\n      const path = calculatePath(session, this.start, this.end);\n\n      if (!path || path.length === 0) {\n        session.monitor.setMessages([`${SETTINGS.userName}, No path could be found.`]);\n        this.start = null;\n        this.end = null;\n        this.setState({ hasStart: false });\n        onSelectPath(path);\n        return;\n      }\n\n      // Currently 3 steps per 10 feet\n      const distance = ((path.length - 1) / 3) * 10;\n      session.monitor.setMessages([`${SETTINGS.userName}, I have arrived at the destination point`, `the trip distance (in feet) is ${distance}.`]);\n\n      // do 2D walkthrough\n      const callback = () => {\n        this.start = null;\n        this.end = null;\n        this.setState({ hasStart: false });\n        onSelectPath(path);\n      };\n      const speed = 75;\n      this.view.animateX(path, 0, speed, callback);\n    }\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"display\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CameraPath from './CameraPath';\nimport ChoosePath from './ChoosePath';\n\nexport default class DisplayWalkthrough extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    path: null\n  }\n\n  render() {\n    const { path } = this.state;\n    const { session } = this.props;\n\n    return (\n      <div>\n        { !path\n          ? (\n            <ChoosePath\n              session={session}\n              onSelectPath={newPath => this.setState({ path: newPath })}\n            />\n          )\n          : (\n            <CameraPath\n              session={session}\n              path={path}\n              onWalkthroughEnd={() => this.setState({ path: null })}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Menu from './Menu';\nimport Top from './Top';\nimport ActionsEnum from '../js/enums/ActionsEnum';\n\nimport Draw from './Draw';\nimport Topo from './Topo';\nimport Surface from './Surface';\n\nimport DisplayWalkthrough from './DisplayWalkthrough';\n\n/* global document */\n/* global location */\n\n/** Class for the rendering the main view with top, menu, and center panels */\nexport default class MainPage extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    // action: ActionsEnum.ADDCUBE, // Default action is ADDCUBE\n    // displayType: 'CALC'\n\n    action: ActionsEnum.ADDCUBE, // Default action is ADDCUBE\n    displayType: 'DRAW',\n\n    // action: ActionsEnum.INCREASE_HEIGHT, // Default action is ADDCUBE\n    // displayType: 'TOPO'\n\n    // action: ActionsEnum.NO_SURFACE, // Default action is ADDCUBE\n    // displayType: 'SURF'\n\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  onMenuClick = action => {\n    this.setState({ action });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    const { action } = this.state;\n    const { session } = this.props;\n    if (action === ActionsEnum.SPEAK_CONSTRAINT) {\n      // do nothing\n    } else {\n      console.log(event.keyCode);\n      switch (event.keyCode) {\n        // Switch between views\n        case 49: // 1\n          this.setState({\n            displayType: 'DRAW',\n            action: ActionsEnum.ADDCUBE\n          });\n          break;\n        case 50: // 2\n          this.setState({\n            displayType: 'SURF',\n            action: ActionsEnum.NO_SURFACE\n          });\n          break;\n        case 51: // 3\n          this.setState({\n            displayType: 'TOPO',\n            action: ActionsEnum.INCREASE_HEIGHT\n          });\n          break;\n        case 52: // 3\n          this.setState({\n            displayType: 'CALC'\n          });\n          break;\n        // case 191: // /\n        //   session.monitor.clearConstraints();\n        //   break;\n        // case 220: // \\\n        //   session.clear();\n        //   location.reload(); // eslint-disable-line\n        //   break;\n        default:\n          break;\n      }\n    }\n\n  }\n\n  getDisplay = () => {\n    const { action, displayType } = this.state;\n    const { session, cameraView } = this.props;\n\n    if (!session || !action) {\n      return null;\n    }\n\n    switch (displayType) {\n      case 'DRAW':\n        return (<Draw action={action} session={session} cameraView={cameraView} />);\n      case 'CALC':\n        return (<DisplayWalkthrough session={session} />);\n      case 'TOPO':\n        return (<Topo action={action} session={session} />);\n      case 'SURF':\n        return (<Surface action={action} session={session} cameraView={cameraView} />);\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  getActions = () => {\n    const { displayType } = this.state;\n\n    switch (displayType) {\n      case 'DRAW':\n        return [\n          ActionsEnum.STEPOUT,\n          ActionsEnum.STEPIN,\n          ActionsEnum.ROTATELT,\n          ActionsEnum.ROTATERT,\n          ActionsEnum.ADDCUBE,\n          ActionsEnum.ADDTREE,\n          ActionsEnum.ADDROOF,\n          ActionsEnum.REMOVE,\n          ActionsEnum.SPEAK_CONSTRAINT\n        ];\n      case 'CALC':\n        return [];\n      case 'TOPO':\n        return [\n          ActionsEnum.INCREASE_HEIGHT,\n          ActionsEnum.DECREASE_HEIGHT\n        ];\n      case 'SURF':\n        return [\n          ActionsEnum.SOLID_SURFACE,\n          ActionsEnum.NO_SURFACE,\n          // ActionsEnum.PARTITION_SURFACE,\n          // ActionsEnum.TRANSPARENT_SURFACE,\n          // ActionsEnum.HAS_ACCESS,\n          // ActionsEnum.NO_ACCESS\n        ];\n      default:\n        break;\n    }\n\n    return [];\n  }\n\n  render() {\n    const { action } = this.state;\n    const actions = this.getActions();\n\n    const { session } = this.props;\n    return (\n      <div>\n        <div style={{ width: '864px', height: '100%', float: 'left' }}>\n          <div style={{ width: '864px', height: '160px' }}>\n            <div style={{ padding: '20px' }}>\n              <Top session={session} action={action} />\n            </div>\n          </div>\n          <div style={{ width: '852px', height: '852px', padding: '5px' }}>\n            {this.getDisplay()}\n          </div>\n        </div>\n        <div style={{ width: '160px', height: '100%', float: 'left' }}>\n          <div style={{ padding: '20px' }}>\n            <Menu actions={actions} onClick={this.onMenuClick} action={action} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class that renders various views helpful for debugging. */\nexport default class DebuggingConstraints extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    constraints: [],\n    systemConstraints: [],\n    buildings: [],\n    objects: []\n  };\n\n  componentDidMount() {\n    const poll = () => {\n      const { session } = this.props;\n      const constraints = session._monitor.constraints.slice();\n      const systemConstraints = session._monitor.systemConstraints.slice();\n\n      const buildings = session._design._buildings;\n      const objects = session._design.getObjects();\n\n      this.setState({ constraints, systemConstraints, buildings, objects });\n      this.pollTimeout = setTimeout(poll, 500);\n    };\n    poll();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  getStringsFromConstraints = c => {\n    let type;\n    if (parseInt(c.type, 10) === 0) {\n      type = 'room';\n    } else if (parseInt(c.type, 10) === 1) {\n      type = 'roof';\n    } else {\n      type = 'structure';\n    }\n\n    return `\"${c.text}\":\\n${c.fn} ${c.prop} of ${type} ${c.comp} ${c.value} == ${c.result}\\n\\n`;\n  }\n\n  render() {\n    const { constraints, systemConstraints, buildings } = this.state;\n\n    return (\n      <div>\n        <div>\n          <h3>User Constraints:</h3>\n          <div>{ constraints.map(c => (<div key={c.text} style={{ whiteSpace: 'pre' }}>{ this.getStringsFromConstraints(c) }</div>)) }</div>\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <h3>System Constraints:</h3>\n          <div>{ systemConstraints.map(c => (<div key={c.text} style={{ whiteSpace: 'pre' }}>{ this.getStringsFromConstraints(c) }</div>)) }</div>\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <h3>Buildings:</h3>\n          <div>{ JSON.stringify(buildings) }</div>\n        </div>\n        {/*<div style={{ marginTop: '20px' }}>\n          <h3>Objects:</h3>\n          <div>{ JSON.stringify(objects) }</div>\n        </div>*/}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CameraPathView from '../js/ui/CameraPathView';\n\n/* global document */\n\n/** Class for the 3D fly throughs of the model */\nexport default class Debugging3D extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.container = document.getElementById('debuggingDisplay3D');\n\n    const { session, cameraView, size } = this.props;\n    this.view = new CameraPathView(this.container, session, cameraView, 20);\n    this.view.renderer.setSize(size - 1, size - 1);\n    this.target = { x: 8, y: 8, z: 0 };\n    const z = 35;\n    const offset = 55;\n    const radius = 8;\n    const cameraRadius = 8 + offset;\n    const viewCount = 8;\n    const increment = Math.PI * 2 / viewCount;\n    this.origins = [];\n    for (let i = 0; i < viewCount; i += 1) {\n      const viewPoint = {\n        x: (cameraRadius * Math.cos((i * increment) + (Math.PI * -0.5))) + radius,\n        y: (cameraRadius * Math.sin((i * increment) + (Math.PI * -0.5))) + radius,\n        z\n      };\n      this.origins.push(viewPoint);\n    }\n\n    this.location = -1;\n    this.nextRotation();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  startPoll = () => {\n    const { session, cameraView } = this.props;\n    clearTimeout(this.pollTimeout);\n\n    let lastCameraView = {};\n    let lastNumObjects = 0;\n    let lastTotalHeight = 0;\n    const poll = () => {\n      this.pollTimeout = setTimeout(() => {\n        if (session) {\n          const numObjects = session.design.getObjects().length;\n          const totalHeight = session._topo.heights.reduce((total, num) => total + num);\n          if (cameraView.camera !== lastCameraView.camera || cameraView.slices.x !== lastCameraView.slices.x\n              || cameraView.slices.y !== lastCameraView.slices.y || cameraView.slices.z !== lastCameraView.slices.z || numObjects !== lastNumObjects || totalHeight !== lastTotalHeight) {\n            this.view.render();\n            lastCameraView = {\n              camera: cameraView.camera,\n              slices: {\n                x: cameraView.slices.x,\n                y: cameraView.slices.y,\n                z: cameraView.slices.z,\n              }\n            };\n            lastNumObjects = numObjects;\n            lastTotalHeight = totalHeight;\n          }\n        }\n        poll();\n      }, 100);\n    };\n    poll();\n  }\n\n  nextRotation = () => {\n    this.location = (this.location + 1) % this.origins.length;\n    this.view.setCameraPosition(this.origins[this.location], this.target);\n  }\n\n  render() {\n    this.startPoll();\n\n    return (\n      <div>\n        <div id=\"debuggingDisplay3D\" style={{ textAlign: 'center' }}/>\n        <button style={{ border: '1px solid #E8E8DA', margin: '10px', padding: '4px 10px', color: '#E8E8DA' }} onMouseDown={this.nextRotation}>Toggle Rotate</button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport * as THREE from 'three';\n\nimport StartPage from './components/StartPage';\nimport MainPage from './components/MainPage';\nimport DebuggingConstraints from './debugging/DebuggingConstraints';\nimport Debugging3D from './debugging/Debugging3D';\nimport U5SessionFactory from './js/data/U5SessionFactory';\n\n/* global window */\n/* global document */\n\n// Create a global settings object for shared settings across the project\nconst SETTINGS = {\n  w: 852,\n  h: 852,\n  color: '#E8E8DA',\n  gridSize: 17,\n  xMax: 17,\n  yMax: 17,\n  zMax: 7,\n  r: 50,\n  material: new THREE.LineBasicMaterial({ color: 0xE8E8DA }),\n  stroke: 3.5,\n  clippingMax: 1,\n  userName: 'Ted'\n};\nwindow.SETTINGS = SETTINGS;\n\n\nexport default class App extends React.Component {\n\n  state = {\n    view: 1,\n    session: null,\n    cameraView: null,\n    restartIndex: 0,\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', event => {\n      console.log('event.key', event.key);\n      switch (event.key) {\n        case 'F1':\n          this.setState({ view: 1 });\n          break;\n        case 'F2':\n          this.setState({ view: 2 });\n          break;\n        case 'F3':\n          this.setState({ view: 3 });\n          break;\n        case 'F4':\n          this.setState({ view: 4 });\n          break;\n        case 'Escape':\n          this.reset();\n          break;\n        default:\n          break;\n      }\n    });\n\n    // Add timer that checks for no activity, reset system after one minute\n    document.addEventListener('keydown', () => {\n      clearTimeout(this.resetTimer);\n      this.resetTimer = setTimeout(this.reset, 60000);\n    });\n    document.addEventListener('mousedown', () => {\n      clearTimeout(this.resetTimer);\n      this.resetTimer = setTimeout(this.reset, 60000);\n    });\n    this.resetTimer = setTimeout(this.reset, 60000);\n\n    // For testing purposes, load the last saved session at app load\n    // this.startSession(new U5SessionFactory().last());\n  }\n\n  startSession = session => {\n    const cameraView = this.getCameraView(session);\n    this.setState({ session, cameraView });\n  }\n\n  // Get a fresh camera view for the session\n  // The view moves its x and y cameras to be on the first object it encounters in the design, or 0 if no objects\n  getCameraView = session => {\n    const cameraView = {\n      camera: 0,\n      slices: {\n        x: 0,\n        y: 0,\n        z: 0\n      }\n    };\n\n    return cameraView;\n  }\n\n  // Reset the system to the start of the start menu\n  reset = () => {\n    const { restartIndex } = this.state;\n    SETTINGS.userName = null;\n    this.setState({ session: null, cameraView: null, restartIndex: restartIndex + 1 });\n  }\n\n  renderBody = view => {\n    const { session, cameraView } = this.state;\n\n    switch (view) {\n      case 1:\n        return (<MainPage session={session} cameraView={cameraView} />);\n      case 2:\n        return (\n          <div style={{ width: '100%' }}>\n            <Debugging3D session={session} cameraView={cameraView} size={962} />\n          </div>\n        );\n      case 3:\n        return (<DebuggingConstraints session={session} />);\n      case 4:\n        // Render all 3\n        return (\n          <div>\n            <MainPage session={session} cameraView={cameraView} />\n            <div style={{ position: 'absolute', right: '20px', top: '20px', color: '#000', border: '1px solid #E8E8DA', width: '500px' }}>\n              <Debugging3D session={session} cameraView={cameraView} size={500} />\n            </div>\n            <div style={{ position: 'absolute', left: '20px', top: '20px', width: '500px', wordWrap: 'break-word', border: '1px solid #E8E8DA', padding: '10px 10px 40px 10px', fontSize: '16px' }}>\n              <DebuggingConstraints session={session} />\n            </div>\n          </div>\n        );\n      default:\n        return null;\n    }\n  }\n\n  render() {\n    const { view, session, restartIndex } = this.state;\n    return (\n      <div className=\"app\">\n        { session === null ? (<StartPage key={restartIndex} onSelectSession={this.startSession} />) : this.renderBody(view) }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}