{"version":3,"sources":["api/Constraint.js","constraintDefinitions.js","api/Monitor.js","api/enums/ObjectsEnum.js","api/enums/CamerasEnum.js","helpers/Helpers.js","api/enums/SurfacesEnum.js","api/Roof.js","api/Cube.js","api/Tree.js","api/enums/TypeToConstructorEnum.js","api/Design.js","api/Topo.js","api/U5Session.js","helpers/Sounds.js","api/U5SessionFactory.js","ui/components/StartPage.js","ui/components/Menu.js","api/enums/ActionsEnum.js","ui/components/TextInput.js","ui/components/Top.js","ui/js/TopoRenderer2D.js","ui/js/DesignRenderer2D.js","ui/js/Display2DView.js","ui/js/Display2DController.js","ui/components/DrawPage.js","ui/js/EditTopoRenderer2D.js","ui/js/TopoView.js","ui/components/TopoPage.js","ui/components/SurfacePage.js","helpers/CalculatePath.js","ui/js/CameraPathController.js","ui/js/TopoRenderer3D.js","ui/js/DesignRenderer3D.js","ui/js/CameraPathView.js","ui/components/CameraPath.js","ui/components/ChoosePath.js","ui/components/CirculationPage.js","ui/components/SessionPageContainer.js","HelpPage.js","ui/components/debugging/DebuggingConstraints.js","ui/components/debugging/Debugging3D.js","helpers/ControlPad.js","controlPadMapping.js","ui/components/Main.js","ui/components/Modal.js","ui/components/UserSession.js","Demo.js","App.js","index.js"],"names":["isNumber","value","Number","isNaN","parseText","text","constraint","cleanText","toLowerCase","matchIndex","constraintDefinitions","forEach","definition","i","keywords","word","indexOf","ambiguousKeywords","defaultConstraint","values","nlp","numbers","filter","v","length","toString","possibleConstraints","fn","type","prop","Constraint","data","_this","this","Object","_Users_erikulberg_Desktop_urban5_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","isViolated","design","objectsOfType","getBuildings","getObjects","map","item","object","objects","parseInt","propValues","calculatedValue","reduce","sum","num","max","Math","min","calculatedResult","eval","concat","comp","console","log","result","isSameType","otherConstraint","JSON","stringify","removeFlag","hasError","constraintData","hasMatch","possibility","undefined","create","name","Monitor","classCallCheck","getMessages","messages","setMessages","addConstraint","constraintToAdd","push","newConstraints","removedConstraint","constraints","old","clearConstraints","checkDesign","conflicts","checkConflicts","incompatibilities","checkIncompatibilities","newMessages","SETTINGS","userName","join","newProblems","systemConstraints","freeze","monitor","jsonStr","parse","thaw","json","ObjectsEnum","CUBE","ROOF","TRUNK","FOLIAGE","PERSON","CamerasEnum","NORTH","EAST","SOUTH","WEST","TOP","BOTTOM","getGridPointInModelSpace","x","y","_SETTINGS2","w","h","clickX","clickY","gridSize","floor","getRelativePosition","getSafe","arr","getSafe3D","z","getCellContext3D","position","n","e","s","t","b","getCornerContext2x2","topLeft","topRight","bottomLeft","bottomRight","getEmpty2DArray","rows","columns","defaultValue","arguments","Array","j","getEmpty3DArray","SurfacesEnum","SOLID","TRANS","PART","NONE","Roof","roofData","hookAfterInsert","modifier","context","direction","constructor","Cube","surfaces","hasSideSurface","hookBeforeRemove","setSurface","sideCardinal","surface","typeName","cubeData","hasAccessToOutside","hasAccessInDirection","Foliage","Trunk","TypeToConstructorEnum","Design","getAll","getAt","p","clear","xMax","yMax","zMax","add","obj","newObject","foliagePosition","remove","_setCell","_getCell","camera","side","getCardinalSide","sharedWallNeighbor","cardinalDirection","getOppositeDirection","_buildings","calculateAttributes","topo","_objects","calculateObjectAttributes","calculateAccess","buildings","findBuildings","calculateBuildingAttributes","gh","area","height","ground","noBase","distToAccess","Infinity","accessPoints","checkAccess","dist","nextDist","buildingAttributes","keys","key","building","floating","maxDistToAccess","part","buildingParts","buildingIndex","nextIndex","floodFillBuildings","neighborPosition","Error","getSlice","sliceIndex","ySlice","xSlice","zSlice","_getYSlice","Array2D","hflip","_getXSlice","_getZSlice","vflip","getBackgroundSlices","backgroundSliceIndex","backgroundSliceIndices","slice","_addCube","c","addObject","fill","pos","mod","objectsPacked","objectData","objectsUnpacked","constructorFn","Topo","heights","increase","decrease","interpolate","path","corners","getCorners","x0","y0","x1","y1","sqrt","pow","pt","gx","gy","c0","d0","c1","d1","c2","d2","c3","d3","dSum","heightsView","transpose","back","front","all","top","left","center","right","bottom","cornersLength","getHighestNonZeroPoint","loc","row","U5Session","id","onUpdate","_design","_monitor","Audio","play","_topo","xyz","meta","xy","setTimeout","save","ice","localStorage","setItem","_id","Date","now","session","date","U5SessionFactory","getIDList","ids","getItem","split","get","_setIDList","last","pop","newSession","_getNextID","test","currentID","StartPage","state","active","handleKeyDown","event","keyCode","setState","refs","sessions","getElementsByTagName","click","preventDefault","onButtonClick","onSelectSession","props","factory","getButton","dateStr","toLocaleString","title","react_default","a","createElement","style","paddingTop","onClick","document","addEventListener","removeEventListener","_this2","reverse","recentIds","width","float","padding","lineHeight","ref","React","Component","Menu","buttonElements","_this$props","actions","action","label","display","whiteSpace","PureComponent","ActionsEnum","STEPOUT","nonSelectable","STEPIN","ADDCUBE","REMOVE","ROTATELT","ROTATERT","ADDTREE","ADD_ROOF_NORTH","ADD_ROOF_SOUTH","WALKTHRU","SPEAK_CONSTRAINT","INCREASE_HEIGHT","DECREASE_HEIGHT","SOLID_SURFACE","PARTITION_SURFACE","TRANSPARENT_SURFACE","NO_SURFACE","HAS_ACCESS","NO_ACCESS","ADD_ROOF_WEST","ADD_ROOF_EAST","ADDROOF","isAdd","includes","getActions","displayType","TextInput","handleSubmit","handleChange","actualVal","target","onSubmit","input","focus","autoComplete","autoFocus","spellCheck","onChange","Top","textMessages","onMessage","newMessage","prevState","toConsumableArray","componentDidUpdate","scrollElement","window","requestAnimationFrame","container","getElementById","scrollTop","scrollHeight","onSpeak","poll","pollTimeout","clearTimeout","textInput","TextInput_TextInput","messageElements","message","className","overflow","TopoRenderer2D","stage","draw","topoSlice","isBackground","cornerX","cornerY","line","createjs","Shape","graphics","beginStroke","color","setStrokeStyle","stroke","setStrokeDash","_s","slicedToArray","startHeight","endHeight","r","moveTo","lineTo","endStroke","addChild","DesignRenderer2D","drawSlice","isDashed","cell","drawCube","drawRoof","drawFoliage","drawTrunk","drawGridPoints","point","contextX","contextY","drawRect","drawCircle","circle","cube","drawLeft","drawTop","drawRight","drawBottom","_drawCubeSquare","shape","sx","dx","sy","dy","roof","_drawRoofSquare","_drawRoofSlantLeft","_drawRoofSlantRight","foliage","trunk","Display2DView","canvas","isBackgroundDashed","removeAllChildren","topoRenderer","drawBackground","clippingMax","designRenderer","currentSlice","update","drawTopCompressedView","allSlices","masterSlice","_loop","_loop2","topObj","_drawTopoSlice","_drawSlice","draw2D","_drawGridPoints","animateX","speed","callback","xObj","drawX","xNoise","yNoise","removeChild","cornerX2","cornerY2","Stage","Display2DController","cameraView","addListener","view","views","removeListener","toRemove","doAction","modelPosition","previousSlice","nextSlice","removeObject","rotateLeft","rotateRight","EDITTOPO","setTopoHeight","updateViews","_setSliceYAxis","slices","_setSliceXAxis","_setSliceZAxis","north","_setCamera","south","east","west","minX","minY","minZ","maxX","maxY","maxZ","highestNonZeroPoint","_object$position","DrawPage","controller","wire","isWired","onSelectAction","handleClick","offsetX","offsetY","registerActionListener","prevProps","_this$props2","unregisterActionListener","_SETTINGS","grayValues","EditTopoRenderer2D","drawSquare","grayValue","beginFill","endFill","Text","TopoView","renderer","TopoPage","SurfacePage","edge","_SETTINGS3","normalizedY","xRound","xRemainder","yRound","yRemainder","tDist","bDist","lDist","rDist","getClosestEdgeInModelSpace","enableHotKeys","stepsPer","getDist","start","end","calculatePath","grid","PF","Grid","topoCorners","adjX","adjY","cornerZ","isObjectInWay","setWalkableAt","ThetaStarFinder","weight","findPath","getPathWithWallOpenings","path3D","objectSpread","makePath3D","smoothedPath","steps","smoothPath","range","random","addNoise","CameraPathController","onWalkthroughEnd","run","animateCameraPath","setCameraPosition","TopoRenderer3D","scene","pointLists","_getArrows","_addArrows","isDebug","adjustedCorners","cornerPoint","adjustedCornerPoint","_getAdjustedPoint","downPoint","_addLine","leftPoint","points","geometry","THREE","adjP","vertices","arrow","_cameraView$slices","p0","p1","material","DesignRenderer3D","lines","_getCubeFaces","positionAdj","_getRoof","rotation","PI","wireframe","position2","CameraPathView","fov","children","designRenderer3D","topoRenderer3D","render","nextP","hasPosition","_this$getAdjustedPoin","getAdjustedPoint","np","lookAt","background","antialias","setPixelRatio","setSize","appendChild","domElement","CameraPath","ChoosePath","hasStart","isBusy","onSelectPath","distance","CirculationPage","_this$state","CameraPath_CameraPath","ChoosePath_ChoosePath","SessionPageContainer","onMenuClick","setAction","actionListeners","index","splice","getDisplay","DrawPage_DrawPage","CirculationPage_CirculationPage","TopoPage_TopoPage","SurfacePage_SurfacePage","Top_Top","Menu_Menu","HelpPage","helpText","textAlign","marginTop","marginBottom","src","alt","esm","DebuggingConstraints","getStringsFromConstraints","_this3","Debugging3D","startPoll","lastCameraView","lastNumObjects","lastTotalHeight","numObjects","totalHeight","total","nextRotation","location","origins","size","increment","viewPoint","cos","sin","border","margin","onMouseDown","ControlPad","onButtonPress","buttonCache","eventListener","controlPadTimeout","gamepads","navigator","getGamepads","buttons","button","pressed","controlPadMapping","1","0","2","3","4","5","6","9","8","7","10","11","isKioskMode","URBAN5_flags","defaultMainPageSettings","defaultCameraView","Main","debugView","restartIndex","isPanic","aboutToRestart","restart","handleActions","body","classList","handleControlPadButtonPress","startSession","onRestart","renderDebug","_this$state2","renderSessionPage","Debugging3D_Debugging3D","wordWrap","fontSize","DebuggingConstraints_DebuggingConstraints","_this$state3","SessionPageContainer_SessionPageContainer","controlPad","_this$state4","_this$state5","querySelectorAll","_this$state6","src_HelpPage","StartPage_StartPage","renderContent","Modal","onDismiss","UserSession","hasUserName","hasFinishedInstructions","setUserName","Modal_Modal","autoPlay","muted","loop","Main_Main","renderInstructions","renderAskUserName","Demo","timeout","App","isDemo","goToDemo","leaveDemo","resetTimer","UserSession_UserSession","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.5b12dd19.chunk.js","sourcesContent":["import nlp from 'compromise';\nimport constraintDefinitions from '../constraintDefinitions';\n\nconst isNumber = value => typeof value === 'number' && !Number.isNaN(value);\nexport function parseText(text) {\n  let constraint;\n  const cleanText = text.toLowerCase();\n\n  // does the text have a keyword from one of the definitions?\n  let matchIndex = -1;\n  constraintDefinitions.forEach((definition, i) => {\n    const { keywords } = definition;\n    keywords.forEach(word => {\n      if (cleanText.indexOf(word) >= 0) {\n        matchIndex = i;\n      }\n    });\n  });\n\n  // if not hard matches found, try a soft, ambiguous match\n  if (matchIndex === -1) {\n    constraintDefinitions.forEach((definition, i) => {\n      const { ambiguousKeywords } = definition;\n      ambiguousKeywords.forEach(word => {\n        if (cleanText.indexOf(word) >= 0) {\n          matchIndex = i;\n        }\n      });\n    });\n  }\n\n  // found  a match of some sort\n  if (matchIndex >= 0) {\n    const { defaultConstraint } = constraintDefinitions[matchIndex];\n    constraint = defaultConstraint;\n    constraint.text = text;\n\n    // get value\n    const doc = nlp(cleanText);\n    const values = doc.values().numbers().filter(v => isNumber(v));\n    if (values.length > 0) {\n      constraint.value = values[0].toString();  // eslint-disable-line\n    }\n    return constraint;\n  }\n\n  return null;\n}\n\nconst possibleConstraints = [\n  { fn: 'MAX', type: 'Structure', prop: 'height' }, // can compare the max structure height to anything\n  { fn: 'MAX', type: '0', prop: 'distToAccess' }, // can compare to dist to access for cubes\n  { fn: 'MAX', type: 'Structure', prop: 'area' }, // can compare the max structure area to anything\n];\n\nclass Constraint {\n  constructor(data) {\n    if (data) {\n      const { text, result, fn, type, prop, comp, value, removeFlag } = data;  // eslint-disable-line\n      this.text = text;\n      this.result = result;\n      this.fn = fn;\n      this.type = type;\n      this.prop = prop;\n      this.comp = comp;\n      this.value = value;\n      this.removeFlag = removeFlag;\n    }\n  }\n\n  isViolated = design => {\n    let objectsOfType;\n    if (this.type === 'Structure') {\n      objectsOfType = design.getBuildings();\n    } else if (this.type === 'Any') {\n      objectsOfType = design.getObjects().map(item => item.object);\n    } else {\n      const objects = design.getObjects();\n      objectsOfType = objects.filter(item => parseInt(this.type) === item.type);\n      objectsOfType = objectsOfType.map(item => item.object);\n    }\n\n    const propValues = objectsOfType.map(item => item[this.prop]);\n\n    if (propValues.length === 0) {\n      return false;\n    }\n\n    let calculatedValue = null;\n    switch (this.fn) {\n      case 'SUM':\n        calculatedValue = propValues.reduce((sum, num) => num ? (sum + num) : sum);  // eslint-disable-line\n        break;\n      case 'MAX':\n        calculatedValue = propValues.reduce((max, num) => num ? Math.max(max, num) : max);  // eslint-disable-line\n        break;\n      case 'MIN':\n        calculatedValue = propValues.reduce((min, num) => num ? Math.min(min, num) : min);  // eslint-disable-line\n        break;\n      default:\n        break;\n    }\n\n    const calculatedResult = eval(`${calculatedValue} ${this.comp} ${this.value}`);  // eslint-disable-line\n    console.log(this.prop, calculatedValue, this.comp, this.value, calculatedResult, 'expected', this.result);\n    const isViolated = calculatedResult !== this.result;\n\n    return {\n      result: isViolated,\n      value: calculatedValue\n    };\n  }\n\n  isSameType = otherConstraint => {\n    return JSON.stringify(otherConstraint.type) === JSON.stringify(this.type)\n      && otherConstraint.prop === this.prop;\n  }\n}\n\nconst hasError = constraintData => {\n  if (!constraintData) {\n    return true;\n  }\n\n  const { fn, type, prop, value, comp, result, removeFlag } = constraintData;\n  // If remove flag is set, try to cancel one out\n  if (removeFlag) {\n    return false;\n  }\n\n  if (!fn || !type || !prop || !value || !comp || result === null) {\n    return true;\n  }\n\n  let hasMatch = false;\n  // Check if they match a possible constraint\n  possibleConstraints.forEach(possibility => {\n    if ((possibility.fn === undefined || possibility.fn === fn)\n        && (possibility.type === undefined || possibility.type === type)\n        && (possibility.prop === undefined || possibility.prop === prop)\n        && (possibility.value === undefined || possibility.value === value)\n        && (possibility.comp === undefined || possibility.comp === comp)\n        && (possibility.result === undefined || possibility.result === result)) {\n      hasMatch = true; // if they match all the provided criteria\n    }\n  });\n  if (!hasMatch) {\n    return true;\n  }\n  return false;\n};\n\nConstraint.create = text => {\n  if (!text) {\n    return 'No text provided';\n  }\n\n  const constraintData = parseText(text);\n  if (!hasError(constraintData)) {\n    return new Constraint(constraintData);\n  }\n\n  return null;\n};\n\nexport default Constraint;\n","/*\n  Use this file to adjust what input text matches which constraints.\n\n  We choose if the text matches any constraint by looking for keywords that correspond\n  to the given constraint. Then, the first number in the sentence is extracted and used as the value.\n\n  'ambiguousKeywords' allows us to be more generous about matching, even if we are less sure.\n  They are applied after the first pass looking for keywords that we are more confident about.\n */\n\nconst constraintDefinitions = [\n  {\n    name: 'MAX_HEIGHT',\n    defaultConstraint: { fn: 'MAX', type: 'Structure', prop: 'height', comp: '<=', result: true },\n    keywords: [ // definite matches to this constraint\n      'tall', 'height', 'elevation', 'taller', 'shorter', 'above', 'altitude'\n    ],\n    ambiguousKeywords: [ // words to match if no definite matches found\n      'bigger', 'larger', 'more', 'exceeding', 'in excess of', 'less'\n    ]\n  },\n  {\n    name: 'MAX_AREA',\n    defaultConstraint: { fn: 'MAX', type: 'Structure', prop: 'area', comp: '<=', result: true },\n    keywords: [\n      'area', 'wide', 'covering', 'square', 'sq'\n    ],\n    ambiguousKeywords: []\n  },\n  {\n    name: 'MAX_DIST_TO_ACCESS',\n    defaultConstraint: { fn: 'MAX', type: '0', prop: 'distToAccess', comp: '<=', result: true },\n    keywords: [\n      'further', 'farther', 'from', 'distance', 'dist', 'access', 'door', 'exit', 'outside', 'escape'\n    ],\n    ambiguousKeywords: [\n      'beyond'\n    ]\n  }\n];\n\nexport default constraintDefinitions;\n","import Constraint from './Constraint';\n\n/* global SETTINGS */\n\n/** Class to monitor the actions of the user */\nclass Monitor {\n  constructor() {\n    this.constraints = [];\n    this.systemConstraints = [\n      new Constraint({\n        text: 'no object below ground',\n        result: false,\n        fn: 'MIN',\n        type: 'Any',\n        prop: 'ground',\n        comp: '<',\n        value: '0'\n      }),\n      new Constraint({\n        text: 'no roof without base',\n        result: false,\n        fn: 'SUM',\n        type: 1,\n        prop: 'noBase',\n        comp: '>',\n        value: '0' // the height of top of the building\n      }),\n      new Constraint({\n        text: 'no building floating',\n        result: false,\n        fn: 'SUM',\n        type: 'Structure',\n        prop: 'floating',\n        comp: '>',\n        value: '0' // the height of top of the building\n      }),\n      new Constraint({\n        text: 'no tree floating',\n        result: false,\n        fn: 'MIN',\n        type: 2,\n        prop: 'ground',\n        comp: '>',\n        value: '0' // the height of top of the building\n      }),\n    ];\n    this.conflicts = [];\n    this.incompatibilities = [];\n    this.messages = [];\n  }\n\n  getMessages = () => this.messages;\n\n  setMessages = messages => this.messages = messages;\n\n  addConstraint = text => {\n    const constraintToAdd = Constraint.create(text);\n    this.messages.push(text);\n\n    if (constraintToAdd && constraintToAdd instanceof Constraint) {\n      // Check if this overrides former constraint\n      const newConstraints = [];\n      let removedConstraint = null;\n      this.constraints.forEach(old => {\n        if (!old.isSameType(constraintToAdd)) {\n          newConstraints.push(old);\n        } else {\n          removedConstraint = old;\n        }\n      });\n      // If remove flag is set, it will cancel out the old, and we don't want to add\n      if (!constraintToAdd.removeFlag) {\n        newConstraints.push(constraintToAdd);\n        this.messages.push(`I have understood. The constraint: '${constraintToAdd.text}' was added.`);\n      } else if (removedConstraint) {\n        // remove constraint removed something\n        this.messages.push(`Removed the constraint: '${removedConstraint.text}'`);\n      }\n\n      this.constraints = newConstraints;\n      return true;\n    }\n\n    this.messages.push('I am sorry I do not understand.');\n    return false;\n  };\n\n  clearConstraints = () => {\n    this.constraints = [];\n    this.messages.push('Cleared constraints');\n  }\n\n  checkDesign = design => {\n    const conflicts = this.checkConflicts(design);\n    const incompatibilities = this.checkIncompatibilities(design);\n\n    const newMessages = [];\n    if (conflicts.length > 2) {\n      newMessages.push(`Don't you think you should stop, ${SETTINGS.userName}?`);\n    } else if (conflicts.length > 1) {\n      newMessages.push(`${SETTINGS.userName}, many conflicts are occurring.`);\n    } else if (conflicts.length > 0) {\n      // conflicts.forEach(conflict => {\n      //   newMessages.push(`Ted, a conflict has occurred, you said: ${conflict.constraint.text}. The present status is ${conflict.value}.`);\n      // });\n      newMessages.push(`${SETTINGS.userName}, a conflict has occurred, you said: ${conflicts[0].constraint.text}. The present status is ${conflicts[0].value}.`);\n    } else if (conflicts.length === 0 && this.conflicts.length > 0) {\n      newMessages.push('Conflicts were resolved.');\n    }\n\n    if (incompatibilities.length > 0) {\n      newMessages.push('Not structurally possible at this time.');\n    } else if (incompatibilities.length === 0 && this.incompatibilities.length > 0) {\n      newMessages.push('Incompatibilities were resolved.');\n    }\n\n    console.log(`Messages: [${newMessages.join(',')}]`);\n    this.messages = newMessages;\n\n    let newProblems = false;\n    if (conflicts.length > this.conflicts.length || incompatibilities.length > this.incompatibilities.length) {\n      newProblems = true;\n    }\n\n    this.conflicts = conflicts;\n    this.incompatibilities = incompatibilities;\n\n    return newProblems;\n  }\n\n  /**\n    * Conflict “An inconsistency discerned by the machine relating criteria specified by the designer\n    * to forms generated by the designer.”\n    * Examples: max height, number of objects, light, blocking entrances, check access\n    */\n  checkConflicts = design => {\n    const conflicts = [];\n    this.constraints.forEach(constraint => {\n      if (constraint.isViolated(design).result) {\n        console.log('violated constraint!');\n        conflicts.push({ constraint, value: constraint.isViolated(design).value });\n      }\n    });\n\n    return conflicts;\n  };\n\n  /**\n    * Incompatibility: “incongruity between a designer’s action and a predefined requisite embedded in the machine.”\n    * Leads to a bell ringing and displaying the message on the top of the screen\n    * Examples: underground, floating, clash\n    */\n  checkIncompatibilities = design => {\n    const incompatibilities = [];\n    this.systemConstraints.forEach(constraint => {\n      if (constraint.isViolated(design).result) {\n        console.log('violated system constraint!');\n        incompatibilities.push({ constraint, value: constraint.isViolated(design).value });\n      }\n    });\n\n    return incompatibilities;\n  };\n}\n\nMonitor.freeze = monitor => {\n  const jsonStr = JSON.stringify(monitor);\n  const json = JSON.parse(jsonStr);\n\n  return json;\n};\n\nMonitor.thaw = json => {\n  const { constraints, conflicts, incompatibilities, messages } = json;\n\n  const monitor = new Monitor();\n\n  monitor.constraints = constraints.map(constraintData => new Constraint(constraintData));\n  monitor.conflicts = conflicts;\n  monitor.incompatibilities = incompatibilities;\n  monitor.messages = messages;\n\n  return monitor;\n};\n\nexport default Monitor;\n","// Various objects that can occupy a single cube in space\nconst ObjectsEnum = {\n  CUBE: 0,\n  ROOF: 1,\n  TRUNK: 2,\n  FOLIAGE: 3,\n  PERSON: 4,\n};\n\nexport default ObjectsEnum;\n","// These are the 2D slice views of the 3D model\nconst CamerasEnum = {\n  NORTH: 0,\n  EAST: 1,\n  SOUTH: 2,\n  WEST: 3,\n  TOP: 4,\n  BOTTOM: 5,\n};\n\nexport default CamerasEnum;\n","/* global SETTINGS */\n\n/**\n * Returns a 3D vector of the model position based on the normalized click\n * @param {float} clickX - Normalized x between 0 and 1\n * @param {float} clickY - Normalized y between 0 and 1\n */\nexport function getRelativePosition(clickX, clickY) {\n  // get the x, y position in the scale of the model\n  const { gridSize } = SETTINGS;\n  const x = Math.floor(clickX * gridSize);\n  const y = gridSize - 1 - Math.floor(clickY * gridSize);\n  return { x, y };\n}\n\nexport function getGridPointInModelSpace(x, y) {\n  const { w, h } = SETTINGS;\n  // There is a 1px padding around the edges to not cut off the graphics awkwardly\n  // Ignore clicks in that range\n  if (x === 0 || x === (w - 1)\n      || y === 0 || y === (h - 1)) {\n    return null;\n  }\n\n  // Offset click for 1px padding and find normalized position\n  const normalizedX = (x - 1) / w;\n  const normalizedY = (y - 1) / h;\n  const point = getRelativePosition(normalizedX, normalizedY);\n\n  return point;\n}\n\nexport function getClosestEdgeInModelSpace(clickX, clickY) {\n  const { w, h, gridSize } = SETTINGS;\n  // There is a 1px padding around the edges to not cut off the graphics awkwardly\n  // Ignore clicks in that range\n  if (clickX === 0 || clickX === (w - 1)\n      || clickY === 0 || clickY === (h - 1)) {\n    return null;\n  }\n\n  // Offset click for 1px padding and find normalized position\n  const normalizedX = (clickX - 1) / w;\n  const normalizedY = (clickY - 1) / h;\n\n  const x = normalizedX * gridSize;\n  const xRound = Math.floor(x);\n  const xRemainder = x - xRound;\n\n  const y = gridSize - (normalizedY * gridSize);\n  const yRound = Math.floor(y);\n  const yRemainder = y - yRound;\n\n  let side;\n  const tDist = 1 - yRemainder;\n  const bDist = yRemainder;\n  const lDist = xRemainder;\n  const rDist = 1 - xRemainder;\n  const max = Math.min(tDist, bDist, lDist, rDist);\n  if (tDist === max) {\n    side = 't';\n  } else if (bDist === max) {\n    side = 'b';\n  } else if (lDist === max) {\n    side = 'l';\n  } else if (rDist === max) {\n    side = 'r';\n  }\n\n  return { x: xRound, y: yRound, side };\n}\n\nexport function getOppositeDirection(cardinalDirection) {\n  switch (cardinalDirection) {\n    case 'n':\n      return 's';\n    case 's':\n      return 'n';\n    case 'e':\n      return 'w';\n    case 'w':\n      return 'e';\n    case 't':\n      return 'b';\n    case 'b':\n      return 't';\n    default:\n      return null;\n  }\n}\n\nfunction getSafe(arr, x, y) {\n  if (x >= 0 && arr.length > 0 && arr[0].length && x < arr[0].length && y >= 0 && y < arr.length) {\n    return arr[y][x];\n  }\n  return null;\n}\n\nfunction getSafe3D(arr, x, y, z) {\n  if (arr.length > 0 && arr[0].length && arr[0][0].length\n      && x >= 0 && x < arr[0][0].length\n      && y >= 0 && y < arr[0].length\n      && z >= 0 && z < arr.length) {\n    return arr[z][y][x];\n  }\n  return null;\n}\n\n/**\n* Given a 2D array 'arr' and a position, get the position and all cells around it as an object\n* This can be unpacked as follows:\n* const { topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight } = context;\n*/\nexport function getCellContext3x3(arr, x, y) {\n  return {\n    topLeft: getSafe(arr, x - 1, y + 1),\n    top: getSafe(arr, x, y + 1),\n    topRight: getSafe(arr, x + 1, y + 1),\n    left: getSafe(arr, x - 1, y),\n    center: getSafe(arr, x, y),\n    right: getSafe(arr, x + 1, y),\n    bottomLeft: getSafe(arr, x - 1, y - 1),\n    bottom: getSafe(arr, x, y - 1),\n    bottomRight: getSafe(arr, x + 1, y - 1)\n  };\n}\n\n/**\n* Given a 2D array 'arr' and a position, get the position and all cells around it as an object\n* This can be unpacked as follows:\n* const { n, e, s, w, t, b } = context;\n*/\nexport function getCellContext3D(arr, position) {\n  const { x, y, z } = position;\n  return {\n    w: getSafe3D(arr, x - 1, y, z),\n    n: getSafe3D(arr, x, y + 1, z),\n    e: getSafe3D(arr, x + 1, y, z),\n    s: getSafe3D(arr, x, y - 1, z),\n    t: getSafe3D(arr, x, y, z + 1),\n    b: getSafe3D(arr, x, y, z - 1)\n  };\n}\n\n/**\n* Given a 2D array 'arr' and a position of a corner, get the height of all adjacent cells around it as an object\n* This can be unpacked as follows:\n* const { topLeft, topRight, bottomLeft, bottomRight } = context;\n*/\nexport function getCornerContext2x2(arr, x, y) {\n  return {\n    topLeft: getSafe(arr, x - 1, y),\n    topRight: getSafe(arr, x, y),\n    bottomLeft: getSafe(arr, x - 1, y - 1),\n    bottomRight: getSafe(arr, x, y - 1)\n  };\n}\n\n/**\n * Returns an empty 2D array\n * @param {int} rows - Number of rows in the array\n * @param {int} columns - Number of columns in the array\n * @param defaultValue - Default value for new array cells\n */\nexport function getEmpty2DArray(rows, columns, defaultValue = null) {\n  const arr = new Array(rows);\n  for (let i = 0; i < rows; i += 1) {\n    arr[i] = new Array(columns);\n    for (let j = 0; j < columns; j += 1) {\n      arr[i][j] = defaultValue;\n    }\n  }\n  return arr;\n}\n\nexport function getEmpty3DArray(x, y, z) {\n  const arr = new Array(z);\n\n  for (let i = 0; i < arr.length; i += 1) {\n    arr[i] = getEmpty2DArray(y, x, null);\n  }\n\n  return arr;\n}\n","const SurfacesEnum = Object.freeze({\n  SOLID: 0,\n  TRANS: 1,\n  PART: 2,\n  NONE: 3\n});\n\nexport default SurfacesEnum;\n","import SurfacesEnum from './enums/SurfacesEnum';\nimport Cube from './Cube';\n\nexport default class Roof {\n  static typeName = 'ROOF'\n\n  constructor(roofData) {\n    if (roofData) {\n      const { direction, hasSideSurface } = roofData;\n      this.direction = direction;\n      this.hasSideSurface = hasSideSurface;\n    } else {\n      this.direction = 'n';\n      this.hasSideSurface = true;\n    }\n  }\n\n  // Join cube surfaces that connect\n  hookAfterInsert = (modifier, context) => {\n    this.direction = modifier;\n\n    const { n, e, s, w, b } = context;\n\n    // Join to roof above\n    if (b && b.constructor === Cube) {\n      b.surfaces.t = SurfacesEnum.NONE;\n    }\n\n    // Join to adjacent cubes that face this roof\n    if (n && n.constructor === Cube && this.direction === 's') {\n      n.surfaces.s = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (e && e.constructor === Cube && this.direction === 'w') {\n      e.surfaces.w = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (s && s.constructor === Cube && this.direction === 'n') {\n      s.surfaces.n = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n    if (w && w.constructor === Cube && this.direction === 'e') {\n      w.surfaces.e = SurfacesEnum.NONE;\n      this.hasSideSurface = false;\n    }\n\n    // Join to adjacent roofs\n    if (n && (n.constructor === Roof && n.direction === 'n') && this.direction === 's') {\n      n.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (e && (e.constructor === Roof && e.direction === 'e') && this.direction === 'w') {\n      e.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (s && (s.constructor === Roof && s.direction === 's') && this.direction === 'n') {\n      s.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n    if (w && (w.constructor === Roof && w.direction === 'w') && this.direction === 'e') {\n      w.hasSideSurface = false;\n      this.hasSideSurface = false;\n    }\n  };\n\n  hookBeforeRemove = context => {\n    const { n, e, s, w, b } = context;\n    // Unjoin adjacent cubes\n    if (b && b.constructor === Cube) {\n      b.surfaces.t = SurfacesEnum.SOLID;\n    }\n    if (n && n.constructor === Cube && this.direction === 's') {\n      n.surfaces.s = SurfacesEnum.SOLID;\n    }\n    if (e && e.constructor === Cube && this.direction === 'w') {\n      e.surfaces.w = SurfacesEnum.SOLID;\n    }\n    if (s && s.constructor === Cube && this.direction === 'n') {\n      s.surfaces.n = SurfacesEnum.SOLID;\n    }\n    if (w && w.constructor === Cube && this.direction === 'e') {\n      w.surfaces.e = SurfacesEnum.SOLID;\n    }\n\n    // Unjoin adjacent roofs\n    if (n && (n.constructor === Roof && n.direction === 'n') && this.direction === 's') {\n      n.hasSideSurface = true;\n    }\n    if (e && (e.constructor === Roof && e.direction === 'e') && this.direction === 'w') {\n      e.hasSideSurface = true;\n    }\n    if (s && (s.constructor === Roof && s.direction === 's') && this.direction === 'n') {\n      s.hasSideSurface = true;\n    }\n    if (w && (w.constructor === Roof && w.direction === 'w') && this.direction === 'e') {\n      w.hasSideSurface = true;\n    }\n  };\n\n  setSurface = (sideCardinal, surface) => {\n    if (surface === SurfacesEnum.NONE) {\n      switch (sideCardinal) {\n        case 'n':\n          if (this.direction === 's') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 's':\n          if (this.direction === 'n') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 'e':\n          if (this.direction === 'w') {\n            this.hasSideSurface = false;\n          }\n          break;\n        case 'w':\n          if (this.direction === 'e') {\n            this.hasSideSurface = false;\n          }\n          break;\n        default:\n          break;\n      }\n    }\n  };\n}\n","import SurfacesEnum from './enums/SurfacesEnum';\nimport Roof from './Roof';\n\nexport default class Cube {\n  static typeName = 'CUBE'\n\n  constructor(cubeData) {\n    if (cubeData) {\n      const { surfaces } = cubeData;\n      this.surfaces = surfaces;\n    } else {\n      this.surfaces = {\n        n: SurfacesEnum.SOLID,\n        e: SurfacesEnum.SOLID,\n        s: SurfacesEnum.SOLID,\n        w: SurfacesEnum.SOLID,\n        t: SurfacesEnum.SOLID,\n        b: SurfacesEnum.SOLID\n      };\n    }\n  }\n\n  hookAfterInsert = context => {\n    const { n, e, s, w, t } = context;\n    // Join to adjacent cubes (update both this one and the other)\n    if (n && n.constructor === Cube) {\n      this.surfaces.n = SurfacesEnum.NONE;\n      n.surfaces.s = SurfacesEnum.NONE;\n    }\n    if (e && e.constructor === Cube) {\n      this.surfaces.e = SurfacesEnum.NONE;\n      e.surfaces.w = SurfacesEnum.NONE;\n    }\n    if (s && s.constructor === Cube) {\n      this.surfaces.s = SurfacesEnum.NONE;\n      s.surfaces.n = SurfacesEnum.NONE;\n    }\n    if (w && w.constructor === Cube) {\n      this.surfaces.w = SurfacesEnum.NONE;\n      w.surfaces.e = SurfacesEnum.NONE;\n    }\n\n    // Join to roof above\n    if (t && t.constructor === Roof) {\n      this.surfaces.t = SurfacesEnum.NONE;\n    }\n\n    // Join to adjacent roofs that face this cube\n    if (n && n.constructor === Roof && n.direction === 'n') {\n      this.surfaces.n = SurfacesEnum.NONE;\n      n.hasSideSurface = false;\n    }\n    if (e && e.constructor === Roof && e.direction === 'e') {\n      this.surfaces.e = SurfacesEnum.NONE;\n      e.hasSideSurface = false;\n    }\n    if (s && s.constructor === Roof && s.direction === 's') {\n      this.surfaces.s = SurfacesEnum.NONE;\n      s.hasSideSurface = false;\n    }\n    if (w && w.constructor === Roof && w.direction === 'w') {\n      this.surfaces.w = SurfacesEnum.NONE;\n      w.hasSideSurface = false;\n    }\n  };\n\n  hookBeforeRemove = context => {\n    // check adjacent cubes and seal them?\n    const { n, e, s, w, t } = context;\n    if (n && n.constructor === Cube) {\n      n.surfaces.s = SurfacesEnum.SOLID;\n    }\n    if (e && e.constructor === Cube) {\n      e.surfaces.w = SurfacesEnum.SOLID;\n    }\n    if (s && s.constructor === Cube) {\n      s.surfaces.n = SurfacesEnum.SOLID;\n    }\n    if (w && w.constructor === Cube) {\n      w.surfaces.e = SurfacesEnum.SOLID;\n    }\n\n    // Readd floor from cube above\n    if (t && t.constructor === Cube) {\n      t.surfaces.b = SurfacesEnum.SOLID;\n    }\n\n    // Unjoin to adjacent roofs that face this cube\n    if (n && n.constructor === Roof && n.direction === 'n') {\n      n.hasSideSurface = true;\n    }\n    if (e && e.constructor === Roof && e.direction === 'e') {\n      e.hasSideSurface = true;\n    }\n    if (s && s.constructor === Roof && s.direction === 's') {\n      s.hasSideSurface = true;\n    }\n    if (w && w.constructor === Roof && w.direction === 'w') {\n      w.hasSideSurface = true;\n    }\n  };\n\n  setSurface = (sideCardinal, surface) => {\n    this.surfaces[sideCardinal] = surface;\n  };\n\n  // Check if any wall has no surface\n  hasAccessToOutside = context => {\n    const { n, s, e, w } = context;\n    if (this.surfaces.e === SurfacesEnum.NONE && e === null) {\n      return true;\n    }\n    if (this.surfaces.w === SurfacesEnum.NONE && w === null) {\n      return true;\n    }\n    if (this.surfaces.n === SurfacesEnum.NONE && n === null) {\n      return true;\n    }\n    if (this.surfaces.s === SurfacesEnum.NONE && s === null) {\n      return true;\n    }\n    return false;\n  };\n\n  hasAccessInDirection = direction => {\n    if (this.surfaces[direction] === SurfacesEnum.NONE) {\n      return true;\n    }\n    return false;\n  };\n}\n","export class Foliage {\n  static typeName = 'FOLIAGE'\n}\n\nexport class Trunk {\n  static typeName = 'TRUNK'\n}\n","import Cube from '../Cube';\nimport { Trunk, Foliage } from '../Tree';\nimport Roof from '../Roof';\n\n// Mapping of class type to name for serialization across browsers after mangling of class names\nconst TypeToConstructorEnum = Object.freeze({\n  CUBE: Cube,\n  TRUNK: Trunk,\n  FOLIAGE: Foliage,\n  ROOF: Roof,\n});\nexport default TypeToConstructorEnum;\n","import Array2D from 'array2d';\nimport ObjectsEnum from './enums/ObjectsEnum';\nimport CamerasEnum from './enums/CamerasEnum';\n\nimport { getOppositeDirection, getEmpty2DArray, getEmpty3DArray, getCellContext3D } from '../helpers/Helpers';\n\nimport Cube from './Cube';\nimport Roof from './Roof';\nimport { Foliage, Trunk } from './Tree';\n\nimport TypeToConstructorEnum from './enums/TypeToConstructorEnum';\n\n/* global SETTINGS */\n\n/**\n * Represents the data of a design world\n *\n * The world is similar to Google Sketchup. The standard view \"North\" (looking North)\n * has x increasing from left to right, y, starting at 0 and increasing as it moves\n * away from you, and z increasing as it goes up.\n *\n */\nclass Design {\n  constructor(objects) {\n    if (objects) {\n      this.objects = objects;\n    } else {\n      // init empty world\n      this.objects = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n      // this.fill(); // can be enable to fill with a default design\n    }\n  }\n\n  getAll = () => this.objects;\n\n  getAt = p => this.objects[p.z][p.y][p.x];\n\n  clear = () => {\n    this.objects = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  };\n\n  /**\n   * Add an object at a certain position.\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   * @param {int} obj - int representing the ObjectsEnum object\n   */\n  add = (obj, position, modifier) => {\n    const context = getCellContext3D(this.objects, position);\n    let newObject;\n\n    switch (obj) {\n      case ObjectsEnum.TRUNK:\n        if (position.z < (SETTINGS.zMax - 1)) {\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          const foliagePosition = { x, y, z };\n          // Check placement spot and placement spot above\n          this.remove(position);\n          this.remove(foliagePosition);\n          this._setCell(position, new Trunk(position));\n          this._setCell(foliagePosition, new Foliage(foliagePosition));\n          return true;\n        }\n        return false;\n      case ObjectsEnum.CUBE:\n        newObject = new Cube();\n        this.remove(position);\n        this._setCell(position, newObject);\n        newObject.hookAfterInsert(context);\n        return true;\n      case ObjectsEnum.ROOF:\n        newObject = new Roof();\n        this.remove(position);\n        this._setCell(position, newObject);\n        newObject.hookAfterInsert(modifier, context);\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Remove the object at a certain position\n   * @param {object} position - 3D position in the form {x:x,y:y,z:z}\n   */\n  remove = position => {\n    const obj = this._getCell(position);\n\n    if (!obj) {\n      return;\n    }\n\n    switch (obj.constructor) {\n      case Trunk:\n        if (position.z < (SETTINGS.zMax - 1)) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z += 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      case Foliage:\n        if (position.z > 0) {\n          this._setCell(position, null);\n          const { x, y } = position;\n          let { z } = position;\n          z -= 1;\n          this._setCell({ x, y, z }, null);\n        }\n        break;\n      default:\n        if (obj && obj.hookBeforeRemove) {\n          const context = getCellContext3D(this.objects, position);\n          obj.hookBeforeRemove(context);\n        }\n        this._setCell(position, null);\n        break;\n    }\n  }\n\n  /**\n   * Use the camera and 2D side (l, r, t, b) to get a cardinal\n   * point (n,s,e,w,t,b) and set that surface at the model position\n   * to the given surface.\n   */\n  setSurface = (camera, position, side, surface) => {\n    const obj = this._getCell(position);\n\n    const sideCardinal = this.getCardinalSide(camera, side);\n    if (obj && obj.setSurface) {\n      obj.setSurface(sideCardinal, surface);\n    }\n\n    const context = getCellContext3D(this.objects, position);\n    const sharedWallNeighbor = context[sideCardinal];\n    if (sharedWallNeighbor && sharedWallNeighbor.setSurface) {\n      sharedWallNeighbor.setSurface(getOppositeDirection(sideCardinal), surface);\n    }\n  }\n\n  getObjects = () => {\n    const objects = [];\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        for (let x = 0; x < SETTINGS.xMax; x += 1) {\n          const object = this.objects[z][y][x];\n          if (object) {\n            let type = null;\n            switch (object.constructor) {\n              case Cube:\n                type = ObjectsEnum.CUBE;\n                break;\n              case Roof:\n                type = ObjectsEnum.ROOF;\n                break;\n              case Foliage:\n                type = ObjectsEnum.FOLIAGE;\n                break;\n              case Trunk:\n                type = ObjectsEnum.TRUNK;\n                break;\n              default:\n                break;\n            }\n            objects.push({\n              object,\n              type,\n              position: { x, y, z }\n            });\n          }\n        }\n      }\n    }\n\n    return objects;\n  }\n\n  getBuildings = () => {\n    if (this._buildings) {\n      return this._buildings;\n    }\n    return [];\n  }\n\n  calculateAttributes = topo => {\n    const objects = this.getObjects();\n    this._objects = objects;\n\n    if (!objects) {\n      return;\n    }\n\n    // Calculate individual object attributes\n    this.calculateObjectAttributes(objects, topo);\n    this.calculateAccess(objects);\n\n    // Check building attributes\n    const buildings = this.findBuildings(objects);\n    this._buildings = this.calculateBuildingAttributes(buildings); // save building attributes\n  }\n\n  calculateObjectAttributes = (objects, topo) => {\n    objects.forEach(item => {\n      const { position, object } = item;\n      const { x, y, z } = position;\n      const gh = topo.getAt({ x, y }); // get ground height\n      // const {\n      //   n, e, s, w, t, b\n      // } = getCellContext3D(this.objects, { x, y, z });\n      const { b } = getCellContext3D(this.objects, { x, y, z });\n\n      switch (object.constructor) {\n        case Cube:\n          object.area = 100;\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        case Roof:\n          object.height = 10 * (z + 1 - gh);\n          // 0 if has building below, else 1\n          object.noBase = b && b.constructor === Cube ? 0 : 1;\n          object.ground = 10 * (z - gh);\n          break;\n        case Foliage:\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        case Trunk:\n          object.height = 10 * (z + 1 - gh);\n          object.ground = 10 * (z - gh);\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  calculateAccess = objects => {\n    // Reset access\n    objects.forEach(item => {\n      if (item.type === ObjectsEnum.CUBE) {\n        const { object } = item;\n        object.distToAccess = Infinity;\n      }\n    });\n\n    // Get access points\n    const accessPoints = objects.filter(item => {\n      if (item.type === ObjectsEnum.CUBE) {\n        const { position, object } = item;\n        const { x, y, z } = position;\n        const context = getCellContext3D(this.objects, { x, y, z });\n        return object.hasAccessToOutside(context);\n      }\n      return false;\n    });\n\n    const checkAccess = (position, dist) => {\n      const { x, y, z } = position;\n      if (x < 0 || y < 0 || x >= SETTINGS.xMax || y >= SETTINGS.yMax) {\n        // out of bounds\n        return;\n      }\n      const object = this.objects[z][y][x];\n\n      if (object && (dist < object.distToAccess)) {\n        // Update access and continue flood fill of neighbors if this is the closest acces seen yet\n        object.distToAccess = dist;\n        const nextDist = dist + 10;\n\n        // check neigbors that open in this direction\n        if (object.hasAccessInDirection('n')) {\n          checkAccess({ x, y: y + 1, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('s')) {\n          checkAccess({ x, y: y - 1, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('e')) {\n          checkAccess({ x: x + 1, y, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('w')) {\n          checkAccess({ x: x - 1, y, z }, nextDist);\n        }\n        if (object.hasAccessInDirection('t')) {\n          checkAccess({ x, y, z: z + 1 }, nextDist);\n        }\n        if (object.hasAccessInDirection('b')) {\n          checkAccess({ x, y, z: z - 1 }, nextDist);\n        }\n      }\n    };\n\n    // For each access points, flood fill building, replacing access distance if lower\n    accessPoints.forEach(item => {\n      const { position } = item;\n      checkAccess(position, 10);\n    });\n  }\n\n  calculateBuildingAttributes = buildings => {\n    // Check building attributes\n    const buildingAttributes = []; // save building attributes\n    Object.keys(buildings).forEach(key => {\n      const building = buildings[key];\n      // building touches ground\n      // square footage of buildings\n      let floating = true;\n      let height = 0;\n      let ground = Infinity;\n      let area = 0;\n      let maxDistToAccess = 0;\n      building.forEach(part => {\n        if (part.constructor === Cube) {\n          area += 100;\n\n          if (part.distToAccess > maxDistToAccess) {\n            maxDistToAccess = part.distToAccess;\n          }\n        }\n        if (part.height === 10) { // on ground\n          floating = false;\n        }\n        if (part.height > height) {\n          height = part.height;\n        }\n        if (part.ground < ground) {\n          ground = part.ground;\n        }\n      });\n      buildingAttributes.push({\n        area,\n        floating: floating ? 1 : 0,\n        height,\n        ground,\n        maxDistToAccess\n      });\n    });\n\n    return buildingAttributes;\n  }\n\n  findBuildings = objects => {\n    const buildingParts = objects.filter(item => item.type === ObjectsEnum.CUBE || item.type === ObjectsEnum.ROOF);\n    const buildings = {};\n\n    // Reset buildings\n    buildingParts.forEach(item => {\n      const { object } = item;\n      object.buildingIndex = null;\n    });\n\n    // get the next building part, if no building, flood fill\n    const floodFillBuildings = (position, buildingIndex) => {\n      const { x, y, z } = position;\n      if (x < 0 || y < 0 || z < 0 || x >= SETTINGS.xMax || y >= SETTINGS.yMax || z >= SETTINGS.zMax) {\n        // out of bounds\n        return;\n      }\n      const object = this.objects[z][y][x];\n      if (object && object.buildingIndex === null) {\n        object.buildingIndex = buildingIndex;\n        buildings[buildingIndex].push(object);\n        const neighborPositions = [{ x, y: y + 1, z }, { x, y: y - 1, z }, { x: x + 1, y, z },\n          { x: x - 1, y, z }, { x, y, z: z + 1 }, { x, y, z: z - 1 }];\n        neighborPositions.forEach(neighborPosition => floodFillBuildings(neighborPosition, buildingIndex));\n      }\n    };\n\n    // For each access points, flood fill building, replacing access distance if lower\n    let nextIndex = 0;\n    buildingParts.forEach(item => {\n      const { position, object } = item;\n      if (object.buildingIndex === null) {\n        buildings[nextIndex] = [];\n        floodFillBuildings(position, nextIndex);\n        nextIndex += 1;\n      }\n    });\n\n    return buildings;\n  }\n\n  // Given 2D side { t, b, l, r } and camera view, return the cardinal direction { t, b, n, s, e, w }\n  getCardinalSide = (camera, side) => {\n    let sideCardinal;\n    if (side === 't' || side === 'b') {\n      switch (camera) {\n        case CamerasEnum.NORTH:\n        case CamerasEnum.SOUTH:\n        case CamerasEnum.EAST:\n        case CamerasEnum.WEST:\n          sideCardinal = side;\n          break;\n        case CamerasEnum.BOTTOM:\n          if (side === 't') {\n            sideCardinal = 's';\n          } else {\n            sideCardinal = 'n';\n          }\n          break;\n        case CamerasEnum.TOP:\n          if (side === 't') {\n            sideCardinal = 'n';\n          } else {\n            sideCardinal = 's';\n          }\n          break;\n        default:\n          throw new Error(`camera ${camera} is not recognized!`);\n      }\n    } else {\n      switch (camera) {\n        case CamerasEnum.NORTH:\n          if (side === 'l') {\n            sideCardinal = 'w';\n          } else if (side === 'r') {\n            sideCardinal = 'e';\n          }\n          break;\n        case CamerasEnum.SOUTH:\n          if (side === 'l') {\n            sideCardinal = 'e';\n          } else if (side === 'r') {\n            sideCardinal = 'w';\n          }\n          break;\n        case CamerasEnum.EAST:\n          if (side === 'l') {\n            sideCardinal = 'n';\n          } else if (side === 'r') {\n            sideCardinal = 's';\n          }\n          break;\n        case CamerasEnum.WEST:\n          if (side === 'l') {\n            sideCardinal = 's';\n          } else if (side === 'r') {\n            sideCardinal = 'n';\n          }\n          break;\n        case CamerasEnum.BOTTOM:\n        case CamerasEnum.TOP:\n          if (side === 'l') {\n            sideCardinal = 'w';\n          } else if (side === 'r') {\n            sideCardinal = 'e';\n          }\n          break;\n        default:\n          throw new Error(`camera ${camera} is not recognized!`);\n      }\n    }\n    return sideCardinal;\n  }\n\n  /**\n   * Returns 2D array of objects in the given slice\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getSlice = (camera, sliceIndex) => {\n    let ySlice;\n    let xSlice;\n    let zSlice;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        return this._getYSlice(sliceIndex);\n      case CamerasEnum.SOUTH:\n        ySlice = this._getYSlice(sliceIndex);\n        return Array2D.hflip(ySlice);\n      case CamerasEnum.EAST:\n        xSlice = this._getXSlice(sliceIndex);\n        return Array2D.hflip(xSlice);\n      case CamerasEnum.WEST:\n        return this._getXSlice(sliceIndex);\n      case CamerasEnum.BOTTOM:\n        zSlice = this._getZSlice(sliceIndex);\n        return Array2D.vflip(zSlice);\n      case CamerasEnum.TOP:\n        return this._getZSlice(sliceIndex);\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n  }\n\n  getBackgroundSlices = (camera, sliceIndex, max = 17) => {\n    let backgroundSliceIndex = sliceIndex;\n    let backgroundSliceIndices = [];\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        while (backgroundSliceIndex < (SETTINGS.yMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.EAST:\n        while (backgroundSliceIndex < (SETTINGS.xMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.WEST:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n        while (backgroundSliceIndex < (SETTINGS.zMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.TOP:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n    backgroundSliceIndices = backgroundSliceIndices.slice(0, max);\n    const backgroundSlices = backgroundSliceIndices.map(i => this.getSlice(camera, i));\n    return backgroundSlices;\n  }\n\n  _getZSlice = z => this.objects[z]\n\n  _getXSlice = x => {\n    const slice = getEmpty2DArray(SETTINGS.zMax, SETTINGS.yMax);\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        slice[z][y] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getYSlice = y => {\n    const slice = getEmpty2DArray(SETTINGS.zMax, SETTINGS.xMax);\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        slice[z][x] = this.objects[z][y][x];\n      }\n    }\n    return slice;\n  }\n\n  _getCell = position => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < SETTINGS.xMax && y < SETTINGS.yMax && z < SETTINGS.zMax) {\n      return this.objects[z][y][x];\n    }\n    return null;\n  }\n\n  _setCell = (position, object) => {\n    const { x, y, z } = position;\n    if (x >= 0 && y >= 0 && z >= 0 && x < SETTINGS.xMax && y < SETTINGS.yMax && z < SETTINGS.zMax) {\n      this.objects[z][y][x] = object;\n    }\n  }\n\n  _addCube = position => {\n    const context = getCellContext3D(position);\n    const c = new Cube(position, context);\n    this.addObject(position, c);\n  }\n\n  fill = () => {\n    const addObject = (pos, type, mod) => {\n      this.add(type, pos, mod);\n    };\n\n    addObject({ x: 7, y: 8, z: 0 }, 0);\n    addObject({ x: 8, y: 8, z: 0 }, 0);\n    addObject({ x: 7, y: 8, z: 1 }, 0);\n    addObject({ x: 8, y: 8, z: 1 }, 0);\n    addObject({ x: 7, y: 8, z: 2 }, 1, 'w');\n    addObject({ x: 8, y: 8, z: 2 }, 1, 'e');\n    addObject({ x: 7, y: 9, z: 0 }, 0);\n    addObject({ x: 8, y: 9, z: 0 }, 0);\n\n    addObject({ x: 12, y: 8, z: 1 }, 2);\n\n    this.setSurface(0, { x: 7, y: 8, z: 0 }, 'l', 1);\n    this.setSurface(0, { x: 8, y: 8, z: 1 }, 'b', 1);\n  }\n}\n\nDesign.freeze = design => {\n  const { objects } = design;\n  const objectsPacked = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  for (let z = 0; z < SETTINGS.zMax; z += 1) {\n    for (let y = 0; y < SETTINGS.xMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        const objectData = objects[z][y][x];\n        if (objectData) {\n          const jsonStr = JSON.stringify(objectData);\n          const json = JSON.parse(jsonStr);\n          json.typeName = objectData.constructor.typeName;\n          objectsPacked[z][y][x] = json;\n        }\n      }\n    }\n  }\n\n  const json = {\n    objects: objectsPacked\n  };\n\n  return json;\n};\n\nDesign.thaw = json => {\n  const { objects } = json;\n  const objectsUnpacked = getEmpty3DArray(SETTINGS.xMax, SETTINGS.yMax, SETTINGS.zMax);\n  // Deserialize all the object data into objects\n  for (let z = 0; z < SETTINGS.zMax; z += 1) {\n    for (let y = 0; y < SETTINGS.xMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        const objectData = objects[z][y][x];\n        if (objectData) {\n          let object = null;\n\n          const constructorFn = TypeToConstructorEnum[objectData.typeName];\n          object = new constructorFn(objectData);\n\n          objectsUnpacked[z][y][x] = object;\n        }\n      }\n    }\n  }\n\n  const design = new Design(objectsUnpacked);\n  return design;\n};\n\nexport default Design;\n","import Array2D from 'array2d';\nimport CamerasEnum from './enums/CamerasEnum';\nimport { getEmpty2DArray, getCellContext3x3, getCornerContext2x2 } from '../helpers/Helpers';\n\n/* global SETTINGS */\n\n/** Class represents the topograhy of a design world */\nclass Topo {\n  constructor(heights) {\n    if (heights) {\n      this.heights = heights;\n    } else {\n      this.heights = getEmpty2DArray(SETTINGS.yMax, SETTINGS.xMax, 0);\n      // this.fill(); // can be enable to fill with a default design\n    }\n  }\n\n  clear = () => {\n    this.heights = getEmpty2DArray(SETTINGS.yMax, SETTINGS.xMax, 0);\n  };\n\n  increase = position => {\n    const height = this.heights[position.y][position.x] + 1;\n    if (height < SETTINGS.zMax) {\n      this.heights[position.y][position.x] = height;\n    }\n  };\n\n  decrease = position => {\n    const height = this.heights[position.y][position.x] - 1;\n    if (height >= 0) {\n      this.heights[position.y][position.x] = height;\n    }\n  };\n\n  /**\n   * Get the topography height at a given position\n   * @param {object} position - 2D position in the form {x:x,y:y}\n   */\n  getAt = position => this.heights[position.y][position.x];\n\n  /**\n   * Get the topography height at the given positions (interpolated)\n   * @param {object} path - list of 2D positions in the form {x:x,y:y}\n   */\n  interpolate = path => {\n    // The elevation is dependent on the corners of the grid position\n    const corners = this.getCorners();\n\n    const dist = (x0, y0, x1, y1) => Math.sqrt(((x0 - x1) ** 2) + ((y0 - y1) ** 2));\n    // Interpolate height based on distance to given corner\n    const heights = path.map(pt => {\n      const { x, y } = pt;\n      const gx = Math.floor(x);\n      const gy = Math.floor(y);\n      const c0 = corners[gy][gx];\n      const d0 = dist(x, y, gx, gy);\n      const c1 = corners[gy + 1][gx];\n      const d1 = dist(x, y, gx, gy + 1);\n      const c2 = corners[gy][gx + 1];\n      const d2 = dist(x, y, gx + 1, gy);\n      const c3 = corners[gy + 1][gx + 1];\n      const d3 = dist(x, y, gx + 1, gy + 1);\n\n      if (d0 === 0) {\n        return c0;\n      }\n      if (d1 === 0) {\n        return c1;\n      }\n      if (d2 === 0) {\n        return c2;\n      }\n      if (d3 === 0) {\n        return c3;\n      }\n\n      const dSum = (1 / d0) + (1 / d1) + (1 / d2) + (1 / d3);\n      const z = (((1 / d0) / dSum) * c0) + (((1 / d1) / dSum) * c1) + (((1 / d2) / dSum) * c2) + (((1 / d3) / dSum) * c3);\n      return z;\n    });\n\n    return heights;\n  }\n\n  /**\n   * Get a the 1D array of heights for the given slice at the camera angle\n   * @param {int} camera - The CamerasEnum camera view\n   * @param {int} sliceIndex - The current slice being viewed from that camera view\n   */\n  getSlice = (camera, sliceIndex) => {\n    // console.log(`camera ${camera} and sliceIndex ${sliceIndex}`);\n    let heightsView;\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        heightsView = this.heights;\n        break;\n      case CamerasEnum.SOUTH:\n        heightsView = Array2D.hflip(this.heights);\n        break;\n      case CamerasEnum.EAST:\n        heightsView = Array2D.hflip(Array2D.transpose(this.heights));\n        break;\n      case CamerasEnum.WEST:\n        heightsView = Array2D.transpose(this.heights);\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        return null;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n\n    const back = [];\n    const front = [];\n    const all = [];\n\n    /*\n    For a given slice, get the highest corners of the front of the current cube and\n    the cubes in front and back and left and right. Imagine a sheet hung\n    over stacks of cubes. That is what we represent. This is necessary\n    because we set the heights of the cells, but we render the heights\n    at half way points in the slices.\n    */\n    for (let i = 0; i < heightsView[sliceIndex].length; i += 1) {\n      // Get the context\n      const context = getCellContext3x3(heightsView, i, sliceIndex);\n      const {\n        topLeft, top, topRight, left, center, right, bottomLeft, bottom, bottomRight\n      } = context;\n      // Find the heightest points\n      all.push([Math.max(bottomLeft, bottom, topLeft, top, left, center), Math.max(bottom, bottomRight, top, topRight, center, right)]);\n      back.push([Math.max(topLeft, top, left, center), Math.max(top, topRight, center, right)]);\n      front.push([ Math.max(bottomLeft, bottom, left, center), Math.max(bottom, bottomRight, center, right) ]);\n    }\n\n    return { all, front, back };\n  };\n\n  getBackgroundSlices = (camera, sliceIndex, max = 17) => {\n    let backgroundSliceIndex = sliceIndex;\n    let backgroundSliceIndices = [];\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        while (backgroundSliceIndex < (SETTINGS.yMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.EAST:\n        while (backgroundSliceIndex < (SETTINGS.xMax - 1)) {\n          backgroundSliceIndex += 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.WEST:\n        while (backgroundSliceIndex > 0) {\n          backgroundSliceIndex -= 1;\n          backgroundSliceIndices.push(backgroundSliceIndex);\n        }\n        break;\n      case CamerasEnum.BOTTOM:\n      case CamerasEnum.TOP:\n        // no background topo for top view\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n    backgroundSliceIndices = backgroundSliceIndices.slice(0, max);\n    const backgroundSlices = backgroundSliceIndices.map(i => this.getSlice(camera, i));\n    return backgroundSlices;\n  }\n\n  /**\n   * Get 2D array of all the corner heights (at each corner use the highest adjacent tile)\n   */\n  getCorners = () => {\n    const { length } = this.heights;\n    const cornersLength = length + 1;\n    // Create a 2D array 1 longer and wider than heights\n    const corners = getEmpty2DArray(cornersLength, cornersLength, 0);\n\n    for (let y = 0; y < cornersLength; y += 1) {\n      for (let x = 0; x < cornersLength; x += 1) {\n        const context = getCornerContext2x2(this.heights, x, y);\n        const {\n          topLeft, topRight, bottomLeft, bottomRight\n        } = context;\n        // console.log(topLeft, topRight, bottomLeft, bottomRight);\n        corners[y][x] = Math.max(topLeft, topRight, bottomLeft, bottomRight);\n      }\n    }\n\n    // console.dir(corners);\n    return corners;\n  };\n\n  getHighestNonZeroPoint = () => {\n    let max = 0;\n    let loc = null;\n    this.heights.forEach((row, y) => row.forEach((z, x) => {\n      if (z > max) {\n        max = z;\n        loc = { x, y, z };\n      }\n    }));\n    return loc;\n  };\n\n  fill = () => {\n    this.heights[8][12] = 1;\n  };\n}\n\nTopo.freeze = topo => {\n  const jsonStr = JSON.stringify(topo);\n  const json = JSON.parse(jsonStr);\n\n  return json;\n};\n\nTopo.thaw = json => {\n  const { heights } = json;\n  const topo = new Topo(heights);\n  return topo;\n};\n\nexport default Topo;\n","import Monitor from './Monitor';\nimport Design from './Design';\nimport Topo from './Topo';\nimport beep from '../helpers/Sounds';\n\n/* global localStorage */\n\n/**\n* Represents a user's session with the system and provides an interface for\n* the UI to display information about it.\n*/\nclass U5Session {\n  constructor(id) {\n    this._id = id;\n  }\n\n  onUpdate = () => {\n    // calculate totals\n    this._design.calculateAttributes(this.topo);\n\n    // monitor checks design\n    const newProblems = this._monitor.checkDesign(this._design);\n    if (newProblems) {\n      beep();\n    }\n  };\n\n  clear = () => {\n    this._design.clear();\n    this._topo.clear();\n    this._monitor.clearConstraints();\n    this.onUpdate();\n  };\n\n  // Interface for the design model\n  design = {\n    add: (type, xyz, meta) => {\n      this._design.add(type, xyz, meta);\n      this.onUpdate();\n    },\n    remove: xyz => {\n      this._design.remove(xyz);\n      this.onUpdate();\n    },\n    setSurface: (camera, xyz, side, surface) => {\n      this._design.setSurface(camera, xyz, side, surface);\n      this.onUpdate();\n    },\n    // Get the 3D array of design\n    getAll: () => this._design.getAll(),\n    getAt: p => this._design.getAt(p),\n    // Get array of objects\n    getObjects: () => this._design.getObjects(),\n    // Get the 2D array of objects for a given slice\n    getSlice: (camera, slice) => this._design.getSlice(camera, slice),\n    getBackgroundSlices: (camera, slice, max) => this._design.getBackgroundSlices(camera, slice, max)\n  };\n\n  // Interface for the topography model\n  topo = {\n    // Increase the height of the topography at position xy by 1\n    increase: xy => {\n      this._topo.increase(xy);\n      this.onUpdate();\n    },\n    // Decrease the height of the topography at position xy by 1\n    decrease: xy => {\n      this._topo.decrease(xy);\n      this.onUpdate();\n    },\n    // Get the 2D array of heights for the topography\n    getCorners: () => this._topo.getCorners(),\n    // Get the height at the given grid location\n    getAt: xy => this._topo.getAt(xy),\n    // Get the heights at the given positions\n    interpolate: path => this._topo.interpolate(path),\n    // Get a list of heights for the topography at the corners for a line representing it in a slice\n    getSlice: (camera, slice) => this._topo.getSlice(camera, slice),\n    getBackgroundSlices: (camera, slice, max) => this._topo.getBackgroundSlices(camera, slice, max),\n    getHighestNonZeroPoint: () => this._topo.getHighestNonZeroPoint()\n  };\n\n  // Interface for the monitor\n  monitor = {\n    addConstraint: text => {\n      const success = this._monitor.addConstraint(text);\n      if (success) {\n        setTimeout(this.onUpdate, 4000);\n      }\n    },\n    clearConstraints: () => {\n      this._monitor.clearConstraints();\n      this.onUpdate();\n    },\n    getMessages: () => this._monitor.getMessages(),\n    setMessages: messages => this._monitor.setMessages(messages)\n  };\n\n  save = () => {\n    const ice = U5Session.freeze(this);\n    localStorage.setItem(this._id, JSON.stringify(ice));\n    localStorage.setItem(`${this._id}_date`, Date.now());\n  };\n}\n\nU5Session.create = id => {\n  const session = new U5Session(id);\n  session._design = new Design();  // eslint-disable-line\n  session._topo = new Topo();  // eslint-disable-line\n  session._monitor = new Monitor();  // eslint-disable-line\n\n  return session;\n};\n\nU5Session.freeze = session => {\n  const { _id, _design, _topo, _monitor } = session;  // eslint-disable-line\n\n  const json = {\n    id: _id,\n    design: Design.freeze(_design),\n    topo: Topo.freeze(_topo),\n    monitor: Monitor.freeze(_monitor)\n  };\n\n  return json;\n};\n\nU5Session.thaw = json => {\n  const { id, design, topo, monitor, date } = json;  // eslint-disable-line\n  const session = new U5Session(id);\n  session._design = Design.thaw(design);  // eslint-disable-line\n  session._topo = Topo.thaw(topo);  // eslint-disable-line\n  session._monitor = Monitor.thaw(monitor);  // eslint-disable-line\n\n  session.onUpdate();\n\n  return session;\n};\n\nexport default U5Session;\n","\n// play a beep sound\nexport default function beep() {\n  const snd = new Audio(\"data:audio/wav;base64,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qJrx4KOQjahZxWbcZgztj2c49nKmkId44S71j0c8eV9yDK6uPRzx5X18eDvjvQ6yKo9ZSS6l//8elePK/Lf//IInrOF/FvDoADYAGBMGb7FtErm5MXMlmPAJQVgWta7Zx2go+8xJ0UiCb8LHHdftWyLJE0QIAIsI+UbXu67dZMjmgDGCGl1H+vpF4NSDckSIkk7Vd+sxEhBQMRU8j/12UIRhzSaUdQ+rQU5kGeFxm+hb1oh6pWWmv3uvmReDl0UnvtapVaIzo1jZbf/pD6ElLqSX+rUmOQNpJFa/r+sa4e/pBlAABoAAAAA3CUgShLdGIxsY7AUABPRrgCABdDuQ5GC7DqPQCgbbJUAoRSUj+NIEig0YfyWUho1VBBBA//uQZB4ABZx5zfMakeAAAAmwAAAAF5F3P0w9GtAAACfAAAAAwLhMDmAYWMgVEG1U0FIGCBgXBXAtfMH10000EEEEEECUBYln03TTTdNBDZopopYvrTTdNa325mImNg3TTPV9q3pmY0xoO6bv3r00y+IDGid/9aaaZTGMuj9mpu9Mpio1dXrr5HERTZSmqU36A3CumzN/9Robv/Xx4v9ijkSRSNLQhAWumap82WRSBUqXStV/YcS+XVLnSS+WLDroqArFkMEsAS+eWmrUzrO0oEmE40RlMZ5+ODIkAyKAGUwZ3mVKmcamcJnMW26MRPgUw6j+LkhyHGVGYjSUUKNpuJUQoOIAyDvEyG8S5yfK6dhZc0Tx1KI/gviKL6qvvFs1+bWtaz58uUNnryq6kt5RzOCkPWlVqVX2a/EEBUdU1KrXLf40GoiiFXK///qpoiDXrOgqDR38JB0bw7SoL+ZB9o1RCkQjQ2CBYZKd/+VJxZRRZlqSkKiws0WFxUyCwsKiMy7hUVFhIaCrNQsKkTIsLivwKKigsj8XYlwt/WKi2N4d//uQRCSAAjURNIHpMZBGYiaQPSYyAAABLAAAAAAAACWAAAAApUF/Mg+0aohSIRobBAsMlO//Kk4soosy1JSFRYWaLC4qZBYWFRGZdwqKiwkNBVmoWFSJkWFxX4FFRQWR+LsS4W/rFRb/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////VEFHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAU291bmRib3kuZGUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMjAwNGh0dHA6Ly93d3cuc291bmRib3kuZGUAAAAAAAAAACU=\");\n  snd.play();\n}\n","import U5Session from './U5Session';\n\n/* global localStorage */\n\n/** Provides access to previous, new, and test U5Sessions */\nexport default class U5SessionFactory {\n  getIDList = () => {\n    let ids = localStorage.getItem('U5SessionIDList');\n    if (!ids) {\n      ids = [];\n    } else {\n      ids = ids.split(',');\n    }\n\n    // filter out unsaved sessions\n    ids = ids.filter(id => !!localStorage.getItem(id));\n    console.log(ids);\n    return ids;\n  }\n\n  get = id => {\n    const json = JSON.parse(localStorage.getItem(id));\n    const session = U5Session.thaw(json);\n\n    // Reorder sessions to make this session the most recent\n    let ids = this.getIDList();\n    ids = ids.filter(item => item !== id);\n    ids.push(id);\n    this._setIDList(ids);\n\n    return session;\n  }\n\n  remove = id => {\n    let ids = this.getIDList();\n    ids = ids.filter(item => item !== id);\n    this._setIDList(ids);\n    return ids;\n  }\n\n  last = () => {\n    const ids = this.getIDList();\n    const id = ids.pop();\n\n    if (!id) {\n      return this.newSession();\n    }\n\n    const json = JSON.parse(localStorage.getItem(id));\n    const session = U5Session.thaw(json);\n\n    return session;\n  }\n\n  newSession = () => {\n    const id = this._getNextID();\n\n    const ids = this.getIDList();\n    ids.push(id);\n    this._setIDList(ids);\n\n    const session = U5Session.create(id);\n    return session;\n  }\n\n  test = () => {\n    const id = this._getNextID();\n\n    const ids = this.getIDList();\n    ids.push(id);\n    this._setIDList(ids);\n\n    // Always get the same data, but save to new id\n    const test = localStorage.getItem('U5SessionTestData');\n\n    test.id = id;\n    const session = U5Session.thaw(test);\n    return session;\n  }\n\n  _setIDList = ids => localStorage.setItem('U5SessionIDList', ids)\n\n  _getNextID = () => {\n    let currentID = localStorage.getItem('U5SessionIDCount');\n    if (!currentID) {\n      currentID = 0;\n    }\n    currentID = parseInt(currentID, 10) + 1;\n    localStorage.setItem('U5SessionIDCount', currentID);\n    return `U5Session_${currentID}`;\n  }\n}\n","import React from 'react';\n\nimport U5SessionFactory from '../../api/U5SessionFactory';\n\n/* global localStorage */\n/* global document */\n\n/** Class for the rendering the view showing sessions that can be loaded */\nexport default class StartPage extends React.Component {\n  state = {\n    active: 0\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    const { active } = this.state;\n    const ids = new U5SessionFactory().getIDList();\n\n    switch (event.keyCode) {\n      case 38: // up arrow\n        //\n        this.setState({ active: Math.max(0, active - 1) });\n        break;\n      case 40: // down arrow\n        this.setState({ active: Math.min(ids.length, active + 1) });\n        break;\n      case 13: // ENTER\n        this.refs.sessions.getElementsByTagName('BUTTON')[active].click();\n        break;\n      default:\n        break;\n    }\n    event.preventDefault();\n  }\n\n  onButtonClick = id => {\n    const { onSelectSession } = this.props;\n    const factory = new U5SessionFactory();\n    let session;\n    if (id === 'new') {\n      session = factory.newSession();\n    } else if (id === 'last') {\n      session = factory.last();\n    } else {\n      session = factory.get(id);\n    }\n\n    onSelectSession(session);\n  }\n\n  getButton = (id, i) => {\n    const { active } = this.state;\n    const date = localStorage.getItem(`${id}_date`);\n    let dateStr = '';\n    if (date) {\n      dateStr = new Date(parseInt(date, 10)).toLocaleString();\n    }\n    const title = dateStr;\n    return (\n      <li key={id} style={{ paddingTop: '4px' }}>\n        <button type=\"button\" onClick={() => this.onButtonClick(id)}>\n          {title}\n          { (active - 1) === i ? '_' : '' }\n        </button>\n      </li>);\n  }\n\n  render() {\n    const { active } = this.state;\n    const ids = new U5SessionFactory().getIDList();\n    ids.reverse();\n    const recentIds = ids.slice(0, 8);\n\n    return (\n      <div style={{ width: '1024px', height: '100%', float: 'left', padding: '20px' }}>\n        <div>Select a session to use</div>\n        <ul style={{ lineHeight: '28px' }} ref=\"sessions\">\n          <li key=\"new\"><button type=\"button\" onClick={() => this.onButtonClick('new')}>START NEW SESSION{ active === 0 ? '_' : '' }</button></li>\n          <br/>\n          <div>Open Previous Sessions:</div>\n          { recentIds.map(this.getButton) }\n        </ul>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class for the side panel of 'light buttons' */\nexport default class Menu extends React.PureComponent {\n  static propTypes = {\n    // Array of ActionsEnum to show\n    actions: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    // Function to call when button is clicked\n    onClick: PropTypes.func.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  render() {\n    const buttonElements = [];\n\n    const { actions, onClick, action } = this.props;\n    if (actions) {\n      actions.forEach(item => {\n        buttonElements.push((\n          <button\n            type=\"button\"\n            key={item.label}\n            onClick={e => {\n              e.preventDefault();\n              onClick(item);\n            }}\n            style={{ display: 'block', whiteSpace: 'pre' }}\n          >\n            {item.label + (item.id === action.id ? '_' : '')}\n          </button>\n        ));\n      });\n    }\n\n    return (\n      <div id=\"menu\">\n        {buttonElements}\n      </div>\n    );\n  }\n}\n","const ActionsEnum = {\n  STEPOUT: { id: 0, label: 'STEP OUT', nonSelectable: true }, // Retreat to the previous slice\n  STEPIN: { id: 1, label: 'STEP  IN', nonSelectable: true }, // Advance to the next slice\n  ADDCUBE: { id: 2, label: 'ADD CUBE' }, // Add a cube\n  REMOVE: { id: 3, label: 'DELETE' }, // Remove an object\n  ROTATELT: { id: 4, label: 'LOOKLEFT', nonSelectable: true }, // Rotate the view to the right\n  ROTATERT: { id: 5, label: 'LOOKRGHT', nonSelectable: true }, // Rotate the view to the left\n  ADDTREE: { id: 6, label: 'ADD TREE' }, // Add a Tree (trunk and foliage)\n  ADD_ROOF_NORTH: { id: 7, label: 'ADDROOFN' }, // Add Angled Roof down towards north\n  ADD_ROOF_SOUTH: { id: 8, label: 'ADDROOFS' }, // Add Angled Roof down towards south\n  WALKTHRU: { id: 9, label: 'WALKTHRU' }, // Start walkthrough\n  // EDITTOPO: { id: 10, label: 'EDITTOPO' }, // Edit topo mode\n  SPEAK_CONSTRAINT: { id: 11, label: 'SPEAK' }, // Enter text constraint\n  INCREASE_HEIGHT: { id: 12, label: 'INCRS HT' },\n  DECREASE_HEIGHT: { id: 13, label: 'DECRS HT' },\n  SOLID_SURFACE: { id: 14, label: 'SOLIDSRF' },\n  PARTITION_SURFACE: { id: 15, label: 'PARTTION' },\n  TRANSPARENT_SURFACE: { id: 16, label: 'TRANSPNT' },\n  NO_SURFACE: { id: 17, label: 'NO SRF' },\n  HAS_ACCESS: { id: 18, label: 'HASACCSS' },\n  NO_ACCESS: { id: 19, label: 'NO ACCSS' },\n  ADD_ROOF_WEST: { id: 20, label: 'ADDROOFW' }, // Add Angled Roof down towards west\n  ADD_ROOF_EAST: { id: 21, label: 'ADDROOFE' }, // Add Angled Roof down towards east\n  ADDROOF: { id: 22, label: 'ADD ROOF' }, // Add Roof, click rotates\n\n  isAdd: action => [2, 6, 7, 8, 20, 21].includes(action.id),\n};\n\nexport default ActionsEnum;\n\nexport function getActions(displayType) {\n  switch (displayType) {\n    case 'DRAW':\n      return [\n        ActionsEnum.STEPOUT,\n        ActionsEnum.STEPIN,\n        ActionsEnum.ROTATELT,\n        ActionsEnum.ROTATERT,\n        ActionsEnum.ADDCUBE,\n        ActionsEnum.ADDTREE,\n        ActionsEnum.ADDROOF,\n        ActionsEnum.REMOVE,\n        ActionsEnum.SPEAK_CONSTRAINT\n      ];\n    case 'CALC':\n      return [];\n    case 'TOPO':\n      return [\n        ActionsEnum.INCREASE_HEIGHT,\n        ActionsEnum.DECREASE_HEIGHT\n      ];\n    case 'SURF':\n      return [\n        ActionsEnum.STEPOUT,\n        ActionsEnum.STEPIN,\n        ActionsEnum.ROTATELT,\n        ActionsEnum.ROTATERT,\n        ActionsEnum.SOLID_SURFACE,\n        ActionsEnum.NO_SURFACE,\n      ];\n    default:\n      break;\n  }\n\n  return [];\n  }\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/* global document */\n\n/** Class for the top of the screen where text interaction with URBAN5 takes place */\nexport default class TextInput extends React.PureComponent {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    value: ''\n  };\n\n  componentDidMount() {\n    this.refs.input.addEventListener('keydown', this.handleKeyDown);\n    setTimeout(() => { // delay focus for mouse click event to pass by\n      this.refs.input.focus();\n    }, 0);\n  }\n\n  componentDidUpdate() {\n    this.refs.input.focus();\n  }\n\n  componentWillUnmount() {\n    this.refs.input.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = event => {\n    if (event.keyCode === 13) { // Is 'Enter'\n      this.handleSubmit();\n    }\n  };\n\n  handleChange = event => {\n    const val = event.target.value;\n    const actualVal = val;\n    this.setState({ value: actualVal });\n  };\n\n  handleSubmit = () => {\n    const { onSubmit } = this.props;\n    const { value } = this.state;\n\n    this.setState({ value: '' });\n    onSubmit(value);\n  };\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div>\n        <input ref=\"input\" type=\"text\" id=\"speak\" autoComplete=\"off\" autoFocus={true} spellCheck=\"false\" value={value} onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ActionsEnum from '../../api/enums/ActionsEnum';\nimport TextInput from './TextInput';\n\n/* global window */\n/* global document */\n\n/** Class for the top of the screen where text interaction with URBAN5 takes place */\nexport default class Top extends React.PureComponent {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    textMessages: []\n  };\n\n  componentDidMount() {\n    const { session } = this.props;\n\n    const poll = () => {\n      const textMessages = session.monitor.getMessages();\n      this.setState({ textMessages });\n      this.pollTimeout = setTimeout(poll, 100);\n    };\n    poll();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  onMessage = newMessage => {\n    this.setState(prevState => ({ textMessages: [...prevState.textMessages, newMessage] }));\n  }\n\n  componentDidUpdate = () => {\n    this.scrollElement();\n  }\n\n  scrollElement = () => {\n    window.requestAnimationFrame(() => {\n      const container = document.getElementById('topContainer');\n      if (container) {\n        container.scrollTop = container.scrollHeight + 100;\n      }\n    });\n  };\n\n  onSpeak = text => {\n    const { session } = this.props;\n    session.monitor.addConstraint(text);\n    const textMessages = session.monitor.getMessages();\n    this.setState({ textMessages: textMessages.slice() });\n  };\n\n  render() {\n    const { action } = this.props;\n    const { textMessages } = this.state;\n\n    let textInput = null;\n\n    if (action === ActionsEnum.SPEAK_CONSTRAINT) {\n      textInput = (\n        <div>\n          <TextInput onSubmit={this.onSpeak} />\n        </div>\n      );\n    }\n\n    console.log('textMessages', textMessages);\n    const messageElements = textMessages.map(message => (\n      <div className=\"mono-text\" key={message}>{message}</div>\n    ));\n\n    return (\n      <div id=\"topContainer\" style={{ overflow: 'hidden', height: '75px' }}>\n        { messageElements }\n        { textInput }\n      </div>\n    );\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\n/* global SETTINGS */\n\nexport default class TopoRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  draw = (topoSlice, isBackground) => {\n    const line = new createjs.Shape();\n    let cornerX;\n    let cornerY;\n\n    // Draw the heights left to right as a connected line\n    cornerX = 1;\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    if (isBackground) {\n      line.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    topoSlice.all.forEach(s => {\n      const [ startHeight, endHeight ] = s;\n      cornerY = SETTINGS.h - 1 - (startHeight * SETTINGS.r);\n      line.graphics.moveTo(cornerX, cornerY);\n      cornerX += SETTINGS.r;\n      cornerY = SETTINGS.h - 1 - (endHeight * SETTINGS.r);\n      line.graphics.lineTo(cornerX, cornerY);\n    });\n    line.graphics.endStroke();\n\n    this.stage.addChild(line);\n  }\n}\n","import { createjs } from '@createjs/easeljs';\nimport CamerasEnum from '../../api/enums/CamerasEnum';\nimport SurfacesEnum from '../../api/enums/SurfacesEnum';\nimport Cube from '../../api/Cube';\nimport { Trunk, Foliage } from '../../api/Tree';\nimport Roof from '../../api/Roof';\n\n/* global SETTINGS */\n\n/** Class responsible for rendering a 2D slice */\nexport default class DesignRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  /**\n   * Add a slice to the view\n   * @param {int} camera - CamerasEnum\n   * @param {int[][]} slice - 2D array representing slice to add\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  drawSlice = (camera, slice, isDashed = false) => {\n    this.camera = camera;\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const cell = row[x];\n\n        if (cell) {\n          switch (cell.constructor) {\n            case Cube:\n              this.drawCube(cell, camera, this.stage, x, y, isDashed);\n              break;\n            case Roof:\n              this.drawRoof(cell, camera, this.stage, x, y, isDashed);\n              break;\n            case Foliage:\n              // Dont draw background trees\n              if (!isDashed) {\n                this.drawFoliage(camera, this.stage, x, y, isDashed);\n              }\n              break;\n            case Trunk:\n              // Dont draw background trees\n              if (!isDashed) {\n                this.drawTrunk(camera, this.stage, x, y, isDashed);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * SETTINGS.r;\n        const contextY = SETTINGS.h - ((y + 0.5) * SETTINGS.r);\n\n        point.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke - 1).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /**\n   * Draw a circle at the location\n   * @param {int} x\n   * @param {int} y\n   */\n  drawCircle = (x, y) => {\n    const circle = new createjs.Shape();\n\n    circle.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    circle.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    this.stage.addChild(circle);\n  };\n\n  drawCube = (cube, camera, stage, x, y, isDashed = false) => {\n    let drawLeft, drawTop, drawRight, drawBottom;\n    const s = cube.surfaces;\n    // Lines on the sides require knowing the camera angle\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.SOUTH:\n        drawLeft = s.e === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.w === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.EAST:\n        drawLeft = s.n === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.s === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.WEST:\n        drawLeft = s.s === SurfacesEnum.SOLID;\n        drawTop = s.t === SurfacesEnum.SOLID;\n        drawRight = s.n === SurfacesEnum.SOLID;\n        drawBottom = s.b === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.TOP:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.n === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.s === SurfacesEnum.SOLID;\n        break;\n      case CamerasEnum.BOTTOM:\n        drawLeft = s.w === SurfacesEnum.SOLID;\n        drawTop = s.s === SurfacesEnum.SOLID;\n        drawRight = s.e === SurfacesEnum.SOLID;\n        drawBottom = s.n === SurfacesEnum.SOLID;\n        break;\n      default:\n        return;\n    }\n\n    this._drawCubeSquare(stage, x, y, isDashed, drawLeft, drawTop, drawRight, drawBottom);\n  };\n\n  _drawCubeSquare = (stage, x, y, isDashed = false, drawLeft = true, drawTop = true, drawRight = true, drawBottom = true) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    if (isDashed) {\n      shape.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    if (drawLeft) { // left\n      shape.graphics.moveTo(sx, sy).lineTo(sx, sy + dy);\n    }\n    if (drawTop) { // top\n      shape.graphics.moveTo(sx, sy + dy).lineTo(sx + dx, sy + dy);\n    }\n    if (drawRight) { // right\n      shape.graphics.moveTo(sx + dx, sy + dy).lineTo(sx + dx, sy);\n    }\n    if (drawBottom) { // bottom\n      shape.graphics.moveTo(sx + dx, sy).lineTo(sx, sy);\n    }\n\n    stage.addChild(shape);\n  };\n\n  drawRoof = (roof, camera, stage, x, y, isDashed = false) => {\n    switch (camera) {\n      case CamerasEnum.NORTH:\n        if (roof.direction === 'n' || roof.direction === 's') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'w') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'e') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.SOUTH:\n        if (roof.direction === 'n' || roof.direction === 's') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'e') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'w') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.EAST:\n        if (roof.direction === 'e' || roof.direction === 'w') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 's') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 'n') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.WEST:\n        if (roof.direction === 'e' || roof.direction === 'w') {\n          this._drawRoofSquare(stage, x, y, isDashed);\n        } else if (roof.direction === 'n') {\n          this._drawRoofSlantRight(roof, stage, x, y, isDashed);\n        } else if (roof.direction === 's') {\n          this._drawRoofSlantLeft(roof, stage, x, y, isDashed);\n        }\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        this._drawRoofSquare(stage, x, y, isDashed);\n        break;\n      default:\n    }\n  };\n\n  _drawRoofSquare = (stage, x, y, isDashed = false) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    if (isDashed) {\n      shape.graphics.setStrokeDash([3, 7], 0);\n    }\n\n    shape.graphics.drawRect(sx, sy, dx, dy);\n    stage.addChild(shape);\n  };\n\n  /**\n   * Draw a line that slants down to the left\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofSlantLeft = (obj, stage, x, y, isDashed = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    let cornerX = (x * SETTINGS.r) + 1;\n    let cornerY = SETTINGS.h - (y * SETTINGS.r) - 1;\n    roof.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += SETTINGS.r;\n    cornerY -= SETTINGS.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (obj.hasSideSurface) {\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += SETTINGS.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    stage.addChild(roof);\n  };\n\n  /**\n   * Draw a line that slants down to the right\n   * @param {int} x\n   * @param {int} y\n   */\n  _drawRoofSlantRight = (obj, stage, x, y, isDashed = false) => {\n    const roof = new createjs.Shape();\n\n    if (isDashed) {\n      roof.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    let cornerX = (x * SETTINGS.r) + 1;\n    let cornerY = SETTINGS.h - ((y + 1) * SETTINGS.r) - 1;\n    roof.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    roof.graphics.moveTo(cornerX, cornerY);\n    cornerX += SETTINGS.r;\n    cornerY += SETTINGS.r;\n    roof.graphics.lineTo(cornerX, cornerY);\n\n    if (obj.hasSideSurface) {\n      cornerX -= SETTINGS.r;\n      cornerY -= SETTINGS.r;\n      roof.graphics.moveTo(cornerX, cornerY);\n      cornerY += SETTINGS.r;\n      roof.graphics.lineTo(cornerX, cornerY);\n    }\n    roof.graphics.endStroke();\n\n    stage.addChild(roof);\n  };\n\n  /**\n   * Draws the circle representing foliage of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   */\n  drawFoliage = (camera, stage, x, y, isDashed = false) => {\n    const foliage = new createjs.Shape();\n\n    if (isDashed) {\n      foliage.graphics.setStrokeDash([SETTINGS.stroke, 7], 0);\n    }\n\n    foliage.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    foliage.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    stage.addChild(foliage);\n  };\n\n  /**\n   * Draws the trunk of a tree at the given x and y.\n   * @param {int} x\n   * @param {int} y\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  drawTrunk = (camera, stage, x, y, isDashed = false) => {\n    const trunk = new createjs.Shape();\n\n    if (isDashed) {\n      trunk.graphics.setStrokeDash([4, 8], 0);\n    }\n\n    trunk.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - (y * SETTINGS.r) - 1;\n\n    // The trunk is a rectangle from the side and a dot from the ends\n    switch (camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.WEST:\n      case CamerasEnum.EAST:\n        // Draw a line\n        trunk.graphics.moveTo(cornerX, cornerY).lineTo(cornerX, cornerY - SETTINGS.r);\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        // Draw no point, because grid point\n        break;\n      default:\n        throw new Error(`camera ${camera} is not recognized!`);\n    }\n\n    stage.addChild(trunk);\n  };\n}\n","import { createjs } from '@createjs/easeljs';\nimport CamerasEnum from '../../api/enums/CamerasEnum';\nimport { getEmpty2DArray } from '../../helpers/Helpers';\n\nimport TopoRenderer2D from './TopoRenderer2D';\nimport DesignRenderer2D from './DesignRenderer2D';\n\n/* global SETTINGS */\n\n/** Class responsible for rednering a 2D slice */\nexport default class Display2DView {\n  constructor(canvas, session) {\n    this.session = session;\n    this.stage = new createjs.Stage(canvas);\n    this.designRenderer = new DesignRenderer2D(this.stage);\n    this.topoRenderer = new TopoRenderer2D(this.stage);\n\n    this.drawBackground = true; // Whether background slices should be rendered\n  }\n\n  /**\n   * Draw the given sliceIndex for the camera angle to the screen\n   * @param {int} camera - CamerasEnum\n   * @param {int} sliceIndex - Index of slice of model from given camera view to draw\n   * @param {int} isBackgroundDashed - Draw objects in background slices as dashed lines\n   */\n  draw = (camera, sliceIndex, isBackgroundDashed = true) => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    // Draw the topography\n    const topoSlice = this.session.topo.getSlice(camera, sliceIndex);\n    if (topoSlice) {\n      this.topoRenderer.draw(topoSlice);\n    }\n\n    // Draw the background slices\n    if (this.drawBackground) {\n      const topoBackgroundSlices = this.session.topo.getBackgroundSlices(camera, sliceIndex, SETTINGS.clippingMax);\n      topoBackgroundSlices.forEach(s => this.topoRenderer.draw(s, isBackgroundDashed));\n\n      const backgroundSlices = this.session.design.getBackgroundSlices(camera, sliceIndex, SETTINGS.clippingMax);\n      backgroundSlices.forEach(s => this.designRenderer.drawSlice(camera, s, isBackgroundDashed));\n    }\n\n    // Draw the given slice\n    const currentSlice = this.session.design.getSlice(camera, sliceIndex);\n    this.designRenderer.drawSlice(camera, currentSlice);\n\n    // Draw the grid of appropriate size for this slice\n    this.designRenderer.drawGridPoints(currentSlice);\n\n    // Render to the screen\n    this.stage.update();\n  };\n\n  /**\n   * Draw a version where all the layers are compressed into a single top view\n   */\n  drawTopCompressedView = () => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    const allSlices = this.session.design.getBackgroundSlices(CamerasEnum.TOP, SETTINGS.zMax);\n    // Reverse to go from bottom up\n    allSlices.reverse();\n\n    // Create master slice from all slices\n    const masterSlice = getEmpty2DArray(SETTINGS.xMax, SETTINGS.yMax, null);\n    for (let y = 0; y < SETTINGS.yMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        let topObj = null;\n        allSlices.forEach(slice => {\n          const obj = slice[y][x];\n          if (obj) {\n            topObj = obj;\n          }\n        });\n        masterSlice[y][x] = topObj;\n      }\n    }\n\n    // draw dots at corners?\n    this.drawGridPoints(masterSlice);\n\n    this.designRenderer.drawSlice(CamerasEnum.TOP, masterSlice);\n\n    // Render to the screen\n    this.stage.update();\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * SETTINGS.r;\n        const contextY = SETTINGS.h - ((y + 0.5) * SETTINGS.r);\n\n        point.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke - 1).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /** Update the screen */\n  update = () => {\n    this.stage.update();\n  };\n\n  /** Clear the screen */\n  clear = () => {\n    this.stage.removeAllChildren();\n    this.stage.update();\n  };\n\n  /**\n   * Draw a line representing the 1D slice of topography\n   * @param {array} topoSlice - heights at given locations\n   */\n  _drawTopoSlice = topoSlice => {\n    const line = new createjs.Shape();\n    let cornerX = 1;\n    let cornerY;\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n\n    // Draw the heights left to right as a connected line\n    topoSlice.forEach(s => {\n      const { startHeight, endHeight } = s;\n      cornerY = SETTINGS.h - 1 - (startHeight * SETTINGS.r);\n      line.graphics.moveTo(cornerX, cornerY);\n      cornerX += SETTINGS.r;\n      cornerY = SETTINGS.h - 1 - (endHeight * SETTINGS.r);\n      line.graphics.lineTo(cornerX, cornerY);\n    });\n    line.graphics.endStroke();\n\n    this.stage.addChild(line);\n  };\n\n  /**\n   * Add a slice to the view\n   * @param {int} camera - CamerasEnum\n   * @param {int[][]} slice - 2D array representing slice to add\n   * @param {boolean} isDashed - Whether the lines should be dashed or not\n   */\n  _drawSlice = (camera, slice, isDashed = false) => {\n    this.camera = camera;\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const cell = row[x];\n\n        if (cell) {\n          cell.draw2D(camera, this.stage, x, y, isDashed);\n        }\n      }\n    }\n  };\n\n  /**\n   * Draw points that match the size of the current slice\n   * @param {int[][]} slice - 2D array representing slice to add\n   */\n  _drawGridPoints = slice => {\n    for (let y = 0; y < slice.length; y += 1) {\n      const row = slice[y];\n      for (let x = 0; x < row.length; x += 1) {\n        const point = new createjs.Shape();\n        const contextX = (x + 0.5) * SETTINGS.r;\n        const contextY = SETTINGS.h - ((y + 0.5) * SETTINGS.r);\n\n        point.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke - 1).drawRect(contextX, contextY, 2, -2);\n        this.stage.addChild(point);\n      }\n    }\n  };\n\n  /**\n   * Draw a circle at the location\n   * @param {int} x\n   * @param {int} y\n   */\n  drawCircle = (x, y) => {\n    const circle = new createjs.Shape();\n\n    circle.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const cornerX = ((x + 0.5) * SETTINGS.r) + 1;\n    const cornerY = SETTINGS.h - ((y + 0.45) * SETTINGS.r) - 1;\n    circle.graphics.drawCircle(cornerX, cornerY, SETTINGS.r * 0.40);\n\n    this.stage.addChild(circle);\n  };\n\n  animateX = (path, position, speed, callback) => {\n    if (position >= path.length) {\n      callback();\n      return;\n    }\n\n    const p = path[position];\n    const xObj = this.drawX(p.xNoise, p.yNoise);\n    this.update();\n    setTimeout(() => {\n      this.stage.removeChild(xObj);\n      this.animateX(path, position + 1, speed, callback);\n    }, speed);\n  };\n\n  drawX = (x, y) => {\n    const line = new createjs.Shape();\n    line.graphics.beginStroke(SETTINGS.color).setStrokeStyle(SETTINGS.stroke);\n    const offset = 0.2;\n    const cornerX = (x + offset) * SETTINGS.r;\n    const cornerY = SETTINGS.h - ((y + offset) * SETTINGS.r);\n    line.graphics.moveTo(cornerX, cornerY).lineTo(cornerX + ((1 - (2 * offset)) * SETTINGS.r), cornerY - ((1 - (2 * offset)) * SETTINGS.r));\n\n    const cornerX2 = (x + 1 - offset) * SETTINGS.r;\n    const cornerY2 = SETTINGS.h - ((y + offset) * SETTINGS.r);\n    line.graphics.moveTo(cornerX2, cornerY2).lineTo(cornerX2 - ((1 - (2 * offset)) * SETTINGS.r), cornerY2 - ((1 - (2 * offset)) * SETTINGS.r));\n    return this.stage.addChild(line);\n  }\n}\n","import CamerasEnum from '../../api/enums/CamerasEnum';\nimport ActionsEnum from '../../api/enums/ActionsEnum';\nimport ObjectsEnum from '../../api/enums/ObjectsEnum';\nimport SurfacesEnum from '../../api/enums/SurfacesEnum';\n\n/* global SETTINGS */\n\n/** Class to control rotating to different slice angles and elevations and moving through slices */\nexport default class Display2DController {\n  constructor(session, cameraView) {\n    this.session = session;\n\n    this.gridSize = SETTINGS.gridSize;\n    this.xMax = SETTINGS.xMax;\n    this.yMax = SETTINGS.yMax;\n    this.zMax = SETTINGS.zMax;\n\n    this.cameraView = cameraView;\n    this.views = [];\n    this.isBackgroundDashed = true;\n\n    this.north();\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  doAction = (action, clickX, clickY, modifier) => {\n    const modelPosition = this.getRelativePosition(clickX, clickY);\n    // Execute the currently selected action from the light button at the click location\n    switch (action) {\n      case ActionsEnum.STEPOUT:\n        this.previousSlice();\n        break;\n      case ActionsEnum.STEPIN:\n        this.nextSlice();\n        break;\n      case ActionsEnum.ADDCUBE:\n        this.addObject(modelPosition, ObjectsEnum.CUBE);\n        break;\n      case ActionsEnum.REMOVE:\n        this.removeObject(modelPosition);\n        break;\n      case ActionsEnum.ROTATELT:\n        this.rotateLeft();\n        break;\n      case ActionsEnum.ROTATERT:\n        this.rotateRight();\n        break;\n      case ActionsEnum.ADDTREE:\n        this.addObject(modelPosition, ObjectsEnum.TRUNK);\n        break;\n      case ActionsEnum.ADDROOF:\n        const object = this.session.design.getAt(modelPosition);\n        if (object && object.constructor.typeName === 'ROOF') {\n          if (object.direction === 'e') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'n');\n          } else if (object.direction === 'n') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'w');\n          } else if (object.direction === 'w') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 's');\n          } else if (object.direction === 's') {\n            this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n          }\n        } else {\n          this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n        }\n        break;\n      case ActionsEnum.ADD_ROOF_EAST:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'e');\n        break;\n      case ActionsEnum.ADD_ROOF_WEST:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'w');\n        break;\n      case ActionsEnum.ADD_ROOF_NORTH:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 'n');\n        break;\n      case ActionsEnum.ADD_ROOF_SOUTH:\n        this.addObject(modelPosition, ObjectsEnum.ROOF, 's');\n        break;\n      case ActionsEnum.EDITTOPO:\n        this.setTopoHeight(modelPosition);\n        break;\n      case ActionsEnum.NO_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.NONE);\n        break;\n      case ActionsEnum.SOLID_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.SOLID);\n        break;\n      case ActionsEnum.TRANSPARENT_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.TRANS);\n        break;\n      case ActionsEnum.PARTITION_SURFACE:\n        this.setSurface(this.cameraView.camera, modelPosition, modifier, SurfacesEnum.PART);\n        break;\n      default:\n        // nothing\n        break;\n    }\n  };\n\n  /**\n   * Add the object at the normalized position. Remove any object that is there.\n   * @param {object} modelPosition - {x,y,z}\n   */\n  addObject = (modelPosition, object, modifier) => {\n    if (modelPosition) {\n      this.session.design.add(object, modelPosition, modifier);\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Remove the object at the normalized position.\n   * @param {object} modelPosition - {x,y,z}\n   */\n  removeObject = modelPosition => {\n    if (modelPosition) {\n      this.session.design.remove(modelPosition);\n      this.updateViews();\n    }\n  }\n\n  /**\n   */\n  setSurface = (camera, position, side, surface) => {\n    if (position) {\n      this.session.design.setSurface(camera, position, side, surface);\n      this.updateViews();\n    }\n  }\n\n  /** Move the view to the next slice, without exceeding the last slice */\n  nextSlice = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.cameraView.slices.y + 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.cameraView.slices.y - 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.cameraView.slices.x + 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.cameraView.slices.x - 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.cameraView.slices.z - 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.cameraView.slices.z + 1);\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n\n  /** Move the view to the previous slice, without going past 0 */\n  previousSlice = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setSliceYAxis(this.cameraView.slices.y - 1);\n        break;\n      case CamerasEnum.SOUTH:\n        this._setSliceYAxis(this.cameraView.slices.y + 1);\n        break;\n      case CamerasEnum.EAST:\n        this._setSliceXAxis(this.cameraView.slices.x - 1);\n        break;\n      case CamerasEnum.WEST:\n        this._setSliceXAxis(this.cameraView.slices.x + 1);\n        break;\n      case CamerasEnum.TOP:\n        this._setSliceZAxis(this.cameraView.slices.z + 1);\n        break;\n      case CamerasEnum.BOTTOM:\n        this._setSliceZAxis(this.cameraView.slices.z - 1);\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n\n  /** Set the camera view to NORTH and reset the slice to 0 */\n  north = () => this._setCamera('NORTH')\n\n  /** Set the camera view to SOUTH and reset the slice to 0 */\n  south = () => this._setCamera('SOUTH')\n\n  /** Set the camera view to EAST and reset the slice to 0 */\n  east = () => this._setCamera('EAST')\n\n  /** Set the camera view to WEST and reset the slice to 0 */\n  west = () => this._setCamera('WEST')\n\n  /** Set the camera view to TOP and reset the slice to 0 */\n  top = () => this._setCamera('TOP')\n\n  /** Set the camera view to BOTTOM and reset the slice to 0 */\n  bottom = () => this._setCamera('BOTTOM')\n\n  rotateLeft = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  rotateRight = () => {\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        this._setCamera('WEST');\n        break;\n      case CamerasEnum.WEST:\n        this._setCamera('SOUTH');\n        break;\n      case CamerasEnum.SOUTH:\n        this._setCamera('EAST');\n        break;\n      case CamerasEnum.EAST:\n        this._setCamera('NORTH');\n        break;\n      default:\n        // do nothing for top and bottom\n    }\n  }\n\n  /**\n   * Set the slice in view in the Z axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceZAxis = slice => {\n    if (slice >= 0 && slice < this.zMax) {\n      this.cameraView.slices.z = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the X axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceXAxis = slice => {\n    if (slice >= 0 && slice < this.xMax) {\n      this.cameraView.slices.x = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the slice in view in the Y axis, only runs if a legal slice\n   * @param {int} slice - number of slice\n   */\n  _setSliceYAxis = slice => {\n    if (slice >= 0 && slice < this.yMax) {\n      this.cameraView.slices.y = slice;\n      this.updateViews();\n    }\n  }\n\n  /**\n   * Set the camera view to the given view and reset the slice to 0\n   * @param {String} camera - CamerasEnum name\n   */\n  _setCamera = camera => {\n    this.cameraView.camera = CamerasEnum[camera];\n\n    let minX = SETTINGS.xMax - 1;\n    let minY = SETTINGS.yMax - 1;\n    let minZ = SETTINGS.zMax - 1;\n    let maxX = 0;\n    let maxY = 0;\n    let maxZ = 0;\n\n    // set camera to first object on update\n    const objects = this.session.design.getObjects();\n    const highestNonZeroPoint = this.session.topo.getHighestNonZeroPoint();\n    if (objects.length > 0) {\n      objects.forEach(object => {\n        const { x, y, z } = object.position;\n        if (x < minX) {\n          minX = x;\n        }\n        if (x > maxX) {\n          maxX = x;\n        }\n        if (y < minY) {\n          minY = y;\n        }\n        if (y > maxY) {\n          maxY = y;\n        }\n        if (z < minZ) {\n          minZ = z;\n        }\n        if (z > maxZ) {\n          maxZ = z;\n        }\n      });\n\n      switch (this.cameraView.camera) {\n        case CamerasEnum.NORTH:\n          this.cameraView.slices.y = minY;\n          break;\n        case CamerasEnum.SOUTH:\n          this.cameraView.slices.y = maxY;\n          break;\n        case CamerasEnum.EAST:\n          this.cameraView.slices.x = minX;\n          break;\n        case CamerasEnum.WEST:\n          this.cameraView.slices.x = maxX;\n          break;\n        case CamerasEnum.TOP:\n          this.cameraView.slices.z = maxZ;\n          break;\n        case CamerasEnum.BOTTOM:\n          this.cameraView.slices.z = minZ;\n          break;\n        default:\n          throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n      }\n    } else if (highestNonZeroPoint) {\n      const { x, y, z } = highestNonZeroPoint;\n      // use default on new session that is empty\n      switch (this.cameraView.camera) {\n        case CamerasEnum.NORTH:\n          this.cameraView.slices.y = y;\n          break;\n        case CamerasEnum.SOUTH:\n          this.cameraView.slices.y = y;\n          break;\n        case CamerasEnum.EAST:\n          this.cameraView.slices.x = x;\n          break;\n        case CamerasEnum.WEST:\n          this.cameraView.slices.x = x;\n          break;\n        case CamerasEnum.TOP:\n          this.cameraView.slices.z = z;\n          break;\n        case CamerasEnum.BOTTOM:\n          this.cameraView.slices.z = z;\n          break;\n        default:\n          throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n      }\n    } else {\n      // use default on new session that is empty\n    }\n\n    this.updateViews();\n  }\n\n  /** Draw the current view from the current camera angle and sliceIndex */\n  updateViews = () => {\n    let sliceIndex;\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n        sliceIndex = this.cameraView.slices.y;\n        break;\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        sliceIndex = this.cameraView.slices.x;\n        break;\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        sliceIndex = this.cameraView.slices.z;\n        break;\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n\n    this.views.forEach(v => v.draw(this.cameraView.camera, sliceIndex, this.isBackgroundDashed));\n  }\n\n  /**\n   * Returns a 3D vector of the model position based on the normalized click\n   * @param {float} clickX - Normalized x between 0 and 1\n   * @param {float} clickY - Normalized y between 0 and 1\n   */\n  getRelativePosition = (x, y) => {\n    // Check that it is a legal 3D index\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n      case CamerasEnum.SOUTH:\n      case CamerasEnum.EAST:\n      case CamerasEnum.WEST:\n        if (y >= this.zMax) {\n          return null;\n        }\n        break;\n      default:\n        // do nothing\n    }\n\n    // translate this position along with the current slice to the 3D model indeces\n    switch (this.cameraView.camera) {\n      case CamerasEnum.NORTH:\n        return { x, y: this.cameraView.slices.y, z: y };\n      case CamerasEnum.SOUTH:\n        return { x: this.gridSize - 1 - x, y: this.cameraView.slices.y, z: y };\n      case CamerasEnum.EAST:\n        return { x: this.cameraView.slices.x, y: this.gridSize - 1 - x, z: y };\n      case CamerasEnum.WEST:\n        return { x: this.cameraView.slices.x, y: x, z: y };\n      case CamerasEnum.BOTTOM:\n        return { x, y: this.gridSize - 1 - y, z: this.cameraView.slices.z };\n      case CamerasEnum.TOP:\n        return { x, y, z: this.cameraView.slices.z };\n      default:\n        throw new Error(`camera ${this.cameraView.camera} is not recognized!`);\n    }\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/Display2DView';\nimport Display2DController from '../js/Display2DController';\nimport ActionsEnum from '../../api/enums/ActionsEnum';\nimport { getGridPointInModelSpace } from '../../helpers/Helpers';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for the 2D slice views */\nexport default class DrawPage extends React.Component {\n  static propTypes = {\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    cameraView: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    registerActionListener: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n    unregisterActionListener: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    controller: null\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('draw');\n    this.canvas.addEventListener('mousedown', this.handleClick);\n\n    const { registerActionListener } = this.props;\n    registerActionListener(this.onSelectAction);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { action, session } = this.props;\n    const { action: prevAction } = prevProps;\n    if (action !== prevAction) {\n      // Add instructions on switch action\n      switch (action) {\n        case ActionsEnum.ADDCUBE:\n          session.monitor.setMessages(['Click to add a cube.']);\n          break;\n        case ActionsEnum.ADDTREE:\n          session.monitor.setMessages(['Click to add a tree.']);\n          break;\n        case ActionsEnum.ADDROOF:\n          session.monitor.setMessages(['Click to add a roof.']);\n          break;\n        case ActionsEnum.REMOVE:\n          session.monitor.setMessages(['Click to remove an object.']);\n          break;\n        default:\n          session.monitor.setMessages([]);\n          break;\n      }\n    }\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n    const { unregisterActionListener } = this.props;\n    unregisterActionListener(this.onSelectAction);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session, cameraView } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    // Create controller and 2D slice view\n    const controller = new Display2DController(session, cameraView);\n    this.view = new Display2DView(this.canvas, session);\n    controller.addListener(this.view);\n    // Trigger initial render\n    controller.updateViews();\n\n    this.setState({\n      controller\n    });\n  }\n\n  onSelectAction = action => {\n    const { controller } = this.state;\n    switch (action) {\n      case ActionsEnum.STEPIN:\n        controller.nextSlice();\n        break;\n      case ActionsEnum.STEPOUT:\n        controller.previousSlice();\n        break;\n      case ActionsEnum.ROTATELT:\n        controller.rotateLeft();\n        break;\n      case ActionsEnum.ROTATERT:\n        controller.rotateRight();\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick = event => {\n    const { controller } = this.state;\n    const { action } = this.props;\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n    controller.doAction(action, point.x, point.y);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n\n    return (\n      <div>\n        <canvas id=\"draw\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\n/* global SETTINGS */\n\nconst grayValues = [0, 60, 110, 150, 180, 205, 225, 240];\n\n/** Class responsible for rendering a 2D slice */\nexport default class EditTopoRenderer2D {\n  constructor(stage) {\n    this.stage = stage;\n  }\n\n  /**\n   * Add a square at x,y with number representing height\n   */\n  drawSquare = (x, y, num) => {\n    const shape = new createjs.Shape();\n    shape.graphics.beginStroke(SETTINGS.color).setStrokeStyle(1);\n\n    const sx = (x * SETTINGS.r) + 1;\n    const dx = SETTINGS.r;\n    const sy = SETTINGS.h - (y * SETTINGS.r) - 1;\n    const dy = -SETTINGS.r;\n\n    const grayValue = grayValues[num];\n    const fill = `rgba(${grayValue}, ${grayValue}, ${grayValue}, 0.7)`;\n    shape.graphics.beginFill(fill);\n    shape.graphics.drawRect(sx, sy, dx, dy);\n    shape.graphics.endFill();\n    this.stage.addChild(shape);\n\n    const text = new createjs.Text(num, 'bold 24px Andale Mono', SETTINGS.color);\n    text.x = sx + (dx / 2) - 7;\n    text.y = sy + (dy / 2) - 11;\n    this.stage.addChild(text);\n  }\n}\n","import { createjs } from '@createjs/easeljs';\n\nimport EditTopoRenderer2D from './EditTopoRenderer2D';\n\n/* global SETTINGS */\n\n/** Class responsible for rendering a 2D slice of topography */\nexport default class TopoView {\n  constructor(canvas, session) {\n    this.session = session;\n    this.stage = new createjs.Stage(canvas);\n\n    this.renderer = new EditTopoRenderer2D(this.stage);\n  }\n\n  /**\n   * Draw the given sliceIndex for the camera angle to the screen\n   * @param {int} camera - CamerasEnum\n   * @param {int} sliceIndex - Index of slice of model from given camera view to draw\n   * @param {int} isBackgroundDashed - Draw objects in background slices as dashed lines\n   */\n  draw = () => {\n    // Clear the screen\n    this.stage.removeAllChildren();\n\n    for (let y = 0; y < SETTINGS.yMax; y += 1) {\n      for (let x = 0; x < SETTINGS.xMax; x += 1) {\n        this.renderer.drawSquare(x, y, this.session.topo.getAt({ x, y }));\n      }\n    }\n\n    // Render to the screen\n    this.stage.update();\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport TopoView from '../js/TopoView';\nimport { getGridPointInModelSpace } from '../../helpers/Helpers';\nimport ActionsEnum from '../../api/enums/ActionsEnum';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for t */\nexport default class TopoPage extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('display');\n    this.canvas.addEventListener('mousedown', this.handleClick);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { action, session } = this.props;\n    const { action: prevAction } = prevProps;\n    if (action !== prevAction) {\n      // Add instructions on switch action\n      switch (action) {\n        case ActionsEnum.INCREASE_HEIGHT:\n          session.monitor.setMessages(['Click the grid to increase elevation in the topography.']);\n          break;\n        case ActionsEnum.DECREASE_HEIGHT:\n          session.monitor.setMessages(['Click the grid to decrease elevation in the topography.']);\n          break;\n        default:\n          session.monitor.setMessages([]);\n          break;\n      }\n    }\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    this.view = new TopoView(this.canvas, session);\n    // Trigger initial render\n    this.view.draw();\n  }\n\n  handleClick = event => {\n    const { session, action } = this.props;\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n\n    if (action === ActionsEnum.DECREASE_HEIGHT) {\n      session.topo.decrease(point);\n    } else {\n      session.topo.increase(point);\n    }\n    this.view.draw();\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"display\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/Display2DView';\nimport Display2DController from '../js/Display2DController';\nimport { getClosestEdgeInModelSpace } from '../../helpers/Helpers';\nimport ActionsEnum from '../../api/enums/ActionsEnum';\n\n/* global document */\n/* global SETTINGS */\n\nexport default class SurfacePage extends React.Component {\n  static propTypes = {\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    cameraView: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    registerActionListener: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n    unregisterActionListener: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    controller: null\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('surface');\n    if (SETTINGS.enableHotKeys) {\n      document.addEventListener('keydown', this.handleKeyDown);\n    }\n    this.canvas.addEventListener('click', this.handleClick);\n\n    const { registerActionListener } = this.props;\n    registerActionListener(this.onSelectAction);\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { action, session } = this.props;\n    const { action: prevAction } = prevProps;\n    if (action !== prevAction) {\n      // Add instructions on switch action\n      switch (action) {\n        case ActionsEnum.SOLID_SURFACE:\n          session.monitor.setMessages(['Click to add surfaces on cubes to close off access.']);\n          break;\n        case ActionsEnum.NO_SURFACE:\n          session.monitor.setMessages(['Click to remove surfaces on cubes to add access.']);\n          break;\n        default:\n          break;\n      }\n    }\n\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    if (SETTINGS.enableHotKeys) {\n      document.removeEventListener('keydown', this.handleKeyDown);\n    }\n    this.canvas.removeEventListener('click', this.handleClick);\n    const { unregisterActionListener } = this.props;\n    unregisterActionListener(this.onSelectAction);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session, cameraView } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    // Create controller and 2D slice view\n    const controller = new Display2DController(session, cameraView);\n    this.view = new Display2DView(this.canvas, session);\n    controller.addListener(this.view);\n    // Trigger initial render\n    controller.updateViews();\n\n    this.setState({\n      controller\n    });\n  }\n\n  /** Add some hotkeys to make testing easier */\n  handleKeyDown = event => {\n    const { controller } = this.state;\n\n    switch (event.keyCode) {\n      case 87: // w\n        controller.south();\n        break;\n      case 88: // x\n        controller.north();\n        break;\n      case 65: // a\n        controller.east();\n        break;\n      case 68: // d\n        controller.west();\n        break;\n      case 83: // s\n        controller.top();\n        break;\n      case 38: // up arrow\n        controller.nextSlice();\n        break;\n      case 40: // down arrow\n        controller.previousSlice();\n        break;\n      default:\n        break;\n    }\n  }\n\n  onSelectAction = action => {\n    const { controller } = this.state;\n    switch (action) {\n      case ActionsEnum.STEPIN:\n        controller.nextSlice();\n        break;\n      case ActionsEnum.STEPOUT:\n        controller.previousSlice();\n        break;\n      case ActionsEnum.ROTATELT:\n        controller.rotateLeft();\n        break;\n      case ActionsEnum.ROTATERT:\n        controller.rotateRight();\n        break;\n      default:\n        break;\n    }\n  }\n\n  handleClick = event => {\n    const { controller } = this.state;\n    const { action } = this.props;\n\n    const edge = getClosestEdgeInModelSpace(event.offsetX, event.offsetY);\n    if (!edge) {\n      return;\n    }\n\n    const { x, y, side } = edge;\n    controller.doAction(action, x, y, side);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"surface\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","/* global PF */\n/* global SETTINGS */\n\nexport const stepsPer = 10;\n\n// Calculate the 2D path along the ground that avoids objects, but can pass through walls (except on slopes)\nfunction getPathWithWallOpenings(session, start, end) {\n  // Make grid square 3x3 so that openings can exist in walls\n  const grid = new PF.Grid(SETTINGS.xMax * 3, SETTINGS.yMax * 3);\n\n  const topoCorners = session.topo.getCorners();\n\n  // get all the objects at ground level\n  for (let y = 0; y < SETTINGS.yMax; y += 1) {\n    for (let x = 0; x < SETTINGS.xMax; x += 1) {\n      const adjX = Math.floor(x);\n      const adjY = Math.floor(y);\n      const z = session.topo.getAt({ x: adjX, y: adjY });\n\n      const cornerZ = Math.max(topoCorners[y][x], topoCorners[y][x + 1], topoCorners[y + 1][x], topoCorners[y + 1][x + 1]);\n      if (z !== cornerZ) {\n        // If you are on slope, check for all objects on slope\n        let isObjectInWay = false;\n        for (let h = z; h < cornerZ + 1; h += 1) {\n          const object = session.design.getAt({ x: adjX, y: adjY, z: h });\n          if (object) {\n            isObjectInWay = true;\n          }\n        }\n\n        if (isObjectInWay) {\n          // fill in all squares\n          grid.setWalkableAt(x * 3, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n          grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n          grid.setWalkableAt((x * 3) + 1, y * 3, false);\n        }\n      } else {\n        // on flat ground, just check current object, allowing to pass through walls of cube\n        const object = session.design.getAt({ x: adjX, y: adjY, z });\n        if (object) {\n          // fill in corners\n          grid.setWalkableAt(x * 3, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, y * 3, false);\n          grid.setWalkableAt((x * 3) + 2, (y * 3) + 2, false);\n          grid.setWalkableAt(x * 3, (y * 3) + 2, false);\n\n          // if cube check walls\n          if (object.constructor.typeName === 'CUBE') {\n            if (!object.hasAccessInDirection('w')) {\n              grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n            }\n            if (!object.hasAccessInDirection('e')) {\n              grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n            }\n            if (!object.hasAccessInDirection('n')) {\n              grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n            }\n            if (!object.hasAccessInDirection('s')) {\n              grid.setWalkableAt((x * 3) + 1, y * 3, false);\n            }\n          } else {\n            // else, fill in walls\n            grid.setWalkableAt(x * 3, (y * 3) + 1, false);\n            grid.setWalkableAt((x * 3) + 2, (y * 3) + 1, false);\n            grid.setWalkableAt((x * 3) + 1, (y * 3) + 2, false);\n            grid.setWalkableAt((x * 3) + 1, y * 3, false);\n          }\n        }\n      }\n    }\n  }\n\n  const finder = new PF.ThetaStarFinder({\n    weight: 1.1,\n  });\n\n  const path = finder.findPath((start.x * 3) + 1, (start.y * 3) + 1, (end.x * 3) + 1, (end.y * 3) + 1, grid);\n  const adjPath = path.map(pt => ({ x: Math.floor(pt[0] / 3), y: Math.floor(pt[1] / 3) }));\n  return adjPath;\n}\n\nfunction getDist(start, end) {\n  return Math.sqrt(((start.x - end.x) ** 2) + ((start.y - end.y) ** 2));\n}\n\n// Given a path, interpolate between the points with a given number of steps per point\nfunction smoothPath(path, stepsPer) {\n  if (stepsPer > 1 && path.length < 2) {\n    return path;\n  }\n\n  const smoothedPath = [];\n  for (let i = 1; i < path.length; i += 1) {\n    const start = path[i - 1];\n    const end = path[i];\n\n    const steps = getDist(start, end) * stepsPer;\n\n    const dx = (end.x - start.x) / steps;\n    const dy = (end.y - start.y) / steps;\n    for (let s = 0; s < steps; s += 1) {\n      const x = start.x + (s * dx);\n      const y = start.y + (s * dy);\n\n      smoothedPath.push({ x, y });\n    }\n  }\n  smoothedPath.push(path[path.length - 1]);\n\n  return smoothedPath;\n}\n\n// Add a random xNoise and yNoise within the given range in place to the path\nfunction addNoise(path, range) {\n  for (let i = 1; i < path.length - 1; i += 1) {\n    const xNoise = (Math.random() * 2 * range) - range;\n    const yNoise = (Math.random() * 2 * range) - range;\n    const p = path[i];\n    p.xNoise = p.x + xNoise;\n    p.yNoise = p.y + yNoise;\n  }\n}\n\n// Add raw 3D values (unsmoothed)\nfunction makePath3D(session, path) {\n  const heights = session.topo.interpolate(path);\n  const path3D = path.map((p, i) => ({ ...p, z: heights[i] }));\n  return path3D;\n}\n\n// Given a start and end point, navigate through the design along the ground\n// The path goes around objects, but can pass through walls (except on hills)\nexport default function calculatePath(session, start, end) {\n  const path = getPathWithWallOpenings(session, start, end);\n\n  // smooth path (interpolate in xy plane)\n  const smoothedPath = smoothPath(path, stepsPer);\n\n  // add heights\n  const path3D = makePath3D(session, smoothedPath);\n\n  // Add noise (except for start and last spot)\n  const range = 0.1;\n  addNoise(path3D, range);\n\n  return path3D;\n}\n","import { stepsPer } from '../../helpers/CalculatePath';\n\n/** Class for controlling a 3D view mimicking a walk through of the model */\nexport default class CameraPathController {\n  constructor(session, onWalkthroughEnd) {\n    this.session = session;\n    this.views = [];\n    this.onWalkthroughEnd = onWalkthroughEnd;\n  }\n\n  addListener = view => this.views.push(view)\n\n  removeListener = toRemove => this.views.filter(view => view !== toRemove)\n\n  run = path => {\n    this.path = path;\n    this.i = 0;\n\n    // Start animation of path, after a delay to allow the page to render\n    setTimeout(() => this.animateCameraPath(), 500);\n  }\n\n  /** Every X ms update the camera position of the views to the next in the path */\n  animateCameraPath = () => {\n    if (this.i < this.path.length - 2) {\n      this.i += 1;\n      const p = this.path[this.i];\n      const direction = this.path[this.path.length - 1];\n      this.views.forEach(v => v.setCameraPosition(p, direction));\n      setTimeout(() => this.animateCameraPath(), 300 / stepsPer);\n    } else {\n      this.onWalkthroughEnd();\n    }\n  }\n}\n","import * as THREE from 'three';\nimport { getEmpty2DArray } from '../../helpers/Helpers';\nimport CamerasEnum from '../../api/enums/CamerasEnum';\n\n/* global SETTINGS */\n\nexport default class TopoRenderer3D {\n  draw = (scene, corners, cameraView) => {\n    if (!corners) {\n      return;\n    }\n\n    // Add code for debugger to mark current camera view\n    if (cameraView) {\n      const pointLists = this._getArrows(cameraView);\n      this._addArrows(scene, pointLists);\n    }\n    const isDebug = !!cameraView;\n\n    // calculate the corners of all the topography and connect them\n    const adjustedCorners = getEmpty2DArray(SETTINGS.xMax + 1, SETTINGS.yMax + 1, null);\n    for (let y = 0; y <= SETTINGS.yMax; y += 1) {\n      for (let x = 0; x <= SETTINGS.xMax; x += 1) {\n        const cornerPoint = { x, y, z: corners[y][x] - 0.5 };\n        const adjustedCornerPoint = this._getAdjustedPoint(cornerPoint);\n        // Drop the height by half a block\n        adjustedCornerPoint.z -= 0.5;\n        adjustedCorners[y][x] = adjustedCornerPoint;\n\n        // Connect down and right\n        if (y > 0) {\n          const downPoint = adjustedCorners[y - 1][x];\n          this._addLine(scene, adjustedCornerPoint, downPoint, isDebug);\n        }\n        if (x > 0) {\n          const leftPoint = adjustedCorners[y][x - 1];\n          this._addLine(scene, adjustedCornerPoint, leftPoint, isDebug);\n        }\n      }\n    }\n  }\n\n  _addArrows = (scene, pointLists) => {\n    pointLists.forEach(points => {\n      const geometry = new THREE.Geometry();\n      points.forEach(p => {\n        const adjP = this._getAdjustedPoint(p);\n        const { x, y, z } = adjP;\n        geometry.vertices.push(new THREE.Vector3(x, y, z));\n      });\n      const arrow = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0x00EE00 }));\n      scene.add(arrow);\n    });\n  }\n\n  _getArrows = cameraView => {\n    let { x, y, z } = cameraView.slices;\n    let pointLists;\n\n    switch (cameraView.camera) {\n      case CamerasEnum.TOP:\n      case CamerasEnum.BOTTOM:\n        pointLists = [\n          [{ x: -1, y: 0, z }, { x: 0, y: 0, z }, { x: 0, y: -1, z }, { x: -1, y: 0, z }],\n          [{ x: SETTINGS.xMax + 1, y: SETTINGS.yMax, z }, { x: SETTINGS.xMax, y: SETTINGS.yMax, z }, { x: SETTINGS.xMax, y: SETTINGS.yMax + 1, z }, { x: SETTINGS.xMax + 1, y: SETTINGS.yMax, z }],\n          [{ x: SETTINGS.xMax + 1, y: 0, z }, { x: SETTINGS.xMax, y: 0, z }, { x: SETTINGS.xMax, y: -1, z }, { x: SETTINGS.xMax + 1, y: 0, z }],\n          [{ x: -1, y: SETTINGS.yMax, z }, { x: 0, y: SETTINGS.yMax, z }, { x: 0, y: SETTINGS.yMax + 1, z }, { x: -1, y: SETTINGS.yMax, z }],\n        ];\n        break;\n      case CamerasEnum.WEST:\n        x -= 0.5;\n        pointLists = [\n          [{ x: x + 1, y: -1, z: -0.5 }, { x, y: -0.5, z: -0.5 }, { x: x + 1, y: 0, z: -0.5 }, { x: x + 1, y: -1, z: -0.5 }],\n          [{ x: x + 1, y: SETTINGS.yMax + 1, z: -0.5 }, { x, y: SETTINGS.yMax + 0.5, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax + 1, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.EAST:\n        x += 0.5;\n        pointLists = [\n          [{ x, y: -1, z: -0.5 }, { x: x + 1, y: -0.5, z: -0.5 }, { x, y: 0, z: -0.5 }, { x, y: -1, z: -0.5 }],\n          [{ x, y: SETTINGS.yMax + 1, z: -0.5 }, { x: x + 1, y: SETTINGS.yMax + 0.5, z: -0.5 }, { x, y: SETTINGS.yMax, z: -0.5 }, { x, y: SETTINGS.yMax + 1, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.NORTH:\n        y += 0.5;\n        pointLists = [\n          [{ x: -1, y, z: -0.5 }, { x: -0.5, y: y + 1, z: -0.5 }, { x: 0, y, z: -0.5 }, { x: -1, y, z: -0.5 }],\n          [{ x: SETTINGS.xMax + 1, y, z: -0.5 }, { x: SETTINGS.xMax + 0.5, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax, y, z: -0.5 }, { x: SETTINGS.xMax + 1, y, z: -0.5 }]\n        ];\n        break;\n      case CamerasEnum.SOUTH:\n        y -= 0.5;\n        pointLists = [\n          [{ x: -1, y: y + 1, z: -0.5 }, { x: -0.5, y, z: -0.5 }, { x: 0, y: y + 1, z: -0.5 }, { x: -1, y: y + 1, z: -0.5 }],\n          [{ x: SETTINGS.xMax + 1, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax + 0.5, y, z: -0.5 }, { x: SETTINGS.xMax, y: y + 1, z: -0.5 }, { x: SETTINGS.xMax + 1, y: y + 1, z: -0.5 }]\n        ];\n        break;\n      default:\n        pointLists = [];\n        break;\n    }\n\n    return pointLists;\n  }\n\n  _addLine = (scene, p0, p1, isDebug) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(p0.x, p0.y, p0.z));\n    geometry.vertices.push(new THREE.Vector3(p1.x, p1.y, p1.z));\n\n    let line;\n    if (isDebug) {\n      line = new THREE.Line(geometry, new THREE.LineBasicMaterial({ color: 0x666666 }));\n    } else {\n      line = new THREE.Line(geometry, SETTINGS.material);\n    }\n\n    scene.add(line);\n  }\n\n  /**\n   * Returns the point adjusted for the 3D world\n   * @param {object} p - A 3D point\n   */\n  _getAdjustedPoint = p => {\n    const { x, y, z } = p;\n    return { x: x * SETTINGS.r, y: z * SETTINGS.r + (SETTINGS.r / 2), z: -y * SETTINGS.r };\n  }\n}\n","import * as THREE from 'three';\nimport SurfacesEnum from '../../api/enums/SurfacesEnum';\nimport Cube from '../../api/Cube';\nimport { Trunk, Foliage } from '../../api/Tree';\nimport Roof from '../../api/Roof';\n\n/* global SETTINGS */\n\nclass DesignRenderer3D {\n  draw = (scene, objects) => {\n    if (!objects) {\n      return;\n    }\n\n    for (let z = 0; z < SETTINGS.zMax; z += 1) {\n      for (let y = 0; y < SETTINGS.yMax; y += 1) {\n        for (let x = 0; x < SETTINGS.xMax; x += 1) {\n          const object = objects[z][y][x];\n          const position = { x, y, z };\n          if (object) {\n            switch (object.constructor) {\n              case Cube:\n                this.drawCube(scene, object, position);\n                break;\n              case Roof:\n                this.drawRoof(scene, object, position);\n                break;\n              case Foliage:\n                this.drawFoliage(scene, position);\n                break;\n              case Trunk:\n                this.drawTrunk(scene, position);\n                break;\n              default:\n                break;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  drawCube = (scene, cube, position) => {\n    const lines = this._getCubeFaces(cube);\n\n    const positionAdj = { x: position.x * SETTINGS.r, y: position.z * SETTINGS.r, z: -position.y * SETTINGS.r };\n\n    lines.position.x = positionAdj.x;\n    lines.position.y = positionAdj.y;\n    lines.position.z = positionAdj.z;\n    scene.add(lines);\n  };\n\n  _getCubeFaces = cube => {\n    const geometry = new THREE.Geometry();\n\n    if (cube.surfaces.t === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // top face\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n      );\n    }\n    if (cube.surfaces.b === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // bottom face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n    if (cube.surfaces.n === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // north face\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n      );\n    }\n    if (cube.surfaces.s === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // south face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n    if (cube.surfaces.e === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // east face\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n      );\n    }\n    if (cube.surfaces.w === SurfacesEnum.SOLID) {\n      geometry.vertices.push(\n        // west face\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, SETTINGS.r, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, -SETTINGS.r),\n        new THREE.Vector3(0, 0, 0),\n      );\n    }\n\n    const lines = new THREE.LineSegments(geometry, SETTINGS.material);\n\n    return lines;\n  }\n\n  drawRoof = (scene, roof, position) => {\n    const lines = this._getRoof(roof);\n\n    const positionAdj = { x: position.x * SETTINGS.r, y: position.z * SETTINGS.r, z: -position.y * SETTINGS.r };\n\n    switch (roof.direction) {\n      case 'n':\n        break;\n      case 'e':\n        lines.rotation.y = Math.PI * 1.5;\n        positionAdj.z -= SETTINGS.r;\n        break;\n      case 's':\n        lines.rotation.y = Math.PI;\n        positionAdj.x += SETTINGS.r;\n        positionAdj.z -= SETTINGS.r;\n        break;\n      case 'w':\n        lines.rotation.y = Math.PI * 0.5;\n        positionAdj.x += SETTINGS.r;\n        break;\n      default:\n        return;\n    }\n    lines.position.x = positionAdj.x;\n    lines.position.y = positionAdj.y;\n    lines.position.z = positionAdj.z;\n    scene.add(lines);\n  };\n\n  _getRoof = roof => {\n    const geometry = new THREE.Geometry();\n\n    if (roof.hasSideSurface) {\n      geometry.vertices.push(\n        // tall face bottom\n        new THREE.Vector3(0, SETTINGS.r, 0),\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(0, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, 0, 0),\n        new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      );\n    }\n\n    geometry.vertices.push(\n      // slanted face\n      new THREE.Vector3(0, 0, -SETTINGS.r),\n      new THREE.Vector3(0, SETTINGS.r, 0),\n      new THREE.Vector3(0, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, SETTINGS.r, 0),\n      new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n      new THREE.Vector3(SETTINGS.r, 0, -SETTINGS.r),\n      new THREE.Vector3(0, 0, -SETTINGS.r),\n    );\n\n    const lines = new THREE.LineSegments(geometry, SETTINGS.material);\n\n    return lines;\n  }\n\n  drawFoliage = (scene, center) => {\n    const { x, y, z } = center;\n    const geometry = new THREE.SphereGeometry(SETTINGS.r / 2, 5, 5);\n    const wireframe = new THREE.EdgesGeometry(geometry);\n    const lines = new THREE.LineSegments(wireframe, SETTINGS.material);\n    const position = { x: x * SETTINGS.r, y: z * SETTINGS.r, z: -y * SETTINGS.r };\n    lines.position.x = position.x + (SETTINGS.r / 2);\n    lines.position.y = position.y + (SETTINGS.r / 2);\n    lines.position.z = position.z - (SETTINGS.r / 2);\n    scene.add(lines);\n  };\n\n  drawTrunk = (scene, center) => {\n    const { x, y, z } = center;\n    const position = { x: (x + 0.5) * SETTINGS.r, y: z * SETTINGS.r, z: (-y - 0.5) * SETTINGS.r };\n    const position2 = { x: position.x, y: position.y + SETTINGS.r, z: position.z };\n    this._addLine(scene, position, position2);\n  };\n\n  _addLine = (scene, p0, p1) => {\n    const geometry = new THREE.Geometry();\n    geometry.vertices.push(new THREE.Vector3(p0.x, p0.y, p0.z));\n    geometry.vertices.push(new THREE.Vector3(p1.x, p1.y, p1.z));\n    const line = new THREE.Line(geometry, SETTINGS.material);\n    scene.add(line);\n  }\n}\n\nexport default DesignRenderer3D;\n","import * as THREE from 'three';\n\nimport TopoRenderer3D from './TopoRenderer3D';\nimport DesignRenderer3D from './DesignRenderer3D';\n\n/* global SETTINGS */\n\n/** Class responsible for drawing a 3D view of the model */\nexport default class CameraPathView {\n  constructor(container, session, cameraView, fov = 75) {\n    this.container = container;\n    this.target = null;\n    this.session = session;\n\n    // Set to true once the controller gives it a camera position\n    this.hasPosition = false;\n\n    // Setup Three.js scene, camera, and renderer\n    this.scene = new THREE.Scene();\n    this.scene.background = new THREE.Color(0x000000);\n    this.camera = new THREE.PerspectiveCamera(fov, SETTINGS.w / SETTINGS.h, 1, 8000);\n    this.scene.add(this.camera);\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setPixelRatio(0.6);\n    this.renderer.setSize(SETTINGS.w, SETTINGS.h);\n    this.container.appendChild(this.renderer.domElement);\n    this.cameraView = cameraView;\n\n    this.draw();\n  }\n\n  draw = () => {\n    while (this.scene.children.length > 0) {\n      this.scene.remove(this.scene.children[0]);\n    }\n\n    this.designRenderer3D = new DesignRenderer3D();\n    const design = this.session.design.getAll();\n    this.designRenderer3D.draw(this.scene, design);\n\n    this.topoRenderer3D = new TopoRenderer3D();\n    const topoCorners = this.session.topo.getCorners();\n    this.topoRenderer3D.draw(this.scene, topoCorners, this.cameraView);\n  }\n\n  render = () => {\n    this.draw();\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  /**\n   * Sets the camera position according to the given point\n   * @param {object} p - A 3D point\n   * @param {object} nextP - The next 3D point for direction\n   */\n  setCameraPosition = (p, nextP) => {\n    this.hasPosition = true;\n    const { x, y, z } = this.getAdjustedPoint(p);\n    this.camera.position.x = x;\n    this.camera.position.y = y;\n    this.camera.position.z = z;\n\n    // Point camera at next point\n    const np = this.getAdjustedPoint(nextP);\n    this.camera.lookAt(np.x, np.y, np.z);\n    this.render();\n  }\n\n  /**\n   * Returns the point adjusted for the 3D world\n   * @param {object} p - A 3D point\n   */\n  getAdjustedPoint = p => {\n    const { x, y, z } = p;\n    return { x: x * SETTINGS.r + (SETTINGS.r / 2), y: z * SETTINGS.r + (SETTINGS.r * 0.75), z: -y * SETTINGS.r - (SETTINGS.r / 2) };\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CameraPathController from '../js/CameraPathController';\nimport CameraPathView from '../js/CameraPathView';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for the 3D fly throughs of the model */\nexport default class CameraPath extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    path: PropTypes.array.isRequired, // eslint-disable-line react/forbid-prop-types\n    onWalkthroughEnd: PropTypes.func.isRequired // eslint-disable-line react/forbid-prop-types\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.container = document.getElementById('display3D');\n\n    // If the model had already been created, immediately wire\n    this.wire();\n\n    const { path } = this.props;\n    this.run(path);\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n\n    const { path } = this.props;\n    this.run(path);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the DOM.\n   */\n  wire = () => {\n    const { session, path, onWalkthroughEnd } = this.props;\n    if (this.isWired || !session || !path) {\n      return;\n    }\n    this.isWired = true;\n\n    this.controller = new CameraPathController(session, onWalkthroughEnd);\n    this.view = new CameraPathView(this.container, session);\n    this.controller.addListener(this.view);\n  }\n\n  run = path => {\n    this.controller.run(path);\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n\n    return (\n      <div id=\"display3D\" style={{ width: w, height: h }} />\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Display2DView from '../js/Display2DView';\nimport { getGridPointInModelSpace } from '../../helpers/Helpers';\nimport calculatePath, { stepsPer } from '../../helpers/CalculatePath';\n\n/* global document */\n/* global SETTINGS */\n\n/** Class for t */\nexport default class ChoosePath extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    onSelectPath: PropTypes.func.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    hasStart: false,\n  }\n\n  componentDidMount() {\n    this.isWired = false;\n\n    this.canvas = document.getElementById('display');\n    this.canvas.addEventListener('mousedown', this.handleClick);\n    this.start = null;\n    this.end = null;\n\n    // If the model had already been created, immediately wire\n    this.wire();\n  }\n\n  componentDidUpdate() {\n    // When the model is created, we need to wire it\n    this.wire();\n  }\n\n  componentWillUnmount() {\n    this.canvas.removeEventListener('mousedown', this.handleClick);\n  }\n\n  /**\n   * This should be called one time once the HTML element and the model are ready.\n   * It sets up the rendering to the canvas.\n   */\n  wire = () => {\n    const { session } = this.props;\n    // Only wire once, and only do it once the model is ready\n    if (this.isWired || !session) {\n      return;\n    }\n    this.isWired = true;\n\n    this.view = new Display2DView(this.canvas, session);\n    // Trigger initial render\n    this.view.drawTopCompressedView();\n  }\n\n  handleClick = event => {\n    if (this.isBusy) { // prevent multiple clicks from triggering multiple times\n      return;\n    }\n\n    const { hasStart } = this.state;\n    const { onSelectPath, session } = this.props;\n\n    const point = getGridPointInModelSpace(event.offsetX, event.offsetY);\n    if (!point) {\n      return;\n    }\n\n    if (session.design.getAt({ x: point.x, y: point.y, z: 0 })) {\n      return;\n    }\n\n    if (!hasStart) {\n      this.setState({ hasStart: true });\n      this.view.drawCircle(point.x, point.y);\n      this.view.update();\n      this.start = point;\n    } else if (this.start.x !== point.x || this.start.y !== point.y) {\n      session.monitor.setMessages([]);\n      this.view.drawCircle(point.x, point.y);\n      this.view.update();\n      this.end = point;\n      const path = calculatePath(session, this.start, this.end);\n\n      if (!path || path.length === 0) {\n        this.start = null;\n        this.end = null;\n        this.setState({ hasStart: false });\n        onSelectPath(path, -1);\n        return;\n      }\n\n      // do 2D walkthrough\n      const callback = () => {\n        this.start = null;\n        this.end = null;\n        this.setState({ hasStart: false });\n        // Currently 3 steps per 10 feet\n        const distance = ((path.length - 1) / stepsPer) * 10;\n        onSelectPath(path, distance);\n        this.isBusy = false;\n      };\n      const speed = 150 / stepsPer;\n      this.isBusy = true; // prevent multiple clicks from triggering multiple times\n      this.view.animateX(path, 0, speed, callback);\n    }\n  }\n\n  render() {\n    const { w, h } = SETTINGS;\n    return (\n      <div>\n        <canvas id=\"display\" width={w} height={h} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport CameraPath from './CameraPath';\nimport ChoosePath from './ChoosePath';\n\n/* global SETTINGS */\nexport default class CirculationPage extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    path: null,\n    distance: null\n  }\n\n  componentWillUnmount() {\n    const { session } = this.props;\n    session.monitor.setMessages([]);\n  }\n\n  render() {\n    const { path, distance } = this.state;\n    const { session } = this.props;\n\n    if (distance === -1) {\n      session.monitor.setMessages([`${SETTINGS.userName}, No path could be found.`]);\n    } else if (distance) {\n      session.monitor.setMessages([`${SETTINGS.userName}, I have arrived at the destination point`, `the trip distance (in feet) is ${distance}.`]);\n    }\n\n    return (\n      <div>\n        { !path\n          ? (\n            <ChoosePath\n              session={session}\n              onSelectPath={(path, distance) => this.setState({ path, distance })}\n            />\n          )\n          : (\n            <CameraPath\n              session={session}\n              path={path}\n              onWalkthroughEnd={() => {\n                setTimeout(() => this.setState({ path: null }), 500);\n              }}\n            />\n          )\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Menu from './Menu';\nimport Top from './Top';\nimport { getActions } from '../../api/enums/ActionsEnum';\n\nimport DrawPage from './DrawPage';\nimport TopoPage from './TopoPage';\nimport SurfacePage from './SurfacePage';\n\nimport CirculationPage from './CirculationPage';\n\n/** Class for rendering screen when a session has been started */\nexport default class SessionPageContainer extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    action: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    displayType: PropTypes.string.isRequired,\n    cameraView: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    setAction: PropTypes.func.isRequired,\n  }\n\n  onMenuClick = action => {\n    const { setAction } = this.props;\n    if (this.actionListeners) {\n      this.actionListeners.forEach(fn => {\n        fn(action);\n      });\n    }\n    if (!action.nonSelectable) {\n      setAction(action);\n    }\n  }\n\n  // These functions handle passing menu clicks to the page views\n  registerActionListener = fn => {\n    if (!this.actionListeners) {\n      this.actionListeners = [];\n    }\n    this.actionListeners.push(fn);\n  }\n\n  unregisterActionListener = fn => {\n    if (this.actionListeners) {\n      const index = this.actionListeners.indexOf(fn);\n      if (index > -1) {\n        this.actionListeners.splice(index, 1);\n      }\n    }\n  }\n\n  getDisplay = () => {\n    const { session, cameraView, action, displayType } = this.props;\n\n    if (!session || !action) {\n      return null;\n    }\n\n    switch (displayType) {\n      case 'DRAW':\n        return (\n          <DrawPage\n            action={action}\n            session={session}\n            cameraView={cameraView}\n            registerActionListener={this.registerActionListener}\n            unregisterActionListener={this.unregisterActionListener}\n          />\n        );\n      case 'CALC':\n        return (<CirculationPage session={session} />);\n      case 'TOPO':\n        return (<TopoPage action={action} session={session} />);\n      case 'SURF':\n        return (\n          <SurfacePage\n            action={action}\n            session={session}\n            cameraView={cameraView}\n            registerActionListener={this.registerActionListener}\n            unregisterActionListener={this.unregisterActionListener}\n          />\n        );\n      default:\n        break;\n    }\n\n    return null;\n  }\n\n  getActions = () => {\n    const { displayType } = this.props;\n    return getActions(displayType);\n  }\n\n  render() {\n    const { action, session } = this.props;\n    const actions = this.getActions();\n    return (\n      <div>\n        <div style={{ width: '864px', height: '100%', float: 'left' }}>\n          <div style={{ width: '864px', height: '160px' }}>\n            <div style={{ padding: '20px' }}>\n              <Top session={session} action={action} />\n            </div>\n          </div>\n          <div style={{ width: '852px', height: '852px', padding: '5px' }}>\n            {this.getDisplay()}\n          </div>\n        </div>\n        <div style={{ width: '160px', height: '100%', float: 'left' }}>\n          <div style={{ padding: '20px' }}>\n            <Menu actions={actions} onClick={this.onMenuClick} action={action} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport 'react-tabs/style/react-tabs.css';\n\nfunction HelpPage(props) {\n  const { displayType } = props;\n\n  let helpText;\n  switch (displayType) {\n    case 'START':\n      helpText = (\n        <div>\n          <p>&#8226; Select START NEW SESSION to create a new project</p>\n          <p>or</p>\n          <p>&#8226; Select a link to open a previously saved project.</p>\n        </div>\n      );\n      break;\n    case 'TOPO':\n      helpText = (\n        <div>\n          <p>Click on the grid to change the elevation of the topography.</p>\n          <p>The maximum elevation is 6, and the minimum is 0.</p>\n          <br />\n          <div style={{ textAlign: 'center', marginTop: '10px', marginBottom: '40px' }}>\n            <img src=\"./imgs/topoDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n          </div>\n        </div>\n      );\n      break;\n    case 'DRAW':\n      helpText = (\n        <div>\n          <p>The DRAW page is for adding/removing objects and constraints. The world is 17x17x7 in dimension. Each unit represents 10 ft.</p>\n          <br />\n          <Tabs>\n            <TabList>\n              <Tab>ADD/DELETE</Tab>\n              <Tab>CONSTRAINTS</Tab>\n              <Tab>CAMERA CONTROLS</Tab>\n            </TabList>\n\n            <TabPanel>\n              <p>Users can add and delete cubes, roofs, and trees.</p>\n              <div style={{ textAlign: 'center' }}>\n                <img src=\"./imgs/adddeleteDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n              </div>\n            </TabPanel>\n            <TabPanel>\n              <p>Users can add constraints for maximum height, maximum area, and minimum distance to access by selecting SPEAK, typing the constraint, and pressing ENTER.</p>\n              <br />\n              <p>Examples include:</p>\n              <ul>\n                <li>&quot;The maximum height for buildings is 30ft tall.&quot;</li>\n                <li>&quot;The total area of the building should be less than 500 sqft&quot;</li>\n                <li>&quot;No area should be more than 30 ft from access.&quot;</li>\n              </ul>\n            </TabPanel>\n            <TabPanel>\n              <p>Users can move the camera view by selecting step in/step out or lookleft/lookrght.</p>\n              <div style={{ textAlign: 'center' }}>\n                <img src=\"./imgs/cameraDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n              </div>\n            </TabPanel>\n          </Tabs>\n        </div>\n      );\n      break;\n    case 'SURF':\n      helpText = (\n        <div>\n          <p>The SURFACE page is for adding and removing surfaces on buildings. Surfaces determine access to buildings.</p>\n          <br />\n          <Tabs>\n            <TabList>\n              <Tab>ADD/REMOVE</Tab>\n              <Tab>CAMERA CONTROLS</Tab>\n            </TabList>\n\n            <TabPanel>\n              <p>Users can add or remove surfaces on the sides of cubes.</p>\n              <div style={{ textAlign: 'center' }}>\n                <img src=\"./imgs/surfDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n              </div>\n            </TabPanel>\n            <TabPanel>\n              <p>Users can move the camera view by selecting step in/step out or lookleft/lookrght.</p>\n              <div style={{ textAlign: 'center' }}>\n                <img src=\"./imgs/cameraDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n              </div>\n            </TabPanel>\n          </Tabs>\n        </div>\n      );\n      break;\n    case 'CALC':\n      helpText = (\n        <div>\n          <p>The CALC page allows the user to calculate circulation through the design and to see a 3D walkthrough.</p>\n          <p>To do a walkthrough, select a start and end point on the top-down view of the design.</p>\n          <br />\n          <div style={{ textAlign: 'center' }}>\n            <img src=\"./imgs/calcDemo.gif\" alt=\"Usage Demo\" style={{ height: '555px' }} />\n          </div>\n        </div>\n      );\n      break;\n    default:\n      helpText = 'Press the PANIC button to return.';\n      break;\n  }\n\n  return (\n    <div style={{ width: '984px', height: '100%', float: 'left', padding: '20px' }}>\n      <h3>{ `Help for: ${displayType} Page` }</h3>\n      <hr />\n      <div style={{ paddingTop: '8px', lineHeight: '30px' }}>{ helpText }</div>\n      <p style={{ position: 'absolute', top: '1016px' }}>{ `Press the PANIC button to return to the ${displayType} page at any time.` }</p>\n    </div>\n  );\n}\n\nHelpPage.propTypes = {\n  displayType: PropTypes.string.isRequired\n};\n\nexport default HelpPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** Class that renders various views helpful for debugging. */\nexport default class DebuggingConstraints extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n  }\n\n  state = {\n    constraints: [],\n    systemConstraints: [],\n    buildings: [],\n    objects: []\n  };\n\n  componentDidMount() {\n    const poll = () => {\n      const { session } = this.props;\n      const constraints = session._monitor.constraints.slice();\n      const systemConstraints = session._monitor.systemConstraints.slice();\n\n      const buildings = session._design._buildings;\n      const objects = session._design.getObjects();\n\n      this.setState({ constraints, systemConstraints, buildings, objects });\n      this.pollTimeout = setTimeout(poll, 500);\n    };\n    poll();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  getStringsFromConstraints = c => {\n    let type;\n    if (parseInt(c.type, 10) === 0) {\n      type = 'room';\n    } else if (parseInt(c.type, 10) === 1) {\n      type = 'roof';\n    } else {\n      type = 'structure';\n    }\n\n    return `\"${c.text}\":\\n${c.fn} ${c.prop} of ${type} ${c.comp} ${c.value} == ${c.result}\\n\\n`;\n  }\n\n  render() {\n    const { constraints, systemConstraints, buildings } = this.state;\n\n    return (\n      <div>\n        <div>\n          <h3>User Constraints:</h3>\n          <div>{ constraints.map(c => (<div key={c.text} style={{ whiteSpace: 'pre' }}>{ this.getStringsFromConstraints(c) }</div>)) }</div>\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <h3>System Constraints:</h3>\n          <div>{ systemConstraints.map(c => (<div key={c.text} style={{ whiteSpace: 'pre' }}>{ this.getStringsFromConstraints(c) }</div>)) }</div>\n        </div>\n        <div style={{ marginTop: '20px' }}>\n          <h3>Buildings:</h3>\n          <div>{ JSON.stringify(buildings) }</div>\n        </div>\n        {/*<div style={{ marginTop: '20px' }}>\n          <h3>Objects:</h3>\n          <div>{ JSON.stringify(objects) }</div>\n        </div>*/}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CameraPathView from '../../js/CameraPathView';\n\n/* global document */\n\n/** Class for the 3D fly throughs of the model */\nexport default class Debugging3D extends React.Component {\n  static propTypes = {\n    session: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    cameraView: PropTypes.object.isRequired, // eslint-disable-line react/forbid-prop-types\n    size: PropTypes.number.isRequired\n  }\n\n  componentDidMount() {\n    this.container = document.getElementById('debuggingDisplay3D');\n\n    const { session, cameraView, size } = this.props;\n    this.view = new CameraPathView(this.container, session, cameraView, 20);\n    this.view.renderer.setSize(size - 1, size - 1);\n    this.target = { x: 8, y: 8, z: 0 };\n    const z = 35;\n    const offset = 55;\n    const radius = 8;\n    const cameraRadius = 8 + offset;\n    const viewCount = 8;\n    const increment = Math.PI * 2 / viewCount;\n    this.origins = [];\n    for (let i = 0; i < viewCount; i += 1) {\n      const viewPoint = {\n        x: (cameraRadius * Math.cos((i * increment) + (Math.PI * -0.5))) + radius,\n        y: (cameraRadius * Math.sin((i * increment) + (Math.PI * -0.5))) + radius,\n        z\n      };\n      this.origins.push(viewPoint);\n    }\n\n    this.location = -1;\n    this.nextRotation();\n  }\n\n  componentWillUnmount() {\n    if (this.pollTimeout) {\n      clearTimeout(this.pollTimeout);\n    }\n  }\n\n  startPoll = () => {\n    const { session, cameraView } = this.props;\n    clearTimeout(this.pollTimeout);\n\n    let lastCameraView = {};\n    let lastNumObjects = 0;\n    let lastTotalHeight = 0;\n    const poll = () => {\n      this.pollTimeout = setTimeout(() => {\n        if (session) {\n          const numObjects = session.design.getObjects().length;\n          const totalHeight = session._topo.heights.reduce((total, num) => total + num);\n          if (cameraView.camera !== lastCameraView.camera || cameraView.slices.x !== lastCameraView.slices.x\n              || cameraView.slices.y !== lastCameraView.slices.y || cameraView.slices.z !== lastCameraView.slices.z || numObjects !== lastNumObjects || totalHeight !== lastTotalHeight) {\n            this.view.render();\n            lastCameraView = {\n              camera: cameraView.camera,\n              slices: {\n                x: cameraView.slices.x,\n                y: cameraView.slices.y,\n                z: cameraView.slices.z,\n              }\n            };\n            lastNumObjects = numObjects;\n            lastTotalHeight = totalHeight;\n          }\n        }\n        poll();\n      }, 100);\n    };\n    poll();\n  }\n\n  nextRotation = () => {\n    this.location = (this.location + 1) % this.origins.length;\n    this.view.setCameraPosition(this.origins[this.location], this.target);\n  }\n\n  render() {\n    this.startPoll();\n\n    return (\n      <div>\n        <div id=\"debuggingDisplay3D\" style={{ textAlign: 'center' }} />\n        <button type=\"button\" style={{ border: '1px solid #E8E8DA', margin: '10px', padding: '4px 10px', color: '#E8E8DA' }} onMouseDown={this.nextRotation}>Toggle Rotate</button>\n      </div>\n    );\n  }\n}\n","/* global window */\n/* global navigator */\n\nexport default class ControlPad {\n  constructor(onButtonPress) {\n    this.buttonCache = {};\n    this.onButtonPress = onButtonPress;\n    this.eventListener = () => this._loop();\n    window.addEventListener('gamepadconnected', this.eventListener);\n  }\n\n  // clean up the event listener and\n  remove() {\n    window.removeEventListener('gamepadconnected', this.eventListener);\n    if (this.controlPadTimeout) {\n      clearTimeout(this.controlPadTimeout);\n    }\n  }\n\n  _loop() {\n    // make sure there is only one loop being called\n    if (this.controlPadTimeout) {\n      clearTimeout(this.controlPadTimeout);\n    }\n\n    // need to retrieve every time for Chrome\n    const gamepads = navigator.getGamepads();\n    // assume there is only one gamepad hooked up\n    if (gamepads && gamepads.length > 0 && gamepads[0] && gamepads[0].buttons) {\n      gamepads[0].buttons.forEach((button, i) => {\n        // if currently pressed and cache doesn't show that it was being pressed, fire event\n        if (button.pressed && !this.buttonCache[i]) {\n          // fires once per press\n          console.log(`Control Pad Key: ${i}`);\n          this.onButtonPress(i);\n        }\n        this.buttonCache[i] = button.pressed;\n      });\n    }\n\n    this.controlPadTimeout = setTimeout(() => this._loop(), 20);\n  }\n}\n","/*\n  Use this file to map the control pad wiring to the functions of the program.\n\n  To do this, plug in the control pad and test out the buttons. Open the browser's console\n  under the menu: View -> Developer -> JavaScript Console. Then, observe the logs for:\n  'Control Pad Key: ${i}' to see which control pad keys map to which values.\n\n  Then, update 'controlPadMapping' to map the control pad value to the action id.\n\n  If more actions are needed, update the handleActions() function in src/ui/components/Main.js.\n */\n\n// Action ids:\n// 0: TOPO\n// 1: DRAW\n// 2: SURF\n// 3: CALC (circulation)\n// 4: MENU ITEM 1\n// 5: MENU ITEM 2\n// 6: MENU ITEM 3\n// 10: MENU ITEM 4\n// 11: MENU ITEM 5\n// 12: MENU ITEM 6\n// 16: START\n// 17: RESTA.\n// 18: STORE (Save)\n// 19: PANIC\n\n// first value is the value from the control pad ('Control Pad Key: ${i}') and\n// the second value is the id of the action from the list above.\nconst controlPadMapping = {\n  1: 0,\n  0: 1,\n  2: 2,\n  3: 3,\n  4: 4,\n  5: 5,\n  6: 6,\n  9: 10,\n  8: 11,\n  7: 12,\n  10: 16,\n  11: 18\n};\n\nexport default controlPadMapping;\n","import React from 'react';\nimport * as THREE from 'three';\n\nimport StartPage from './StartPage';\nimport SessionPageContainer from './SessionPageContainer';\nimport HelpPage from '../../HelpPage';\nimport DebuggingConstraints from './debugging/DebuggingConstraints';\nimport Debugging3D from './debugging/Debugging3D';\nimport ActionsEnum, { getActions } from '../../api/enums/ActionsEnum';\nimport ControlPad from '../../helpers/ControlPad';\nimport U5SessionFactory from '../../api/U5SessionFactory';\nimport controlPadMapping from '../../controlPadMapping';\n\n/* global window */\n/* global document */\n\n// When not in kiosk mode:\n// enable hot keys\nconst { isKioskMode } = window.URBAN5_flags;\n\n// Create a global settings object for shared settings across the project\nconst SETTINGS = {\n  w: 852,\n  h: 852,\n  color: '#E8E8DA',\n  gridSize: 17,\n  xMax: 17,\n  yMax: 17,\n  zMax: 7,\n  r: 50,\n  material: new THREE.LineBasicMaterial({ color: 0xE8E8DA }),\n  stroke: 3.5,\n  clippingMax: 1,\n  userName: 'User',\n  enableHotKeys: !isKioskMode\n};\nwindow.SETTINGS = SETTINGS;\n\nconst defaultMainPageSettings = {\n  // action: ActionsEnum.ADDCUBE, // Default action is ADDCUBE\n  // displayType: 'DRAW',\n  action: ActionsEnum.INCREASE_HEIGHT, // Default action is ADDCUBE\n  displayType: 'TOPO',\n};\n\nconst defaultCameraView = () => (\n  {\n    camera: 0,\n    slices: {\n      x: 0,\n      y: 8,\n      z: 0\n    }\n  }\n);\n\nexport default class Main extends React.Component {\n  state = {\n    debugView: 0,\n    session: null,\n    cameraView: defaultCameraView(),\n    restartIndex: 0,\n    isPanic: false,\n    displayType: null,\n    action: null,\n    aboutToRestart: false\n  }\n\n  componentDidMount() {\n    if (SETTINGS.enableHotKeys) {\n      document.addEventListener('keydown', this.handleKeyDown);\n    }\n    this.controlPad = new ControlPad(i => this.handleControlPadButtonPress(i));\n    this.startSession(new U5SessionFactory().newSession());\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { displayType, session } = this.state;\n    const { displayType: prevDisplayType } = prevState;\n    if (displayType !== prevDisplayType) {\n      // Add instructions for each page as message on switch\n      switch (displayType) {\n        case 'TOPO':\n          session.monitor.setMessages(['Click the grid to increase elevation in the topography.']);\n          break;\n        case 'DRAW':\n          session.monitor.setMessages(['Click to add a cube.']);\n          break;\n        case 'SURF':\n          session.monitor.setMessages(['Click to remove surfaces on cubes to add access.']);\n          break;\n        case 'CALC':\n          session.monitor.setMessages(['Select a start and end point for the path.']);\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    if (SETTINGS.enableHotKeys) {\n      document.removeEventListener('keydown', this.handleKeyDown);\n    }\n    this.controlPad.remove();\n  }\n\n  // Hot keys for testing purposes\n  handleKeyDown = event => {\n    const { action, aboutToRestart, session } = this.state;\n    if (aboutToRestart) {\n      if (event.keyCode === 89 && aboutToRestart) { // if y\n        this.restart();\n      }\n      // exit mode\n      session.monitor.setMessages([]);\n      this.setState({ aboutToRestart: false });\n      return;\n    }\n\n    if (action === ActionsEnum.SPEAK_CONSTRAINT) {\n      // do nothing, trying to type message\n      return;\n    }\n\n    // Map keys 1-0 to actions for testing purposes\n    if (event.keyCode >= 48 && event.keyCode <= 57) {\n      if (event.keyCode >= 49 && event.keyCode <= 52) {\n        this.handleActions(event.keyCode - 49); // top row\n      } else if (event.keyCode >= 53 && event.keyCode <= 56) {\n        this.handleActions(event.keyCode - 53 + 16); // bottom row\n      } else if (event.keyCode === 57) {\n        this.handleActions(4); // first num button\n      } else if (event.keyCode === 48) {\n        this.handleActions(5); // second num button\n      }\n      return;\n    }\n\n    switch (event.keyCode) {\n      case 112: // F1\n        this.setState({ debugView: 0 });\n        break;\n      case 113: // F2\n        this.setState({ debugView: 1 });\n        break;\n      case 114: // F3\n        this.setState({ debugView: 2 });\n        break;\n      case 115: // F4\n        this.setState({ debugView: 3 });\n        break;\n      case 116: // F5\n        document.body.classList.add('touch');\n        break;\n      // case 27: // ESC\n      //   this.restart();\n      //   break;\n      // case 191: // /\n      //   this.state.session.monitor.clearConstraints(); // eslint-disable-line\n      //   break;\n      // case 220: // \\\n      //   this.state.session.clear(); // eslint-disable-line\n      //   location.reload(); // eslint-disable-line\n      //   break;\n      default:\n        break;\n    }\n  }\n\n  handleControlPadButtonPress = i => {\n    console.log(`Control Pad: ${i} pressed`); // eslint-disable-line\n    this.handleActions(controlPadMapping[i]);\n  }\n\n  startSession = session => {\n    const cameraView = defaultCameraView();\n    this.setState({ session, cameraView, ...defaultMainPageSettings });\n  }\n\n  // Reset the system for a new user\n  restart = () => {\n    const { restartIndex } = this.state;\n    const { onRestart } = this.props;\n    const newSession = new U5SessionFactory().newSession();\n    this.setState({\n      session: newSession,\n      cameraView: defaultCameraView(),\n      restartIndex: restartIndex + 1,\n      isPanic: false,\n      ...defaultMainPageSettings\n    });\n    onRestart();\n  }\n\n  // handles all the button actions possible for this app\n  handleActions(i) {\n    const { session, isPanic, displayType } = this.state;\n    console.log(`Do action ${i}`); // eslint-disable-line\n\n    if (i === 17) { // (procedural -> RESTA.)\n      console.log('procedural -> RESTA.'); // eslint-disable-line\n      // TODO: add a confirmation?\n      session.monitor.setMessages(['Are you sure you want to restart (y)?']);\n      this.setState({ aboutToRestart: true });\n      return;\n    }\n\n    if (i === 19) { // (theraputic -> PANIC)\n      console.log('theraputic -> PANIC'); // eslint-disable-line\n      this.setState({\n        isPanic: !isPanic\n      });\n      return;\n    }\n    this.setState({\n      isPanic: false\n    });\n\n    if (!session) {\n      // disable all other actions when no session\n      return;\n    }\n\n    const actions = getActions(displayType);\n    switch (i) {\n      case 16: // (graphical -> START)\n        console.log('graphical -> START'); // eslint-disable-line\n        this.setState({\n          displayType: 'START'\n        });\n        break;\n      case 0: // (graphical -> TOPO)\n        console.log('graphical -> TOPO'); // eslint-disable-line\n        this.setState({\n          displayType: 'TOPO',\n          action: ActionsEnum.INCREASE_HEIGHT\n        });\n        break;\n      case 1: // (graphical -> DRAW)\n        console.log('graphical -> DRAW'); // eslint-disable-line\n        this.setState({\n          displayType: 'DRAW',\n          action: ActionsEnum.ADDCUBE\n        });\n        break;\n      case 2: // (graphical -> SURF)\n        console.log('graphical -> SURF'); // eslint-disable-line\n        this.setState({\n          displayType: 'SURF',\n          action: ActionsEnum.NO_SURFACE\n        });\n        break;\n      case 3: // (operational -> circul.)\n        console.log('operational -> circul.'); // eslint-disable-line\n        this.setState({\n          displayType: 'CALC'\n        });\n        break;\n      case 4: // (symbolic -> 0)\n        console.log('symbolic -> 0'); // eslint-disable-line\n        if (actions && actions.length > 0) {\n          document.querySelectorAll('#menu button')[0].click();\n        }\n        break;\n      case 5: // (symbolic -> 1)\n        console.log('symbolic -> 1'); // eslint-disable-line\n        if (actions && actions.length > 1) {\n          document.querySelectorAll('#menu button')[1].click();\n        }\n        break;\n      case 6: // (symbolic -> 2)\n        console.log('symbolic -> 2'); // eslint-disable-line\n        if (actions && actions.length > 2) {\n          document.querySelectorAll('#menu button')[2].click();\n        }\n        break;\n      case 10: // (symbolic -> 10)\n        console.log('symbolic -> 10'); // eslint-disable-line\n        if (actions && actions.length > 4) {\n          document.querySelectorAll('#menu button')[4].click();\n        }\n        break;\n      case 11: // (symbolic -> 11)\n        console.log('symbolic -> 11'); // eslint-disable-line\n        if (actions && actions.length > 5) {\n          document.querySelectorAll('#menu button')[5].click();\n        }\n        break;\n      case 12: // (symbolic -> 12)\n        console.log('symbolic -> 12'); // eslint-disable-line\n        if (actions && actions.length > 6) {\n          document.querySelectorAll('#menu button')[6].click();\n        }\n        break;\n      case 18: // (procedural -> STORE)\n        console.log('procedural -> STORE'); // eslint-disable-line\n        session.save();\n        session.monitor.setMessages(['Session saved.']);\n        break;\n      default:\n        break;\n    }\n  }\n\n  renderDebug = () => {\n    const { session, cameraView, debugView } = this.state;\n    switch (debugView) {\n      case 1:\n        // Render all 3\n        return (\n          <div>\n            { this.renderSessionPage() }\n            <div style={{ position: 'absolute', right: '20px', top: '20px', color: '#000', border: '1px solid #E8E8DA', width: '500px' }}>\n              <Debugging3D key={`debug3d_${session._id}`} session={session} cameraView={cameraView} size={500} />\n            </div>\n            <div style={{ position: 'absolute', left: '20px', top: '20px', width: '500px', wordWrap: 'break-word', border: '1px solid #E8E8DA', padding: '10px 10px 40px 10px', fontSize: '16px' }}>\n              <DebuggingConstraints key={`debug_con_${session._id}`} session={session} />\n            </div>\n          </div>\n        );\n      case 2:\n        return (\n          <div style={{ width: '100%' }}>\n            <Debugging3D key={`debug3d_${session._id}`} session={session} cameraView={cameraView} size={962} />\n          </div>\n        );\n      case 3:\n        return (<DebuggingConstraints key={`debug_con_${session._id}`} session={session} />);\n      default:\n        return null;\n    }\n  }\n\n  renderSessionPage = () => {\n    const { session, action, displayType, cameraView } = this.state;\n    return (\n      <SessionPageContainer\n        key={`session_${session._id}`}\n        session={session}\n        action={action}\n        displayType={displayType}\n        cameraView={cameraView}\n        setAction={action => this.setState({ action })}\n      />\n    );\n  }\n\n  renderContent() {\n    const { session, restartIndex, displayType, isPanic, debugView } = this.state;\n\n    // first of all if isPanic, render panic page\n    if (isPanic) {\n      return <HelpPage displayType={displayType} />;\n    }\n\n    // render start page if no session\n    if (session === null || displayType === 'START') {\n      return <StartPage key={restartIndex} onSelectSession={this.startSession} />;\n    }\n\n    // if debug enabled, render\n    if (debugView !== 0) {\n      return this.renderDebug();\n    }\n\n    // render session\n    return this.renderSessionPage();\n  }\n\n  render() {\n    return this.renderContent();\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlPad from '../../helpers/ControlPad';\n\n/* global document */\n\n// Display some content and fire onDismiss on any action (to probably remove)\nexport default class Modal extends React.Component {\n  static propTypes = {\n    onDismiss: PropTypes.func.isRequired,\n    children: PropTypes.node.isRequired\n  }\n\n  componentDidMount() {\n    // Dismiss on any action\n    const { onDismiss } = this.props;\n    // Need timeout to prevent click that triggers open from triggering these\n    setTimeout(() => {\n      document.addEventListener('keydown', onDismiss);\n      document.addEventListener('mousedown', onDismiss);\n      this.controlPad = new ControlPad(onDismiss);\n    }, 0);\n  }\n\n  componentWillUnmount() {\n    const { onDismiss } = this.props;\n    document.removeEventListener('keydown', onDismiss);\n    document.removeEventListener('mousedown', onDismiss);\n    this.controlPad.remove();\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div style={{ paddingTop: '20px' }}>\n        { children }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Main from './Main';\nimport TextInput from './TextInput';\nimport Modal from './Modal';\n\n/* global window */\n\n// Front door for new user session\nexport default class UserSession extends React.Component {\n  state = {\n    hasUserName: false,\n    hasFinishedInstructions: false\n  }\n\n  setUserName(userName) {\n    window.SETTINGS.userName = userName || 'User';\n    this.setState({ hasUserName: true });\n  }\n\n  renderAskUserName() {\n    return (\n      <div style={{ padding: '20px' }}>\n        <div>What is your name?</div>\n        <TextInput onSubmit={userName => this.setUserName(userName)} />\n      </div>\n    );\n  }\n\n  renderInstructions() {\n    return (\n      <Modal onDismiss={() => this.setState({ hasFinishedInstructions: true })}>\n        <div>{ `Welcome ${window.SETTINGS.userName}! Use URBAN5 to:` }</div>\n        <br />\n        <ul>\n          <li>define a topography</li>\n          <li>create design constraints</li>\n          <li>add objects</li>\n          <li>edit surfaces</li>\n          <li>calculate circulation</li>\n        </ul>\n        <br />\n        <div style={{ textAlign: 'center' }}>\n          <video src=\"./imgs/startdemo.mp4\" autoPlay muted loop style={{ height: '740px' }} />\n        </div>\n      </Modal>\n    );\n  }\n\n  render() {\n    const { hasUserName, hasFinishedInstructions } = this.state;\n    const { onRestart } = this.props;\n\n    let body;\n    if (!hasUserName) {\n      body = this.renderAskUserName();\n    } else if (!hasFinishedInstructions) {\n      body = this.renderInstructions();\n    } else {\n      body = <Main onRestart={onRestart} />;\n    }\n\n    return body;\n  }\n}\n","import React from 'react';\n\nexport default function Demo() {\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <video src=\"./imgs/startdemo.mp4\" autoPlay muted loop style={{ width: '100%' }} />\n    </div>\n  );\n}\n","import React from 'react';\nimport UserSession from './ui/components/UserSession';\nimport Demo from './Demo';\nimport ControlPad from './helpers/ControlPad';\nimport './App.css';\n\n/* global document */\n/* global window */\n\n// When not in kiosk mode:\n// isKioskMode: show mouse on screen, enable hot keys\n// timeout: time before resetting app to demo video (timeout in minutes)\nconst { isKioskMode, timeout } = window.URBAN5_flags;\n\n// When no interaction has happened with the system for the duration of the timeout, go to demo\n// When there is any interaction in demo mode, clear\nexport default class App extends React.Component {\n  state = {\n    isDemo: true,\n  }\n\n  componentDidMount() {\n    // Reset the demo countdown on any user action\n    document.addEventListener('keydown', this.handleKeyDown);\n    document.addEventListener('mousedown', this.leaveDemo);\n    this.controlPad = new ControlPad(this.leaveDemo);\n  }\n\n  componentWillUnmount() {\n    if (this.resetTimer) {\n      clearTimeout(this.resetTimer);\n    }\n\n    document.removeEventListener('keydown', this.handleKeyDown);\n    document.removeEventListener('mousedown', this.leaveDemo);\n    this.controlPad.remove();\n  }\n\n  handleKeyDown = event => {\n    if (event.keyCode === 27) { // esc\n      if (!isKioskMode) { // Only allow esc key in test mode\n        this.goToDemo();\n      }\n    } else {\n      this.leaveDemo();\n    }\n  }\n\n  goToDemo = () => this.setState({ isDemo: true })\n\n  leaveDemo = () => {\n    const { isDemo } = this.state;\n    if (isDemo) { // update state if in demo mode\n      this.setState({ isDemo: false });\n    }\n    if (this.resetTimer) {\n      clearTimeout(this.resetTimer);\n    }\n    this.resetTimer = setTimeout(this.goToDemo, 60000 * timeout);\n  }\n\n  render() {\n    const { isDemo } = this.state;\n\n    if (isKioskMode) { // in exhibition, hide cursor\n      document.body.classList.add('hide-cursor');\n    }\n\n    return (\n      <div className=\"app\">\n        {\n          isDemo\n            ? <Demo />\n            : <UserSession onRestart={() => this.goToDemo()} />\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n/* global document */\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}